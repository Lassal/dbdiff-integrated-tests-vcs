schema: SYS
name: DBMS_PARALLEL_EXECUTE
routineType: PACKAGE
returnParamater:
  name: TASK_STATUS.(--return--)
  ordinalPosition: 0
  dataType: NUMBER
  parameterMode: OUT
parameters:
- name: ADM_DROP_CHUNKS.TASK_OWNER
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: ADM_DROP_CHUNKS.TASK_NAME
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: ADM_DROP_TASK.TASK_OWNER
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: ADM_DROP_TASK.TASK_NAME
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: ADM_STOP_TASK.TASK_OWNER
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: ADM_STOP_TASK.TASK_NAME
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: ADM_TASK_STATUS.TASK_OWNER
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: ADM_TASK_STATUS.TASK_NAME
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: CREATE_CHUNKS_BY_NUMBER_COL.TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: CREATE_CHUNKS_BY_NUMBER_COL.TABLE_OWNER
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: CREATE_CHUNKS_BY_NUMBER_COL.TABLE_NAME
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: CREATE_CHUNKS_BY_NUMBER_COL.TABLE_COLUMN
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: CREATE_CHUNKS_BY_NUMBER_COL.CHUNK_SIZE
  ordinalPosition: 5
  dataType: NUMBER
  parameterMode: IN
- name: CREATE_CHUNKS_BY_ROWID.TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: CREATE_CHUNKS_BY_ROWID.TABLE_OWNER
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: CREATE_CHUNKS_BY_ROWID.TABLE_NAME
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: CREATE_CHUNKS_BY_ROWID.BY_ROW
  ordinalPosition: 4
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
- name: CREATE_CHUNKS_BY_ROWID.CHUNK_SIZE
  ordinalPosition: 5
  dataType: NUMBER
  parameterMode: IN
- name: CREATE_CHUNKS_BY_SQL.TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: CREATE_CHUNKS_BY_SQL.SQL_STMT
  ordinalPosition: 2
  dataType: CLOB
  parameterMode: IN
- name: CREATE_CHUNKS_BY_SQL.BY_ROWID
  ordinalPosition: 3
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
- name: CREATE_TASK.TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: CREATE_TASK.COMMENT
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: DROP_CHUNKS.TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: DROP_TASK.TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATE_TASK_NAME.PREFIX
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: GET_NUMBER_COL_CHUNK.TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: GET_NUMBER_COL_CHUNK.CHUNK_ID
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: OUT
- name: GET_NUMBER_COL_CHUNK.START_ID
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: OUT
- name: GET_NUMBER_COL_CHUNK.END_ID
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: OUT
- name: GET_NUMBER_COL_CHUNK.ANY_ROWS
  ordinalPosition: 5
  dataType: PL/SQL BOOLEAN
  parameterMode: OUT
- name: GET_ROWID_CHUNK.TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: GET_ROWID_CHUNK.CHUNK_ID
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: OUT
- name: GET_ROWID_CHUNK.START_ROWID
  ordinalPosition: 3
  dataType: ROWID
  parameterMode: OUT
- name: GET_ROWID_CHUNK.END_ROWID
  ordinalPosition: 4
  dataType: ROWID
  parameterMode: OUT
- name: GET_ROWID_CHUNK.ANY_ROWS
  ordinalPosition: 5
  dataType: PL/SQL BOOLEAN
  parameterMode: OUT
- name: PURGE_PROCESSED_CHUNKS.TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: RESUME_TASK(1).TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: RESUME_TASK(1).SQL_STMT
  ordinalPosition: 2
  dataType: CLOB
  parameterMode: IN
- name: RESUME_TASK(1).LANGUAGE_FLAG
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: RESUME_TASK(1).EDITION
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: RESUME_TASK(1).APPLY_CROSSEDITION_TRIGGER
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: RESUME_TASK(1).FIRE_APPLY_TRIGGER
  ordinalPosition: 6
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
- name: RESUME_TASK(1).PARALLEL_LEVEL
  ordinalPosition: 7
  dataType: NUMBER
  parameterMode: IN
- name: RESUME_TASK(1).JOB_CLASS
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: RESUME_TASK(1).FORCE
  ordinalPosition: 9
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
- name: RESUME_TASK(2).TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: RESUME_TASK(2).FORCE
  ordinalPosition: 2
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
- name: RUN_INTERNAL_WORKER.TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: RUN_INTERNAL_WORKER.JOB_NAME
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: RUN_TASK.TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: RUN_TASK.SQL_STMT
  ordinalPosition: 2
  dataType: CLOB
  parameterMode: IN
- name: RUN_TASK.LANGUAGE_FLAG
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: RUN_TASK.EDITION
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: RUN_TASK.APPLY_CROSSEDITION_TRIGGER
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: RUN_TASK.FIRE_APPLY_TRIGGER
  ordinalPosition: 6
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
- name: RUN_TASK.PARALLEL_LEVEL
  ordinalPosition: 7
  dataType: NUMBER
  parameterMode: IN
- name: RUN_TASK.JOB_CLASS
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: SET_CHUNK_STATUS.TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: SET_CHUNK_STATUS.CHUNK_ID
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SET_CHUNK_STATUS.STATUS
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: SET_CHUNK_STATUS.ERR_NUM
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: SET_CHUNK_STATUS.ERR_MSG
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: STOP_TASK.TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: TASK_STATUS.TASK_NAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
routineDefinition: |-
  package dbms_parallel_execute AUTHID CURRENT_USER AS --
  -- Chunk status value
  --
  UNASSIGNED CONSTANT NUMBER: = 0;
  ASSIGNED CONSTANT NUMBER: = 1;
  PROCESSED CONSTANT NUMBER: = 2;
  PROCESSED_WITH_ERROR CONSTANT NUMBER: = 3;
  --
  -- Task Status value
  --
  CREATED CONSTANT NUMBER: = 1;
  CHUNKING CONSTANT NUMBER: = 2;
  CHUNKING_FAILED CONSTANT NUMBER: = 3;
  NO_CHUNKS CONSTANT NUMBER: = 4;
  CHUNKED CONSTANT NUMBER: = 5;
  PROCESSING CONSTANT NUMBER: = 6;
  FINISHED CONSTANT NUMBER: = 7;
  FINISHED_WITH_ERROR CONSTANT NUMBER: = 8;
  CRASHED CONSTANT NUMBER: = 9;
  --
  -- Exceptions
  --
  MISSING_ROLE
  EXCEPTION;
  pragma exception_init(MISSING_ROLE, -29490);
  INVALID_TABLE
  EXCEPTION;
  pragma exception_init(INVALID_TABLE, -29491);
  INVALID_STATE_FOR_CHUNK
  EXCEPTION;
  pragma exception_init(INVALID_STATE_FOR_CHUNK, -29492);
  INVALID_STATUS
  EXCEPTION;
  pragma exception_init(INVALID_STATUS, -29493);
  INVALID_STATE_FOR_RUN
  EXCEPTION;
  pragma exception_init(INVALID_STATE_FOR_RUN, -29494);
  INVALID_STATE_FOR_RESUME
  EXCEPTION;
  pragma exception_init(INVALID_STATE_FOR_RESUME, -29495);
  DUPLICATE_TASK_NAME
  EXCEPTION;
  pragma exception_init(DUPLICATE_TASK_NAME, -29497);
  TASK_NOT_FOUND
  EXCEPTION;
  pragma exception_init(TASK_NOT_FOUND, -29498);
  CHUNK_NOT_FOUND
  EXCEPTION;
  pragma exception_init(CHUNK_NOT_FOUND, -29499);
  -- Create/Drop Task Procedure
    function generate_task_name(prefix in varchar2 default 'TASK$_') return varchar2;
  procedure create_task(
      task_name in varchar2,
      comment in varchar2 default null
    );
  procedure drop_task(task_name in varchar2);
  -- Create/Drop Chunks Procedures
    procedure create_chunks_by_rowid(
      task_name in varchar2,
      table_owner in varchar2,
      table_name in varchar2,
      by_row in boolean,
      chunk_size in number
    );
  procedure create_chunks_by_number_col(
      task_name in varchar2,
      table_owner in varchar2,
      table_name in varchar2,
      table_column in varchar2,
      chunk_size in number
    );
  procedure create_chunks_by_SQL(
      task_name in varchar2,
      sql_stmt in clob,
      by_rowid in boolean
    );
  procedure drop_chunks(task_name in varchar2);
  -- Individual Chunk retrieval and processing Procedures
    procedure get_rowid_chunk(
      task_name in varchar2,
      chunk_id out number,
      start_rowid out rowid,
      end_rowid out rowid,
      any_rows out boolean
    );
  procedure get_number_col_chunk(
      task_name in varchar2,
      chunk_id out number,
      start_id out number,
      end_id out number,
      any_rows out boolean
    );
  procedure set_chunk_status(
      task_name in varchar2,
      chunk_id in number,
      status in number,
      err_num in number default null,
      err_msg in varchar2 default null
    );
  procedure purge_processed_chunks(task_name in varchar2);
  -- Task Status Retrieval Procesure
    function task_status(task_name in varchar2) return number;
  -- Parallel Execution procedure: run, stop, resume
    procedure run_task(
      task_name in varchar2,
      sql_stmt in clob,
      language_flag in number,
      edition in varchar2 default NULL,
      apply_crossedition_trigger in varchar2 default NULL,
      fire_apply_trigger in boolean default TRUE,
      parallel_level in number default 0,
      job_class in varchar2 default 'DEFAULT_JOB_CLASS'
    );
  procedure resume_task(
      task_name in varchar2,
      sql_stmt in clob,
      language_flag in number,
      edition in varchar2 default NULL,
      apply_crossedition_trigger in varchar2 default NULL,
      fire_apply_trigger in boolean default TRUE,
      parallel_level in number default 0,
      job_class in varchar2 default 'DEFAULT_JOB_CLASS',
      force in boolean default FALSE
    );
  procedure resume_task(
      task_name in varchar2,
      force in boolean default FALSE
    );
  procedure stop_task(task_name in varchar2);
  -- CUSTOMER SHOULD NOT use this one.
    -- This is an internal routine for parallel execution.
    procedure run_internal_worker(
      task_name in varchar2,
      job_name in varchar2
    );
  -- Administrative Procedure
    --   All of the following subroutines requires ADM_PARALLEL_EXECUTE role.
    procedure adm_drop_task(
      task_owner in varchar2,
      task_name in varchar2
    );
  procedure adm_drop_chunks(
      task_owner in varchar2,
      task_name in varchar2
    );
  function adm_task_status(
      task_owner in varchar2,
      task_name in varchar2
    ) return number;
  procedure adm_stop_task(
      task_owner in varchar2,
      task_name in varchar2
    );
  end;
