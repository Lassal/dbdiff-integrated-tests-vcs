schema: SYS
name: DBMS_AW_EXP
routineType: PACKAGE
returnParamater:
  name: TRANSPORTING.(--return--)
  dataType: PL/SQL BOOLEAN
  parameterMode: OUT
  ordinalPosition: 0
parameters:
- name: ALTER_LOB_SIZE.NEWSIZE
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_BEGIN100.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_BEGIN100.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: IMPORT_BEGIN112.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_BEGIN112.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: IMPORT_BEGIN120.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_BEGIN120.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: IMPORT_BEGIN92.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_BEGIN92.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: IMPORT_CALLOUT112.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_CALLOUT120.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_CHUNK100.AMT
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_CHUNK100.STREAM
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: IMPORT_CHUNK112.AMT
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_CHUNK112.STREAM
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: IMPORT_CHUNK120.AMT
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_CHUNK120.STREAM
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: IMPORT_CHUNK92.AMT
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_CHUNK92.STREAM
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: IMPORT_FINISH100.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_FINISH100.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: IMPORT_FINISH112.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_FINISH112.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: IMPORT_FINISH120.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_FINISH120.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: IMPORT_FINISH92.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_FINISH92.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: IMPORT_TABLE_CALLOUT120.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: IMPORT_TABLE_CALLOUT120.TABNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: IMPORT_TABLE_CALLOUT120.PREPORT
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 3
- name: INSTANCE_CALLOUT_IMP.OBJ_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: INSTANCE_CALLOUT_IMP.OBJ_SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: INSTANCE_CALLOUT_IMP.OBJ_TYPE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: INSTANCE_CALLOUT_IMP.PREPOST
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 4
- name: INSTANCE_CALLOUT_IMP.ACTION
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 5
- name: INSTANCE_CALLOUT_IMP.ALT_NAME
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 6
- name: INSTANCE_EXTENDED_INFO_EXP.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: INSTANCE_EXTENDED_INFO_EXP.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: INSTANCE_EXTENDED_INFO_EXP.NAMESPACE
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 3
- name: INSTANCE_EXTENDED_INFO_EXP.TYPE
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 4
- name: INSTANCE_EXTENDED_INFO_EXP.PREPOST
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 5
- name: INSTANCE_EXTENDED_INFO_EXP.EXP_USER
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 6
- name: INSTANCE_EXTENDED_INFO_EXP.ISDBA
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 7
- name: INSTANCE_EXTENDED_INFO_EXP.VERSION
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 8
- name: INSTANCE_EXTENDED_INFO_EXP.NEW_BLOCK
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 9
- name: LOB_WRITE(1).WLOB
  dataType: BLOB
  parameterMode: INOUT
  ordinalPosition: 1
- name: LOB_WRITE(1).POS
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 2
- name: LOB_WRITE(1).DATA
  dataType: TABLE
  parameterMode: IN
  ordinalPosition: 3
- name: LOB_WRITE(2).WLOB
  dataType: CLOB
  parameterMode: INOUT
  ordinalPosition: 1
- name: LOB_WRITE(2).POS
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 2
- name: LOB_WRITE(2).DATA
  dataType: TABLE
  parameterMode: IN
  ordinalPosition: 3
- name: LOB_WRITEAPPEND(1).WLOB
  dataType: BLOB
  parameterMode: INOUT
  ordinalPosition: 1
- name: LOB_WRITEAPPEND(1).DATA
  dataType: TABLE
  parameterMode: IN
  ordinalPosition: 2
- name: LOB_WRITEAPPEND(2).WLOB
  dataType: CLOB
  parameterMode: INOUT
  ordinalPosition: 1
- name: LOB_WRITEAPPEND(2).DATA
  dataType: TABLE
  parameterMode: IN
  ordinalPosition: 2
- name: SCHEMA_CALLOUT.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: SCHEMA_CALLOUT.PREPOST
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 2
- name: SCHEMA_CALLOUT.ISDBA
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 3
- name: SCHEMA_CALLOUT.VERSION
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
- name: SCHEMA_INFO_EXP.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: SCHEMA_INFO_EXP.PREPOST
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 2
- name: SCHEMA_INFO_EXP.ISDBA
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 3
- name: SCHEMA_INFO_EXP.VERSION
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
- name: SCHEMA_INFO_EXP.NEW_BLOCK
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 5
- name: TRANS_BEGIN102.AWNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: TRANS_BEGIN102.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: TRANS_BEGIN102.NAMESPACE
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 3
- name: TRANS_BEGIN102.TYPE
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 4
- name: TRANS_CHUNK102.AMT
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 1
- name: TRANS_CHUNK102.STREAM
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: TRANS_FINISH102.AWNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: TRANS_FINISH102.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: TRANS_FINISH102.NAMESPACE
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 3
- name: TRANS_FINISH102.TYPE
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 4
- name: TRANS_FINISH112.AWNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: TRANS_FINISH112.SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: TRANS_FINISH112.NAMESPACE
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 3
- name: TRANS_FINISH112.TYPE
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 4
- name: TRANS_FINISH112.PREPOST
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 5
routineDefinition: |-
  PACKAGE dbms_aw_exp AUTHID CURRENT_USER AS EIF_LOB_SIZE_OUT_OF_RANGE
  EXCEPTION;
  INVALID_AW_VERSION NUMBER: = -20004;
  CROSS_PLATFORM_TRANSPORT NUMBER: = -20005;
  AW_TOO_MANY_OBJECTS NUMBER: = -20006;
  PROCEDURE alter_lob_size(newsize IN NUMBER);
  PROCEDURE import_begin120(
      schema IN VARCHAR2,
      name IN VARCHAR2
    );
  PROCEDURE import_chunk120(
      amt IN BINARY_INTEGER,
      stream IN VARCHAR2
    );
  PROCEDURE import_finish120(
      schema IN VARCHAR2,
      name IN VARCHAR2
    );
  PROCEDURE import_begin112(
      schema IN VARCHAR2,
      name IN VARCHAR2
    );
  PROCEDURE import_chunk112(
      amt IN BINARY_INTEGER,
      stream IN VARCHAR2
    );
  PROCEDURE import_finish112(
      schema IN VARCHAR2,
      name IN VARCHAR2
    );
  PROCEDURE import_begin100(
      schema IN VARCHAR2,
      name IN VARCHAR2
    );
  PROCEDURE import_chunk100(
      amt IN BINARY_INTEGER,
      stream IN VARCHAR2
    );
  PROCEDURE import_finish100(
      schema IN VARCHAR2,
      name IN VARCHAR2
    );
  PROCEDURE import_begin92(
      schema IN VARCHAR2,
      name IN VARCHAR2
    );
  PROCEDURE import_chunk92(
      amt IN BINARY_INTEGER,
      stream IN VARCHAR2
    );
  PROCEDURE import_finish92(
      schema IN VARCHAR2,
      name IN VARCHAR2
    );
  -- Transportable tablespace support
    PROCEDURE trans_begin102(
      awname IN VARCHAR2,
      schema IN VARCHAR2,
      namespace IN PLS_INTEGER,
      type IN PLS_INTEGER
    );
  PROCEDURE trans_chunk102(
      amt IN BINARY_INTEGER,
      stream IN VARCHAR2
    );
  PROCEDURE trans_finish102(
      awname IN VARCHAR2,
      schema IN VARCHAR2,
      namespace IN PLS_INTEGER,
      type IN PLS_INTEGER
    );
  PROCEDURE trans_finish112(
      awname IN VARCHAR2,
      schema IN VARCHAR2,
      namespace IN PLS_INTEGER,
      type IN PLS_INTEGER,
      prepost IN PLS_INTEGER
    );
  FUNCTION schema_info_exp(
      schema IN VARCHAR2,
      prepost IN PLS_INTEGER,
      isdba IN PLS_INTEGER,
      version IN VARCHAR2,
      new_block OUT PLS_INTEGER
    ) RETURN VARCHAR2;
  PROCEDURE schema_callout(
      schema IN VARCHAR2,
      prepost IN PLS_INTEGER,
      isdba IN PLS_INTEGER,
      version IN VARCHAR2
    );
  PROCEDURE import_callout120(schema IN VARCHAR2);
  PROCEDURE import_callout112(schema IN VARCHAR2);
  PROCEDURE import_table_callout120(
      schema IN VARCHAR2,
      tabname IN VARCHAR2,
      preport IN PLS_INTEGER
    );
  FUNCTION instance_extended_info_exp(
      name IN VARCHAR2,
      schema IN VARCHAR2,
      namespace IN PLS_INTEGER,
      type IN PLS_INTEGER,
      prepost IN PLS_INTEGER,
      exp_user IN VARCHAR2,
      isdba IN PLS_INTEGER,
      version IN VARCHAR2,
      new_block OUT PLS_INTEGER
    ) RETURN VARCHAR2;
  PROCEDURE instance_callout_imp(
      obj_name IN VARCHAR2,
      obj_schema IN VARCHAR2,
      obj_type IN VARCHAR2,
      prepost IN PLS_INTEGER,
      action OUT VARCHAR2,
      alt_name OUT VARCHAR2
    );
  TYPE rawvec_t IS TABLE OF RAW(31744);
  TYPE varchar2vec_t IS TABLE OF VARCHAR2(31744);
  FUNCTION lob_write(
      wlob IN OUT NOCOPY BLOB,
      pos IN BINARY_INTEGER,
      data IN rawvec_t
    ) RETURN BINARY_INTEGER;
  FUNCTION lob_writeappend(
      wlob IN OUT NOCOPY BLOB,
      data IN rawvec_t
    ) RETURN BINARY_INTEGER;
  FUNCTION lob_write(
      wlob IN OUT NOCOPY CLOB CHARACTER
      SET
        ANY_CS,
        pos IN BINARY_INTEGER,
        data IN varchar2vec_t
    ) RETURN BINARY_INTEGER;
  FUNCTION lob_writeappend(
      wlob IN OUT NOCOPY CLOB CHARACTER
      SET
        ANY_CS,
        data IN varchar2vec_t
    ) RETURN BINARY_INTEGER;
  -- Exported for DBMS_CUBE_EXP
    FUNCTION transporting RETURN BOOLEAN;
  END dbms_aw_exp;
