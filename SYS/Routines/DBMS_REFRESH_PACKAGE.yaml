schema: SYS
name: DBMS_REFRESH
routineType: PACKAGE
returnParamater: null
parameters:
- name: ADD(1).NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: ADD(1).LIST
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: ADD(1).LAX
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 3
- name: ADD(1).SITEID
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 4
- name: ADD(1).EXPORT_DB
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 5
- name: ADD(2).NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: ADD(2).TAB
  dataType: PL/SQL TABLE
  parameterMode: IN
  ordinalPosition: 2
- name: ADD(2).LAX
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 3
- name: ADD(2).SITEID
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 4
- name: ADD(2).EXPORT_DB
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 5
- name: CHANGE.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: CHANGE.NEXT_DATE
  dataType: DATE
  parameterMode: IN
  ordinalPosition: 2
- name: CHANGE.INTERVAL
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: CHANGE.IMPLICIT_DESTROY
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 4
- name: CHANGE.ROLLBACK_SEG
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 5
- name: CHANGE.PUSH_DEFERRED_RPC
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 6
- name: CHANGE.REFRESH_AFTER_ERRORS
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 7
- name: CHANGE.PURGE_OPTION
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 8
- name: CHANGE.PARALLELISM
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 9
- name: CHANGE.HEAP_SIZE
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 10
- name: DESTROY.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: MAKE(1).NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: MAKE(1).LIST
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: MAKE(1).NEXT_DATE
  dataType: DATE
  parameterMode: IN
  ordinalPosition: 3
- name: MAKE(1).INTERVAL
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
- name: MAKE(1).IMPLICIT_DESTROY
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 5
- name: MAKE(1).LAX
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 6
- name: MAKE(1).JOB
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 7
- name: MAKE(1).ROLLBACK_SEG
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 8
- name: MAKE(1).PUSH_DEFERRED_RPC
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 9
- name: MAKE(1).REFRESH_AFTER_ERRORS
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 10
- name: MAKE(1).PURGE_OPTION
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 11
- name: MAKE(1).PARALLELISM
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 12
- name: MAKE(1).HEAP_SIZE
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 13
- name: MAKE(2).NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: MAKE(2).TAB
  dataType: PL/SQL TABLE
  parameterMode: IN
  ordinalPosition: 2
- name: MAKE(2).NEXT_DATE
  dataType: DATE
  parameterMode: IN
  ordinalPosition: 3
- name: MAKE(2).INTERVAL
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
- name: MAKE(2).IMPLICIT_DESTROY
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 5
- name: MAKE(2).LAX
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 6
- name: MAKE(2).JOB
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 7
- name: MAKE(2).ROLLBACK_SEG
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 8
- name: MAKE(2).PUSH_DEFERRED_RPC
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 9
- name: MAKE(2).REFRESH_AFTER_ERRORS
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 10
- name: MAKE(2).PURGE_OPTION
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 11
- name: MAKE(2).PARALLELISM
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 12
- name: MAKE(2).HEAP_SIZE
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 13
- name: MAKE_REPAPI.REFGROUP
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 1
- name: MAKE_REPAPI.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: MAKE_REPAPI.SITEID
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 3
- name: MAKE_REPAPI.REFRESH_SEQ
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 4
- name: MAKE_REPAPI.EXPORT_DB
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 5
- name: MAKE_REPAPI.FLAG
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 6
- name: REFRESH.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: SUBTRACT(1).NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: SUBTRACT(1).LIST
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: SUBTRACT(1).LAX
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 3
- name: SUBTRACT(2).NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: SUBTRACT(2).TAB
  dataType: PL/SQL TABLE
  parameterMode: IN
  ordinalPosition: 2
- name: SUBTRACT(2).LAX
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 3
- name: USER_EXPORT.RG#
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 1
- name: USER_EXPORT.MYCALL
  dataType: VARCHAR2
  parameterMode: INOUT
  ordinalPosition: 2
- name: USER_EXPORT_CHILD.MYOWNER
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: USER_EXPORT_CHILD.MYNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: USER_EXPORT_CHILD.MYTYPE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: USER_EXPORT_CHILD.MYCALL
  dataType: VARCHAR2
  parameterMode: INOUT
  ordinalPosition: 4
- name: USER_EXPORT_CHILD.MYSITE
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 5
routineDefinition: |-
  PACKAGE dbms_refresh IS -- dbms_refresh is the interface for administering refresh groups.
  -- CONSTANTS
  --
  -- constants for rgroup$.flag
  -- NOTE: if you make any changes here, you must change the
  --       corresponding constants in prvtsnap.sql
  --
  REPAPI_RGROUP CONSTANT NUMBER: = 8;
  -- ------------------------------------------------------------------------
  -- MAKE a new refresh group.
  --
  -- PARAMETERS:
  -- NAME is of the form 'foo' or 'user.foo' or '"USER"."FOO"'.
  --   The logged-in user is used as a default.
  -- LIST is a comma-separated list of objects to be refreshed, such as
  --     'foo, scott.bar ,"SCOTT"."BLUE"'.  The default user is the owner
  --     of the refresh group.
  -- TAB  is a PL/SQL table of objects to be refreshed, starting with 1
  --   and filling every number until an entry is NULL, with every entry
  --   formatted the same way as NAME.  The default user is the owner
  --   of the refresh group.
  -- NEXT_DATE is the date for the refresh group to first be refreshed.
  --   See dbmsjobq.sql .  If there is no current job, the default interval
  --   will be 'null' and the job will delete itself after refreshing the
  --   group at NEXT_DATE.
  -- INTERVAL is used to determine the next NEXT_DATE.  See dbmsjobq.sql .
  --   If there is no current job, NEXT_DATE will default to null and the
  --   job will not run until you manually set NEXT_DATE to something else
  --   or manually refresh the group.
  -- IMPLICIT_DESTROY means to delete the refresh group when the last item
  --   is subtracted from it.  The value is stored with the group definition.
  --   Empty groups can be created with IMPLICIT_DESTROY set.
  PROCEDURE make(
    name IN VARCHAR2,
    list IN VARCHAR2,
    next_date IN DATE,
    interval IN VARCHAR2,
    implicit_destroy IN BOOLEAN: = FALSE,
    lax IN BOOLEAN: = FALSE,
    job IN BINARY_INTEGER: = 0,
    rollback_seg IN VARCHAR2: = NULL,
    push_deferred_rpc IN BOOLEAN: = TRUE,
    refresh_after_errors IN BOOLEAN: = FALSE,
    purge_option IN BINARY_INTEGER: = 1,
    parallelism IN BINARY_INTEGER: = 0,
    heap_size IN BINARY_INTEGER: = 0
  );
  PROCEDURE make(
    name IN VARCHAR2,
    tab IN dbms_utility.uncl_array,
    next_date IN DATE,
    interval IN VARCHAR2,
    implicit_destroy IN BOOLEAN: = FALSE,
    lax IN BOOLEAN: = FALSE,
    job IN BINARY_INTEGER: = 0,
    rollback_seg IN VARCHAR2: = NULL,
    push_deferred_rpc IN BOOLEAN: = TRUE,
    refresh_after_errors IN BOOLEAN: = FALSE,
    purge_option IN BINARY_INTEGER: = 1,
    parallelism IN BINARY_INTEGER: = 0,
    heap_size IN BINARY_INTEGER: = 0
  );
  PROCEDURE make_repapi(
    refgroup IN BINARY_INTEGER,
    name IN VARCHAR2,
    siteid IN BINARY_INTEGER,
    refresh_seq IN BINARY_INTEGER,
    export_db IN VARCHAR2,
    flag IN BINARY_INTEGER DEFAULT REPAPI_RGROUP
  );
  -- ------------------------------------------------------------------------
  -- ADD some refreshable objects to a refresh group.
  PROCEDURE
  add(
      name IN VARCHAR2,
      list IN VARCHAR2,
      lax IN BOOLEAN: = FALSE,
      siteid IN BINARY_INTEGER: = 0,
      export_db IN VARCHAR2: = NULL
    );
  PROCEDURE
  add(
      name IN VARCHAR2,
      tab IN dbms_utility.uncl_array,
      lax IN BOOLEAN: = FALSE,
      siteid IN BINARY_INTEGER: = 0,
      export_db IN VARCHAR2: = NULL
    );
  -- ------------------------------------------------------------------------
    -- SUBTRACT some refreshable objects from a refresh group.
    PROCEDURE subtract(
      name IN VARCHAR2,
      list IN VARCHAR2,
      lax IN BOOLEAN: = FALSE
    );
  PROCEDURE subtract(
      name IN VARCHAR2,
      tab IN dbms_utility.uncl_array,
      lax IN BOOLEAN: = FALSE
    );
  -- ------------------------------------------------------------------------
    -- DESTROY a refresh group, make it cease to exist.
    PROCEDURE destroy(name IN VARCHAR2);
  -- ------------------------------------------------------------------------
    -- Change any changeable pieces of the job that does the refresh
    PROCEDURE change(
      name IN VARCHAR2,
      next_date IN DATE: = NULL,
      interval IN VARCHAR2: = NULL,
      implicit_destroy IN BOOLEAN: = NULL,
      rollback_seg IN VARCHAR2: = NULL,
      push_deferred_rpc IN BOOLEAN: = NULL,
      refresh_after_errors IN BOOLEAN: = NULL,
      purge_option IN BINARY_INTEGER: = NULL,
      parallelism IN BINARY_INTEGER: = NULL,
      heap_size IN BINARY_INTEGER: = NULL
    );
  -- ------------------------------------------------------------------------
    -- Atomically, consistently refresh all objects in a refresh group now.
    -- Clear the BROKEN flag for the job if the refresh succeeds
    PROCEDURE refresh(name IN VARCHAR2);
  -- ------------------------------------------------------------------------
    -- Produce the text of a call for recreating the given group
    PROCEDURE user_export(
      rg# IN BINARY_INTEGER,
      mycall IN OUT VARCHAR2
    );
  -- ------------------------------------------------------------------------
    -- Produce the text of a call for recreating the given group item
    PROCEDURE user_export_child(
      myowner IN VARCHAR2,
      myname IN VARCHAR2,
      mytype IN VARCHAR2,
      mycall IN OUT VARCHAR2,
      mysite IN BINARY_INTEGER: = 0
    );
  END dbms_refresh;
