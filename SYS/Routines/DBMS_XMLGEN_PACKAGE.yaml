schema: SYS
name: DBMS_XMLGEN
routineType: PACKAGE
returnParamater:
  name: NEWCONTEXTFROMHIERARCHY.(--return--)
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 0
parameters:
- name: CLEARBINDVALUES.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: CLOSECONTEXT.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: CONVERT(1).XMLDATA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: CONVERT(1).FLAG
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: CONVERT(2).XMLDATA
  dataType: CLOB
  parameterMode: IN
  ordinalPosition: 1
- name: CONVERT(2).FLAG
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: GETNUMROWSPROCESSED.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: GETXML(1).CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: GETXML(1).TMPCLOB
  dataType: CLOB
  parameterMode: INOUT
  ordinalPosition: 2
- name: GETXML(1).DTDORSCHEMA
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 3
- name: GETXML(2).CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: GETXML(2).DTDORSCHEMA
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: GETXML(3).SQLQUERY
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: GETXML(3).DTDORSCHEMA
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: GETXMLTYPE(1).CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: GETXMLTYPE(1).TMPXMLTYPE
  dataType: OPAQUE/XMLTYPE
  parameterMode: INOUT
  ordinalPosition: 2
- name: GETXMLTYPE(1).DTDORSCHEMA
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 3
- name: GETXMLTYPE(2).CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: GETXMLTYPE(2).DTDORSCHEMA
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: GETXMLTYPE(3).SQLQUERY
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: GETXMLTYPE(3).DTDORSCHEMA
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: NEWCONTEXT(1).QUERYSTRING
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: NEWCONTEXT(2).QUERYSTRING
  dataType: REF CURSOR
  parameterMode: IN
  ordinalPosition: 1
- name: NEWCONTEXTFROMHIERARCHY.QUERYSTRING
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: REMOVEXSLTPARAM.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: REMOVEXSLTPARAM.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: RESTARTQUERY.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SETBINDVALUE.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SETBINDVALUE.BINDNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: SETBINDVALUE.BINDVALUE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: SETCHECKINVALIDCHARS.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SETCHECKINVALIDCHARS.CHK
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 2
- name: SETCONVERTSPECIALCHARS.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SETCONVERTSPECIALCHARS.REPLACE
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 2
- name: SETINDENTATIONWIDTH.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SETINDENTATIONWIDTH.WIDTH
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: SETMAXROWS.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SETMAXROWS.MAXROWS
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: SETNULLHANDLING.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SETNULLHANDLING.FLAG
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: SETPRETTYPRINTING.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SETPRETTYPRINTING.PP
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 2
- name: SETROWSETTAG.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SETROWSETTAG.ROWSETTAGNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: SETROWTAG.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SETROWTAG.ROWTAGNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: SETSKIPROWS.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SETSKIPROWS.SKIPROWS
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: SETXSLT(1).CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SETXSLT(1).STYLESHEET
  dataType: CLOB
  parameterMode: IN
  ordinalPosition: 2
- name: SETXSLT(2).CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SETXSLT(2).STYLESHEET
  dataType: OPAQUE/XMLTYPE
  parameterMode: IN
  ordinalPosition: 2
- name: SETXSLT(3).CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SETXSLT(3).URI
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: SETXSLTPARAM.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SETXSLTPARAM.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: SETXSLTPARAM.VALUE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: USEITEMTAGSFORCOLL.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: USENULLATTRIBUTEINDICATOR.CTX
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: USENULLATTRIBUTEINDICATOR.ATTRIND
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 2
routineDefinition: |-
  PACKAGE dbms_xmlgen AUTHID CURRENT_USER AS -- context handle
  SUBTYPE ctxHandle IS NUMBER;
  SUBTYPE ctxType IS NUMBER;
  SUBTYPE conversionType IS NUMBER;
  TYPE PARAM_HASH IS TABLE OF VARCHAR2(100) INDEX BY VARCHAR2(32);
  -- DTD or schema specifications
  NONE CONSTANT NUMBER: = 0;
  DTD CONSTANT NUMBER: = 1;
  SCHEMA CONSTANT NUMBER: = 2;
  -- conversion type
  ENTITY_ENCODE CONSTANT conversionType: = 0;
  ENTITY_DECODE CONSTANT conversionType: = 1;
  -- constants for null handling
  DROP_NULLS CONSTANT NUMBER: = 0;
  NULL_ATTR CONSTANT NUMBER: = 1;
  EMPTY_TAG CONSTANT NUMBER: = 2;
  -- procedure to create the XML document
  FUNCTION newContext(queryString IN varchar2) RETURN ctxHandle;
  FUNCTION newContext(queryString IN SYS_REFCURSOR) RETURN ctxHandle;
  FUNCTION newContextFromHierarchy(queryString IN varchar2) RETURN ctxHandle;
  -- set the row tag name
  PROCEDURE setRowTag(ctx IN ctxHandle, rowTagName IN varchar2);
  -- set the rowset tag name
  PROCEDURE setRowSetTag(ctx IN ctxHandle, rowSetTagName IN varchar2);
  -- XSLT support
  PROCEDURE setXSLT(ctx IN ctxType, stylesheet IN CLOB);
  PROCEDURE setXSLT(ctx IN ctxType, stylesheet IN XMLType);
  PROCEDURE setXSLT(ctx IN ctxType, uri IN VARCHAR2);
  PROCEDURE setXSLTParam(
    ctx IN ctxType,
    name IN VARCHAR2,
    value IN VARCHAR2
  );
  PROCEDURE removeXSLTParam(ctx IN ctxType, name IN VARCHAR2);
  PROCEDURE getXML(
    ctx IN ctxHandle,
    tmpclob IN OUT NOCOPY clob,
    dtdOrSchema IN number: = NONE
  );
  FUNCTION getXML(ctx IN ctxHandle, dtdOrSchema IN number: = NONE) RETURN clob;
  FUNCTION getXML(
    sqlQuery IN VARCHAR2,
    dtdOrSchema IN NUMBER: = NONE
  ) RETURN CLOB;
  PROCEDURE getXMLType(
    ctx IN ctxHandle,
    tmpxmltype IN OUT NOCOPY xmltype,
    dtdOrSchema IN number: = NONE
  );
  FUNCTION getXMLType(ctx IN ctxHandle, dtdOrSchema IN number: = NONE) RETURN sys.XMLType;
  FUNCTION getXMLType(
    sqlQuery IN VARCHAR2,
    dtdOrSchema IN NUMBER: = NONE
  ) RETURN sys.XMLType;
  -- returns the number of rows processed by the last call to getXML()
  FUNCTION getNumRowsProcessed(ctx IN ctxHandle) RETURN number;
  PROCEDURE setMaxRows(ctx IN ctxHandle, maxRows IN number);
  PROCEDURE setSkipRows(ctx IN ctxHandle, skipRows IN number);
  -- This procedure sets whether you want to replace characters such as
  -- <. > etc.. by their codes. (lt;, gt; etc..)
  PROCEDURE setConvertSpecialChars(ctx IN ctxHandle, replace IN boolean);
  -- This procedure sets whether you want to check for invalid characters
  -- such as the null character.
  PROCEDURE setCheckInvalidChars(ctx IN ctxHandle, chk IN boolean);
  -- This forces the use of the _ITEM for collectionitems. The default is to
  -- set the underlying object type name  for collection base elements.
  PROCEDURE useItemTagsForColl(ctx IN ctxHandle);
  -- reset the query to start fetching from the begining
  PROCEDURE restartQuery(ctx IN ctxHandle);
  PROCEDURE closeContext(ctx IN ctxHandle);
  -- conversion functions
  FUNCTION convert(
    xmlData IN varchar2,
    flag IN NUMBER: = ENTITY_ENCODE
  ) return varchar2;
  FUNCTION convert(xmlData IN CLOB, flag IN NUMBER: = ENTITY_ENCODE) return CLOB;
  -- This procedure sets how you want nulls handled during generation
  PROCEDURE setNullHandling(ctx IN ctxHandle, flag IN NUMBER);
  PROCEDURE useNullAttributeIndicator(
    ctx IN ctxHandle,
    attrind IN boolean: = TRUE
  );
  PROCEDURE setBindValue(
    ctx IN ctxHandle,
    bindName IN VARCHAR2,
    bindValue IN VARCHAR2
  );
  PROCEDURE clearBindValues(ctx IN ctxHandle);
  -- Procedures for setting pretty print settings
  PROCEDURE setPrettyPrinting(ctx IN ctxHandle, pp IN boolean);
  PROCEDURE setIndentationWidth(ctx IN ctxHandle, width IN NUMBER);
  END dbms_xmlgen;
