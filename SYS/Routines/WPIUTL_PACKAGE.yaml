schema: SYS
name: WPIUTL
routineType: PACKAGE
returnParamater: null
parameters:
- name: SUBPFPARAM.OBJNUM
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SUBPFPARAM.NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: SUBPFPARAM.SUBNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: SUBPFPARAM.PRENAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
- name: SUBPFPARAM.PNAMES
  dataType: PL/SQL TABLE
  parameterMode: IN
  ordinalPosition: 5
- name: SUBPFPARAM.PTNAMES
  dataType: PL/SQL TABLE
  parameterMode: INOUT
  ordinalPosition: 6
- name: SUBPFPARAM.PTYPES
  dataType: PL/SQL TABLE
  parameterMode: IN
  ordinalPosition: 7
- name: SUBPFPARAM.STATUS
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 8
- name: SUBPFPARAM.MISDEF
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 9
- name: SUBPFPARAM.NENAME
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 10
- name: SUBPPARAM(1).OBJNUM
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SUBPPARAM(1).NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: SUBPPARAM(1).SUBNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: SUBPPARAM(1).PRENAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
- name: SUBPPARAM(1).STATUS
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 5
- name: SUBPPARAM(1).MISDEF
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 6
- name: SUBPPARAM(1).NENAME
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 7
- name: SUBPPARAM(2).OBJNUM
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SUBPPARAM(2).NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: SUBPPARAM(2).SUBNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: SUBPPARAM(2).PRENAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
- name: SUBPPARAM(2).PNAMES
  dataType: PL/SQL TABLE
  parameterMode: INOUT
  ordinalPosition: 5
- name: SUBPPARAM(2).PTNAMES
  dataType: PL/SQL TABLE
  parameterMode: INOUT
  ordinalPosition: 6
- name: SUBPPARAM(2).PTYPES
  dataType: PL/SQL TABLE
  parameterMode: INOUT
  ordinalPosition: 7
- name: SUBPPARAM(2).STATUS
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 8
- name: SUBPPARAM(2).MISDEF
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 9
- name: SUBPPARAM(2).NENAME
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 10
routineDefinition: |-
  package wpiutl as TYPE tvarchar IS table of varchar2(512) index by binary_integer;
  TYPE tvchar3 IS table of VARCHAR2(3) index by binary_integer;
  SUBTYPE ptnod IS pidl.ptnod;
  -- Constant for errors
  s_ok CONSTANT NUMBER: = 0;
  -- successful
  s_subpnotfound CONSTANT NUMBER: = 1;
  -- subprogram NOT found
  s_notinpackage CONSTANT NUMBER: = 2;
  -- PACKAGE found, proc NOT found
  s_notasub CONSTANT NUMBER: = 3;
  -- found, but not a subprog
  s_notunique CONSTANT NUMBER: = 4;
  -- too many matches (overloading error)
  s_nomatch CONSTANT NUMBER: = 5;
  -- found, but param names not matched
  s_typenotmatch CONSTANT NUMBER: = 6;
  -- name match, type doesn't match
  -- The following t_ constants can NOT exceed 999
  t_scalar CONSTANT CHAR(3): = '000';
  t_v7array CONSTANT CHAR(3): = '001';
  -- subpparam:
  --   IN:  name        name of the subprogram, package, or owner
  --        subname     name of subprogram if not null
  --        prename     name of owner if not null
  --        pnames      names of formal parameter
  --   OUT: ptnames     names of formal parameter types
  --        ptypes      characteristic of the types: scalar, V7_array, ...
  --        status      error code = s_ok           : subprogram found
  --                                 s_subpnotfound : not found in schema
  --                                 s_notinpackage : not found in package
  --                                 s_notasub      : found, but not a subprog
  --                                 s_notunique    : too many matches.
  --                                 s_nomatch      : found, but no match
  --
  -- This function analyzes the following types of names:
  --    <NAME>
  --    <NAME>.<SUBNAME>
  --    <PRENAME>.<NAME>.<SUBNAME>
  -- It resolves overloading subprograms by parameter names (i.e. PNAMES),
  -- and returns types of the parameters that are listed in pnames
  -- <NAME> may not be NULL while prename and subname may.
  --
  -- pnames, ptnames, and ptypes are optional.
  --
  PROCEDURE subpparam(
    objnum NUMBER,
    name VARCHAR2,
    subname VARCHAR2,
    prename VARCHAR2,
    status OUT NUMBER,
    misdef OUT VARCHAR2,
    nename OUT VARCHAR2
  );
  PROCEDURE subpparam(
    objnum NUMBER,
    name VARCHAR2,
    subname VARCHAR2,
    prename VARCHAR2,
    pnames IN OUT tvarchar,
    ptnames IN OUT tvarchar,
    ptypes IN OUT tvchar3,
    status OUT NUMBER,
    misdef OUT VARCHAR2,
    nename OUT VARCHAR2
  );
  -- This is similar to subpparam but used for flexible parameter
  -- Note: different from subpparam, pnames and ptypes are INput only
  PROCEDURE subpfparam(
    objnum NUMBER,
    name VARCHAR2,
    subname VARCHAR2,
    prename VARCHAR2,
    pnames IN tvarchar,
    ptnames IN OUT tvarchar,
    ptypes IN tvchar3,
    status OUT NUMBER,
    misdef OUT VARCHAR2,
    nename OUT VARCHAR2
  );
  end;
