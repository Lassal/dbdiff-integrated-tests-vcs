schema: SYS
name: ALL_EDITIONING_VIEW_COLS_AE
updatedAllowed: true
insertAllowed: true
columns:
- name: EDITION_NAME
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: true
  ordinalPosition: 7
  dataTypeLength: 128
- name: OWNER
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: false
  ordinalPosition: 1
  dataTypeLength: 128
- name: TABLE_COLUMN_ID
  dataType: NUMBER
  nullable: false
  ordinalPosition: 5
  dataTypeLength:
- name: TABLE_COLUMN_NAME
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: false
  ordinalPosition: 6
  dataTypeLength: 128
- name: VIEW_COLUMN_ID
  dataType: NUMBER
  nullable: false
  ordinalPosition: 3
  dataTypeLength:
- name: VIEW_COLUMN_NAME
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: false
  ordinalPosition: 4
  dataTypeLength: 128
- name: VIEW_NAME
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: false
  ordinalPosition: 2
  dataTypeLength: 128
referencedTables:
- schema: SYS
  name: COL$
- schema: SYS
  name: EV$
- schema: SYS
  name: EVCOL$
- schema: SYS
  name: OBJ$
- schema: SYS
  name: OBJAUTH$
- schema: SYS
  name: USER$
- schema: SYS
  name: V$ENABLEDPRIVS
- schema: SYS
  name: X$KZSRO
- schema: SYS
  name: _ACTUAL_EDITION_OBJ
viewDefinition: |-
  select
    ev_user.name,
    ev_obj.name,
    view_col.col#,
    view_col.name,
    tbl_col.col#,
    tbl_col.name,
    ev_obj.defining_edition
  from
    sys. "_ACTUAL_EDITION_OBJ" ev_obj,
    sys.obj$ base_tbl_obj,
    sys.ev$ ev,
    sys.evcol$ ev_col,
    sys.col$ view_col,
    sys.col$ tbl_col,
    sys.user$ ev_user
  where
    /* get all columns of a given EV */
    ev.ev_obj# = ev_col.ev_obj#
    /* join EVCOL$ to COL$ on EV id and column id to obtain EV column */
    /* name */
    and ev_col.ev_obj# = view_col.obj#
    and ev_col.ev_col_id = view_col.col#
    /* join EV$ to OBJ$ on base table owner id and base table name so we */
    /* can determine base table id */
    and ev.base_tbl_owner# = base_tbl_obj.owner#
    and ev.base_tbl_name = base_tbl_obj.name
    /* exclude [sub]partitions by restricting base_tbl_obj.type# to */
    /* "table"; since COL$ will not contain rows for [sub]partitions, */
    /* this restriction is not, strictly speaking, necessary, but it */
    /* does ensure that the above join will return exactly one row */
    and base_tbl_obj.type# = 2
    /* join EVCOL$ row and OBJ$ row describing the EV's base table to */
    /* COL$ to obtain base table column id */
    and base_tbl_obj.obj# = tbl_col.obj#
    and ev_col.base_tbl_col_name = tbl_col.name
    /* join EV$ to _ACTUAL_EDITION_OBJ on EV id so we can determine */
    /* name of the EV and id of its owner */
    and ev_obj.obj# = ev.ev_obj#
    /* join _ACTUAL_EDITION_OBJ row describing the EV to USER$ to get */
    /* owner name */
    and ev_obj.owner# = ev_user.user#
    /* make sure the EV is visible to the current user */
    and (
      ev_obj.owner# = userenv('SCHEMAID')
      or ev_obj.obj# in (
        select
          oa.obj#
        from
          sys.objauth$ oa
        where
          oa.grantee# in (
            select
              kzsrorol
            from
              x$kzsro
          )
      )
      or
      /* user has system privileges */
      exists (
        select
          null
        from
          v$enabledprivs
        where
          priv_number in (
            -45
            /* LOCK ANY TABLE */,
            -47
            /* SELECT ANY TABLE */,
            -397
            /* READ ANY TABLE */,
            -48
            /* INSERT ANY TABLE */,
            -49
            /* UPDATE ANY TABLE */,
            -50
            /* DELETE ANY TABLE */
          )
      )
    )
