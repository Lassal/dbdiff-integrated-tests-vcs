schema: SYS
name: USER_IND_SUBPARTITIONS
updatedAllowed: true
insertAllowed: true
columns:
- name: AVG_DATA_BLOCKS_PER_KEY
  dataType: NUMBER
  nullable: true
  ordinalPosition: 26
  dataTypeLength:
- name: AVG_LEAF_BLOCKS_PER_KEY
  dataType: NUMBER
  nullable: true
  ordinalPosition: 25
  dataTypeLength:
- name: BLEVEL
  dataType: NUMBER
  nullable: true
  ordinalPosition: 22
  dataTypeLength:
- name: BUFFER_POOL
  dataType: VARCHAR2
  textMaxLength: 7
  nullable: true
  ordinalPosition: 31
  dataTypeLength: 7
- name: CELL_FLASH_CACHE
  dataType: VARCHAR2
  textMaxLength: 7
  nullable: true
  ordinalPosition: 33
  dataTypeLength: 7
- name: CLUSTERING_FACTOR
  dataType: NUMBER
  nullable: true
  ordinalPosition: 27
  dataTypeLength:
- name: COMPRESSION
  dataType: VARCHAR2
  textMaxLength: 13
  nullable: true
  ordinalPosition: 21
  dataTypeLength: 13
- name: DISTINCT_KEYS
  dataType: NUMBER
  nullable: true
  ordinalPosition: 24
  dataTypeLength:
- name: FLASH_CACHE
  dataType: VARCHAR2
  textMaxLength: 7
  nullable: true
  ordinalPosition: 32
  dataTypeLength: 7
- name: FREELISTS
  dataType: NUMBER
  nullable: true
  ordinalPosition: 18
  dataTypeLength:
- name: FREELIST_GROUPS
  dataType: NUMBER
  nullable: true
  ordinalPosition: 19
  dataTypeLength:
- name: GLOBAL_STATS
  dataType: VARCHAR2
  textMaxLength: 3
  nullable: true
  ordinalPosition: 35
  dataTypeLength: 3
- name: HIGH_VALUE
  dataType: LONG
  nullable: true
  ordinalPosition: 4
  dataTypeLength:
- name: HIGH_VALUE_LENGTH
  dataType: NUMBER
  nullable: false
  ordinalPosition: 5
  dataTypeLength:
- name: INDEX_NAME
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: false
  ordinalPosition: 1
  dataTypeLength: 128
- name: INITIAL_EXTENT
  dataType: NUMBER
  nullable: true
  ordinalPosition: 12
  dataTypeLength:
- name: INI_TRANS
  dataType: NUMBER
  nullable: false
  ordinalPosition: 10
  dataTypeLength:
- name: INTERVAL
  dataType: VARCHAR2
  textMaxLength: 3
  nullable: true
  ordinalPosition: 36
  dataTypeLength: 3
- name: LAST_ANALYZED
  dataType: DATE
  nullable: true
  ordinalPosition: 30
  dataTypeLength:
- name: LEAF_BLOCKS
  dataType: NUMBER
  nullable: true
  ordinalPosition: 23
  dataTypeLength:
- name: LOGGING
  dataType: VARCHAR2
  textMaxLength: 3
  nullable: true
  ordinalPosition: 20
  dataTypeLength: 3
- name: MAX_EXTENT
  dataType: NUMBER
  nullable: true
  ordinalPosition: 15
  dataTypeLength:
- name: MAX_SIZE
  dataType: NUMBER
  nullable: true
  ordinalPosition: 16
  dataTypeLength:
- name: MAX_TRANS
  dataType: NUMBER
  nullable: false
  ordinalPosition: 11
  dataTypeLength:
- name: MIN_EXTENT
  dataType: NUMBER
  nullable: true
  ordinalPosition: 14
  dataTypeLength:
- name: NEXT_EXTENT
  dataType: NUMBER
  nullable: true
  ordinalPosition: 13
  dataTypeLength:
- name: NUM_ROWS
  dataType: NUMBER
  nullable: true
  ordinalPosition: 28
  dataTypeLength:
- name: PARTITION_NAME
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: true
  ordinalPosition: 2
  dataTypeLength: 128
- name: PCT_FREE
  dataType: NUMBER
  nullable: false
  ordinalPosition: 9
  dataTypeLength:
- name: PCT_INCREASE
  dataType: NUMBER
  nullable: true
  ordinalPosition: 17
  dataTypeLength:
- name: SAMPLE_SIZE
  dataType: NUMBER
  nullable: true
  ordinalPosition: 29
  dataTypeLength:
- name: SEGMENT_CREATED
  dataType: VARCHAR2
  textMaxLength: 3
  nullable: true
  ordinalPosition: 37
  dataTypeLength: 3
- name: STATUS
  dataType: VARCHAR2
  textMaxLength: 8
  nullable: true
  ordinalPosition: 7
  dataTypeLength: 8
- name: SUBPARTITION_NAME
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: true
  ordinalPosition: 3
  dataTypeLength: 128
- name: SUBPARTITION_POSITION
  dataType: NUMBER
  nullable: true
  ordinalPosition: 6
  dataTypeLength:
- name: TABLESPACE_NAME
  dataType: VARCHAR2
  textMaxLength: 30
  nullable: false
  ordinalPosition: 8
  dataTypeLength: 30
- name: USER_STATS
  dataType: VARCHAR2
  textMaxLength: 3
  nullable: true
  ordinalPosition: 34
  dataTypeLength: 3
referencedTables:
- schema: SYS
  name: DEFERRED_STG$
- schema: SYS
  name: IND$
- schema: SYS
  name: INDCOMPART$
- schema: SYS
  name: INDSUBPART$
- schema: SYS
  name: OBJ$
- schema: SYS
  name: SEG$
- schema: SYS
  name: TAB$
- schema: SYS
  name: TS$
viewDefinition: |-
  select
    po.name,
    po.subname,
    so.subname,
    isp.hiboundval,
    isp.hiboundlen,
    row_number() over (
      partition by po.name,
      po.subname
      order by
        isp.subpart#
    ),
    decode(bitand(isp.flags, 1), 1, 'UNUSABLE', 'USABLE'),
    ts.name,
    isp.pctfree$,
    isp.initrans,
    isp.maxtrans,
    decode(
      bitand(isp.flags, 65536),
      65536,
      ds.initial_stg * ts.blocksize,
      s.iniexts * ts.blocksize
    ),
    decode(
      bitand(isp.flags, 65536),
      65536,
      ds.next_stg * ts.blocksize,
      s.extsize * ts.blocksize
    ),
    decode(
      bitand(isp.flags, 65536),
      65536,
      ds.minext_stg,
      s.minexts
    ),
    decode(
      bitand(isp.flags, 65536),
      65536,
      ds.maxext_stg,
      s.maxexts
    ),
    decode(
      bitand(isp.flags, 65536),
      65536,
      ds.maxsiz_stg * ts.blocksize,
      decode(
        bitand(s.spare1, 4194304),
        4194304,
        bitmapranges,
        NULL
      )
    ),
    decode(
      bitand(ts.flags, 3),
      1,
      to_number(NULL),
      decode(
        bitand(isp.flags, 65536),
        65536,
        ds.pctinc_stg,
        s.extpct
      )
    ),
    decode(
      bitand(ts.flags, 32),
      32,
      to_number(NULL),
      decode(
        bitand(isp.flags, 65536),
        65536,
        decode(ds.frlins_stg, 0, 1, ds.frlins_stg),
        decode(s.lists, 0, 1, s.lists)
      )
    ),
    decode(
      bitand(ts.flags, 32),
      32,
      to_number(NULL),
      decode(
        bitand(isp.flags, 65536),
        65536,
        decode(ds.maxins_stg, 0, 1, ds.maxins_stg),
        decode(s.groups, 0, 1, s.groups)
      )
    ),
    decode(mod(trunc(isp.flags / 4), 2), 0, 'YES', 'NO'),
    case
      when bitand(isp.flags, 1024) = 1024 then 'ENABLED'
      else case
        when (bitand(isp.flags, 65536) = 65536) then decode(
          bitand(ds.flags_stg, 4),
          4,
          decode(
            bitand(ds.cmpflag_stg, 6),
            4,
            'ADVANCED LOW',
            2,
            'ADVANCED HIGH',
            NULL
          ),
          'DISABLED'
        )
        else decode(
          bitand(s.spare1, 2048),
          2048,
          decode(
            bitand(s.spare1, 16777216 + 1048576),
            16777216,
            'ADVANCED HIGH',
            1048576,
            'ADVANCED LOW',
            NULL
          ),
          'DISABLED'
        )
      end
    end,
    isp.blevel,
    isp.leafcnt,
    isp.distkey,
    isp.lblkkey,
    isp.dblkkey,
    isp.clufac,
    isp.rowcnt,
    isp.samplesize,
    isp.analyzetime,
    decode(
      bitand(
        decode(
          bitand(isp.flags, 65536),
          65536,
          ds.bfp_stg,
          s.cachehint
        ),
        3
      ),
      1,
      'KEEP',
      2,
      'RECYCLE',
      'DEFAULT'
    ),
    decode(
      bitand(
        decode(
          bitand(isp.flags, 65536),
          65536,
          ds.bfp_stg,
          s.cachehint
        ),
        12
      ) / 4,
      1,
      'KEEP',
      2,
      'NONE',
      'DEFAULT'
    ),
    decode(
      bitand(
        decode(
          bitand(isp.flags, 65536),
          65536,
          ds.bfp_stg,
          s.cachehint
        ),
        48
      ) / 16,
      1,
      'KEEP',
      2,
      'NONE',
      'DEFAULT'
    ),
    decode(bitand(isp.flags, 8), 0, 'NO', 'YES'),
    decode(bitand(isp.flags, 16), 0, 'NO', 'YES'),
    decode(bitand(isp.flags, 32768), 32768, 'YES', 'NO'),
    decode(bitand(isp.flags, 65536), 65536, 'NO', 'YES')
  from
    sys.obj$ so,
    sys.obj$ po,
    sys.indsubpart$ isp,
    sys.indcompart$ icp,
    sys.ts$ ts,
    sys.seg$ s,
    sys.ind$ i,
    sys.tab$ t,
    sys.deferred_stg$ ds
  where
    so.obj# = isp.obj#
    and po.obj# = icp.obj#
    and icp.obj# = isp.pobj#
    and isp.ts# = ts.ts#
    and isp.file# = s.file#(+)
    and isp.block# = s.block#(+)
    and isp.ts# = s.ts#(+)
    and isp.obj# = ds.obj#(+)
    and bitand(icp.flags, 8388608) = 0
    and
    /* filter out hidden partitions */
    bitand(isp.flags, 8388608) = 0
    and
    /* filter out hidden partitions */
    po.owner# = userenv('SCHEMAID')
    and so.owner# = userenv('SCHEMAID')
    and i.obj# = icp.bo#
    and i.bo# = t.obj#
    and bitand(t.trigflag, 1073741824) != 1073741824
    and po.namespace = 4
    and po.remoteowner IS NULL
    and po.linkname IS NULL
    and so.namespace = 4
    and so.remoteowner IS NULL
    and so.linkname IS NULL
