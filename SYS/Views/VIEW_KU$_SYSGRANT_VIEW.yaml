schema: SYS
name: KU$_SYSGRANT_VIEW
updatedAllowed: true
insertAllowed: true
columns:
- name: GRANTEE
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: true
  ordinalPosition: 4
  dataTypeLength: 128
- name: PRIVILEGE
  dataType: NUMBER
  nullable: true
  ordinalPosition: 3
  dataTypeLength:
- name: PRIVNAME
  dataType: VARCHAR2
  textMaxLength: 40
  nullable: true
  ordinalPosition: 5
  dataTypeLength: 40
- name: SEQUENCE
  dataType: NUMBER
  nullable: true
  ordinalPosition: 6
  dataTypeLength:
- name: VERS_MAJOR
  dataType: CHAR
  textMaxLength: 1
  nullable: true
  ordinalPosition: 1
  dataTypeLength: 1
- name: VERS_MINOR
  dataType: CHAR
  textMaxLength: 1
  nullable: true
  ordinalPosition: 2
  dataTypeLength: 1
- name: WGO
  dataType: NUMBER
  nullable: true
  ordinalPosition: 7
  dataTypeLength:
referencedTables:
- schema: SYS
  name: SESSION_ROLES
- schema: SYS
  name: SYSAUTH$
- schema: SYS
  name: SYSTEM_PRIVILEGE_MAP
- schema: SYS
  name: USER$
viewDefinition: |-
  select
    '1',
    '1',
    p.privilege,
    u.name,
    p.name,
    g.sequence#,
    NVL(g.option$, 0)
  from
    sys.sysauth$ g,
    sys.user$ u,
    sys.system_privilege_map p
  where
    g.grantee# = u.user#
    and g.privilege# = p.privilege
    and bitand(p.property, 1) != 1
    /* Don't show non-SQL sys. grants */
    and (
      SYS_CONTEXT('USERENV', 'CURRENT_USERID') IN (g.grantee#, 0)
      OR g.grantee# = 1
      OR EXISTS (
        SELECT
          *
        FROM
          sys.session_roles
        WHERE
          role = 'SELECT_CATALOG_ROLE'
      )
    )
