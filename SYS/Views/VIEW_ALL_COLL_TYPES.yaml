schema: SYS
name: ALL_COLL_TYPES
updatedAllowed: true
insertAllowed: true
columns:
- name: CHARACTER_SET_NAME
  dataType: VARCHAR2
  textMaxLength: 44
  nullable: true
  ordinalPosition: 11
  dataTypeLength: 44
- name: CHAR_USED
  dataType: VARCHAR2
  textMaxLength: 1
  nullable: true
  ordinalPosition: 14
  dataTypeLength: 1
- name: COLL_TYPE
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: false
  ordinalPosition: 3
  dataTypeLength: 128
- name: ELEM_STORAGE
  dataType: VARCHAR2
  textMaxLength: 7
  nullable: true
  ordinalPosition: 12
  dataTypeLength: 7
- name: ELEM_TYPE_MOD
  dataType: VARCHAR2
  textMaxLength: 7
  nullable: true
  ordinalPosition: 5
  dataTypeLength: 7
- name: ELEM_TYPE_NAME
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: true
  ordinalPosition: 7
  dataTypeLength: 128
- name: ELEM_TYPE_OWNER
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: true
  ordinalPosition: 6
  dataTypeLength: 128
- name: LENGTH
  dataType: NUMBER
  nullable: true
  ordinalPosition: 8
  dataTypeLength:
- name: NULLS_STORED
  dataType: VARCHAR2
  textMaxLength: 3
  nullable: true
  ordinalPosition: 13
  dataTypeLength: 3
- name: OWNER
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: false
  ordinalPosition: 1
  dataTypeLength: 128
- name: PRECISION
  dataType: NUMBER
  nullable: true
  ordinalPosition: 9
  dataTypeLength:
- name: SCALE
  dataType: NUMBER
  nullable: true
  ordinalPosition: 10
  dataTypeLength:
- name: TYPE_NAME
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: false
  ordinalPosition: 2
  dataTypeLength: 128
- name: UPPER_BOUND
  dataType: NUMBER
  nullable: true
  ordinalPosition: 4
  dataTypeLength:
referencedTables:
- schema: SYS
  name: COLLECTION$
- schema: SYS
  name: OBJAUTH$
- schema: SYS
  name: TYPE$
- schema: SYS
  name: USER$
- schema: SYS
  name: V$ENABLEDPRIVS
- schema: SYS
  name: X$KZSRO
- schema: SYS
  name: _CURRENT_EDITION_OBJ
viewDefinition: |-
  select
    u.name,
    o.name,
    co.name,
    c .upper_bound,
    decode(
      bitand(c .properties, 32768),
      32768,
      'REF',
      decode(bitand(c .properties, 16384), 16384, 'POINTER')
    ),
    nvl2(
      c .synobj#,
      (
        select
          u.name
        from
          user $ u,
          "_CURRENT_EDITION_OBJ" o
        where
          o.owner# = u.user#
          and o.obj# = c .synobj#
      ),
      decode(bitand(et.properties, 64), 64, null, eu.name)
    ),
    nvl2(
      c .synobj#,
      (
        select
          o.name
        from
          "_CURRENT_EDITION_OBJ" o
        where
          o.obj# = c .synobj#
      ),
      decode(
        et.typecode,
        9,
        decode(c .charsetform, 2, 'NVARCHAR2', eo.name),
        96,
        decode(c .charsetform, 2, 'NCHAR', eo.name),
        112,
        decode(c .charsetform, 2, 'NCLOB', eo.name),
        eo.name
      )
    ),
    c .length,
    c .precision,
    c .scale,
    decode(
      c .charsetform,
      1,
      'CHAR_CS',
      2,
      'NCHAR_CS',
      3,
      NLS_CHARSET_NAME(c .charsetid),
      4,
      'ARG:' || c .charsetid
    ),
    decode(
      bitand(c .properties, 131072),
      131072,
      'FIXED',
      decode(bitand(c .properties, 262144), 262144, 'VARYING')
    ),
    decode(bitand(c .properties, 65536), 65536, 'NO', 'YES'),
    decode(bitand(c .properties, 4096), 4096, 'C', 'B')
  from
    sys.user$ u,
    sys. "_CURRENT_EDITION_OBJ" o,
    sys.collection$ c,
    sys. "_CURRENT_EDITION_OBJ" co,
    sys. "_CURRENT_EDITION_OBJ" eo,
    sys.user$ eu,
    sys.type$ et
  where
    o.owner# = u.user#
    and o.type# <> 10 -- must not be invalid
    and o.oid$ = c .toid
    and o.subname IS NULL -- only the most recent version
    and c .coll_toid = co.oid$
    and c .elem_toid = eo.oid$
    and eo.owner# = eu.user#
    and c .elem_toid = et.tvoid
    and c .package_obj# IS NULL -- filter out plsql types
    and (
      o.owner# = userenv('SCHEMAID')
      or o.obj# in (
        select
          oa.obj#
        from
          sys.objauth$ oa
        where
          grantee# in (
            select
              kzsrorol
            from
              x$kzsro
          )
      )
      or
      /* user has system privileges */
      exists (
        select
          null
        from
          v$enabledprivs
        where
          priv_number in (
            -184
            /* EXECUTE ANY TYPE */,
            -181
            /* CREATE ANY TYPE */
          )
      )
    )
