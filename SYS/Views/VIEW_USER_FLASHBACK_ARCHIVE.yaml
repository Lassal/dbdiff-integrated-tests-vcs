schema: SYS
name: USER_FLASHBACK_ARCHIVE
updatedAllowed: true
insertAllowed: true
columns:
- name: CREATE_TIME
  dataType: TIMESTAMP(9)
  numericScale: 9
  nullable: true
  ordinalPosition: 5
  dataTypeLength:
- name: FLASHBACK_ARCHIVE#
  dataType: NUMBER
  nullable: false
  ordinalPosition: 3
  dataTypeLength:
- name: FLASHBACK_ARCHIVE_NAME
  dataType: VARCHAR2
  textMaxLength: 255
  nullable: false
  ordinalPosition: 2
  dataTypeLength: 255
- name: LAST_PURGE_TIME
  dataType: TIMESTAMP(9)
  numericScale: 9
  nullable: true
  ordinalPosition: 6
  dataTypeLength:
- name: OWNER_NAME
  dataType: VARCHAR2
  textMaxLength: 30
  nullable: true
  ordinalPosition: 1
  dataTypeLength: 30
- name: RETENTION_IN_DAYS
  dataType: NUMBER
  nullable: false
  ordinalPosition: 4
  dataTypeLength:
- name: STATUS
  dataType: VARCHAR2
  textMaxLength: 7
  nullable: true
  ordinalPosition: 7
  dataTypeLength: 7
referencedTables:
- schema: SYS
  name: SYS_FBA_FA
- schema: SYS
  name: SYS_FBA_USERS
- schema: SYS
  name: USER$
- schema: SYS
  name: V$ENABLEDPRIVS
viewDefinition: |-
  select
    unique f.OWNERNAME,
    f.FANAME,
    f.FA#,
    f.RETENTION,
    case
      when f.CREATESCN < f.PURGESCN then NULL
      else scn_to_timestamp(f.CREATESCN)
    end,
    scn_to_timestamp(f.PURGESCN),
    decode(bitand(f.flags, 1), 1, 'DEFAULT', NULL)
  from
    SYS_FBA_FA f,
    SYS_FBA_USERS fp,
    USER $ u
  where
    /* user has flashback archive object privilege */
    (
      f.FA# = fp.FA#
      and fp.user# = u.USER#
    )
    and
    /* show only this user's objects */
    (
      (u.user# = userenv('SCHEMAID'))
      or
      /* user has system privileges - show all users */
      exists (
        select
          null
        from
          v$enabledprivs
        where
          priv_number = -350
      )
    )
