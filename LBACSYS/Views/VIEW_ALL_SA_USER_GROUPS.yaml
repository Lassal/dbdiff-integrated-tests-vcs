schema: LBACSYS
name: ALL_SA_USER_GROUPS
updatedAllowed: true
insertAllowed: true
columns:
- name: DEF_GROUP
  dataType: VARCHAR2
  textMaxLength: 1
  nullable: false
  ordinalPosition: 5
  dataTypeLength: 1
- name: GRP
  dataType: VARCHAR2
  textMaxLength: 30
  nullable: false
  ordinalPosition: 3
  dataTypeLength: 30
- name: POLICY_NAME
  dataType: VARCHAR2
  textMaxLength: 30
  nullable: false
  ordinalPosition: 1
  dataTypeLength: 30
- name: ROW_GROUP
  dataType: VARCHAR2
  textMaxLength: 1
  nullable: false
  ordinalPosition: 6
  dataTypeLength: 1
- name: RW_ACCESS
  dataType: VARCHAR2
  textMaxLength: 5
  nullable: true
  ordinalPosition: 4
  dataTypeLength: 5
- name: USER_NAME
  dataType: VARCHAR2
  textMaxLength: 1024
  nullable: false
  ordinalPosition: 2
  dataTypeLength: 1024
referencedTables:
- schema: LBACSYS
  name: OLS$GROUPS
- schema: LBACSYS
  name: OLS$USER_GROUPS
- schema: LBACSYS
  name: SA$ADMIN
- schema: LBACSYS
  name: SA$POL
viewDefinition: |-
  SELECT
    p.pol_name AS policy_name,
    ug.usr_name AS user_name,
    g.code AS grp,
    DECODE(ug.rw_access, '1', 'WRITE', 'READ') AS rw_access,
    ug.def_group,
    ug.row_group
  FROM
    LBACSYS.sa$pol p,
    LBACSYS.ols$user_groups ug,
    LBACSYS.ols$groups g
  WHERE
    p.pol# = ug.pol#
    AND ug.pol# = g.pol#
    AND ug.group# = g.group#
    AND (
      p.pol# in (
        select
          pol#
        from
          LBACSYS.sa$admin
        where
          usr_name = user
      )
      or ug.usr_name = sa_session.sa_user_name(lbac_cache.policy_name(p.pol#))
    )
