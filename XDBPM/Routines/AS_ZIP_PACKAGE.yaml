schema: XDBPM
name: AS_ZIP
routineType: PACKAGE
returnParamater:
  name: UNZIP(2).(--return--)
  dataType: TABLE
  parameterMode: OUT
  ordinalPosition: 0
parameters:
- name: ADD1FILE.P_ZIPPED_BLOB
  dataType: BLOB
  parameterMode: INOUT
  ordinalPosition: 1
- name: ADD1FILE.P_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: ADD1FILE.P_CONTENT
  dataType: BLOB
  parameterMode: IN
  ordinalPosition: 3
- name: FINISH_ZIP.P_ZIPPED_BLOB
  dataType: BLOB
  parameterMode: INOUT
  ordinalPosition: 1
- name: GET_FILE(1).P_DIR
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: GET_FILE(1).P_ZIP_FILE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: GET_FILE(1).P_FILE_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: GET_FILE(1).P_ENCODING
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
- name: GET_FILE(2).P_ZIPPED_BLOB
  dataType: BLOB
  parameterMode: IN
  ordinalPosition: 1
- name: GET_FILE(2).P_FILE_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: GET_FILE(2).P_ENCODING
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: GET_FILE_LIST(1).P_DIR
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: GET_FILE_LIST(1).P_ZIP_FILE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: GET_FILE_LIST(1).P_ENCODING
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: GET_FILE_LIST(2).P_ZIPPED_BLOB
  dataType: BLOB
  parameterMode: IN
  ordinalPosition: 1
- name: GET_FILE_LIST(2).P_ENCODING
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: SAVE_ZIP.P_ZIPPED_BLOB
  dataType: BLOB
  parameterMode: IN
  ordinalPosition: 1
- name: SAVE_ZIP.P_DIR
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: SAVE_ZIP.P_FILENAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: UNZIP(1).P_ZIPPED_BLOB
  dataType: BLOB
  parameterMode: IN
  ordinalPosition: 1
- name: UNZIP(1).P_ENCODING
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: UNZIP(2).P_DIR
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: UNZIP(2).P_ZIP_FILE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: UNZIP(2).P_ENCODING
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
routineDefinition: |-
  package as_zip is
  /*

  ** Written by Anton Scheffer

  ** 3 April 2011

  */
  --
  function get_file_list(
    p_dir in varchar2,
    p_zip_file in varchar2,
    p_encoding in varchar2: = null
  ) return zip_contents_list;
  --
  function get_file_list(
    p_zipped_blob in blob,
    p_encoding in varchar2: = null
    /* Use CP850 for zip files created with a German Winzip to see umlauts, etc */
  ) return zip_contents_list;
  --
  function get_file(
    p_dir in varchar2,
    p_zip_file in varchar2,
    p_file_name in varchar2,
    p_encoding in varchar2: = null
  ) return blob;
  --
  function get_file(
    p_zipped_blob in blob,
    p_file_name in varchar2,
    p_encoding in varchar2: = null
  ) return blob;
  --
  function unzip(
    p_zipped_blob in blob,
    p_encoding in varchar2: = null
  ) return zip_entry_table pipelined;
  --
  function unzip(
    p_dir in varchar2,
    p_zip_file in varchar2,
    p_encoding in varchar2: = null
  ) return zip_entry_table pipelined;
  --
  procedure add1file(
    p_zipped_blob in out blob,
    p_name in varchar2,
    p_content in blob
  );
  --
  procedure finish_zip(p_zipped_blob in out blob);
  --
  procedure save_zip(
    p_zipped_blob in blob,
    p_dir in varchar2: = 'MY_DIR',
    p_filename in varchar2: = 'my.zip'
  );
  --
  /*

  declare

    g_zipped_blob blob;

  begin

    as_zip.add1file( g_zipped_blob, 'test1.txt', utl_raw.cast_to_raw( 'Dit is de laatste test! Waarom wordt dit dan niet gecomprimeerd?' ) );

    as_zip.add1file( g_zipped_blob, 'test1234.txt', utl_raw.cast_to_raw( 'En hier staat wat anders' ) );

    as_zip.finish_zip( g_zipped_blob );

    as_zip.save_zip( g_zipped_blob, 'MY_DIR', 'my.zip' );

  end;

  --

  declare

    t_dir varchar2(100) := 'MY_DIR';

    t_zip varchar2(100) := 'my.zip';

    zip_files zip_contents_list;

  begin

    zip_files  := as_zip.get_file_list( t_dir, t_zip );

    for i in zip_files.first() .. zip_files.last

    loop

      dbms_output.put_line( zip_files( i ) );

      dbms_output.put_line( utl_raw.cast_to_varchar2( as_zip.get_file( t_dir, t_zip, zip_files( i ) ) ) );

    end loop;

  end;

  */
  end;
