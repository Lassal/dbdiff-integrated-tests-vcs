schema: XDBPM
name: XDBPM_UTILITIES
routineType: PACKAGE
returnParamater:
  name: SERIALIZERESOURCE.(--return--)
  dataType: OPAQUE/XMLTYPE
  parameterMode: OUT
  ordinalPosition: 0
parameters:
- name: APPENDCONTENT(1).P_RESOURCE_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: APPENDCONTENT(1).P_CONTENT
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: APPENDCONTENT(1).P_DB_CHARSET
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: APPENDCONTENT(2).P_RESOURCE_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: APPENDCONTENT(2).P_CONTENT
  dataType: CLOB
  parameterMode: IN
  ordinalPosition: 2
- name: APPENDCONTENT(2).P_DB_CHARSET
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: FREEACL.P_TARGET_ACL
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: FREEACL.P_REPLACEMENT_ACL
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: FREERESCONFIG.P_RESCONFIG_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: GETBINARYCONTENT(1).P_FILE
  dataType: BFILE
  parameterMode: IN
  ordinalPosition: 1
- name: GETBINARYCONTENT(2).P_FILENAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: GETBINARYCONTENT(2).P_DIRECTORY
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: GETBINARYCONTENT(3).P_FILE
  dataType: BFILE
  parameterMode: IN
  ordinalPosition: 1
- name: GETBINARYCONTENT(3).P_CONTENT
  dataType: BLOB
  parameterMode: INOUT
  ordinalPosition: 2
- name: GETBINARYCONTENT(4).P_FILENAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: GETBINARYCONTENT(4).P_DIRECTORY
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: GETBINARYCONTENT(4).P_CONTENT
  dataType: BLOB
  parameterMode: INOUT
  ordinalPosition: 3
- name: GETFILECONTENT(1).P_FILE
  dataType: BFILE
  parameterMode: IN
  ordinalPosition: 1
- name: GETFILECONTENT(1).P_CHARSET
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: GETFILECONTENT(2).P_FILENAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: GETFILECONTENT(2).P_DIRECTORY
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: GETFILECONTENT(2).P_CHARSET
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: GETFILECONTENT(3).P_FILE
  dataType: BFILE
  parameterMode: IN
  ordinalPosition: 1
- name: GETFILECONTENT(3).P_CHARSET
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: GETFILECONTENT(3).P_CONTENT
  dataType: CLOB
  parameterMode: INOUT
  ordinalPosition: 3
- name: GETFILECONTENT(4).P_FILENAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: GETFILECONTENT(4).P_DIRECTORY
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: GETFILECONTENT(4).P_CHARSET
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: GETFILECONTENT(4).P_CONTENT
  dataType: CLOB
  parameterMode: INOUT
  ordinalPosition: 4
- name: GETVERSIONSBYPATH.P_RESOURCE_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: GETVERSIONSBYRESID.RESID
  dataType: RAW
  parameterMode: IN
  ordinalPosition: 1
- name: GETXMLREFERENCE.P_RESOURCE_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: GETXMLREFERENCEBYRESID.P_RESOID
  dataType: RAW
  parameterMode: IN
  ordinalPosition: 1
- name: ISCHECKEDOUTBYRESID.P_RESOID
  dataType: RAW
  parameterMode: IN
  ordinalPosition: 1
- name: IS_VERSIONED(1).P_RESOURCE
  dataType: PL/SQL RECORD
  parameterMode: IN
  ordinalPosition: 1
- name: IS_VERSIONED(2).P_RESOURCE
  dataType: OPAQUE/XMLTYPE
  parameterMode: IN
  ordinalPosition: 1
- name: IS_VERSIONED(3).P_RESOURCE_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: IS_VERSIONED(4).P_RESOURCE
  dataType: PL/SQL RECORD
  parameterMode: IN
  ordinalPosition: 1
- name: MIGRATEACL.ACL
  dataType: OPAQUE/XMLTYPE
  parameterMode: IN
  ordinalPosition: 1
- name: MIGRATEACLRESOURCE.RESOURCEXML
  dataType: OPAQUE/XMLTYPE
  parameterMode: IN
  ordinalPosition: 1
- name: MKDIR(1).P_FOLDER_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: MKDIR(1).FORCE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: MKDIR(2).P_FOLDER_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: MKDIR(2).FORCE
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 2
- name: PRINTXMLTOFILE.P_XML_CONTENT
  dataType: OPAQUE/XMLTYPE
  parameterMode: IN
  ordinalPosition: 1
- name: PRINTXMLTOFILE.P_TARGET_DIRECTORY
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: PRINTXMLTOFILE.P_FILENAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: RMDIR(1).P_FOLDER_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: RMDIR(1).FORCE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: RMDIR(2).P_FOLDER_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: RMDIR(2).FORCE
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 2
- name: SERIALIZEEVENT.REPOSITORYEVENT
  dataType: RAW
  parameterMode: IN
  ordinalPosition: 1
- name: SERIALIZERESOURCE.XDBRESOURCE
  dataType: PL/SQL RECORD
  parameterMode: IN
  ordinalPosition: 1
- name: UPDATEBINARYCONTENT.P_RESOURCE_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: UPDATEBINARYCONTENT.P_CONTENT
  dataType: BLOB
  parameterMode: IN
  ordinalPosition: 2
- name: UPDATECHARACTERCONTENT(1).P_RESOURCE_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: UPDATECHARACTERCONTENT(1).P_CONTENT
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: UPDATECHARACTERCONTENT(1).P_DB_CHARSET
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: UPDATECHARACTERCONTENT(2).P_RESOURCE_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: UPDATECHARACTERCONTENT(2).P_CONTENT
  dataType: CLOB
  parameterMode: IN
  ordinalPosition: 2
- name: UPDATECHARACTERCONTENT(2).P_DB_CHARSET
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: UPDATECONTENT.P_RESOURCE_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: UPDATECONTENT.P_CONTENT
  dataType: BLOB
  parameterMode: IN
  ordinalPosition: 2
- name: UPDATEXMLCONTENT.P_RESOURCE_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: UPDATEXMLCONTENT.P_CONTENT
  dataType: OPAQUE/XMLTYPE
  parameterMode: IN
  ordinalPosition: 2
- name: UPLOADBINARYFILES.P_FILELIST
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: UPLOADBINARYFILES.P_DIRECTORY
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: UPLOADBINARYFILES.P_TARGET_FOLDER
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: UPLOADBINARYFILES.P_BATCH_SIZE
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 4
- name: UPLOADFILES.P_FILELIST
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: UPLOADFILES.P_DIRECTORY
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: UPLOADFILES.P_TARGET_FOLDER
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: UPLOADFILES.P_BATCH_SIZE
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 4
- name: UPLOADRESOURCE.P_RESOURCE_PATH
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: UPLOADRESOURCE.P_CONTENT
  dataType: BLOB
  parameterMode: IN
  ordinalPosition: 2
- name: UPLOADRESOURCE.P_DUPLICATE_POLICY
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: UPLOADTEXTFILES.P_FILELIST
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: UPLOADTEXTFILES.P_DIRECTORY
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: UPLOADTEXTFILES.P_TARGET_FOLDER
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: UPLOADTEXTFILES.P_BATCH_SIZE
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 4
- name: UPLOADTOXMLTABLE.P_FILELIST
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: UPLOADTOXMLTABLE.P_DIRECTORY
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: UPLOADTOXMLTABLE.TABLE_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: UPLOADTOXMLTABLE.P_BATCH_SIZE
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 4
- name: UPLOADXMLFILES.P_FILELIST
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: UPLOADXMLFILES.P_DIRECTORY
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: UPLOADXMLFILES.P_TARGET_FOLDER
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: UPLOADXMLFILES.P_BATCH_SIZE
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 4
routineDefinition: |-
  package XDBPM_UTILITIES authid CURRENT_USER as DEFAULT_FILENAME constant varchar2(2000): = 'ls.xml';
  DEFAULT_DIRECTORY constant varchar2(32): = USER;
  DEFAULT_BATCH_SIZE constant number(10): = 1;
  /*

  **

  ** Deprecated in XDB_UTILITIES. Moved to XDB_XMLSCHEMA_UTILITIES

  **

  ** procedure renameCollectionTable (XMLTABLE varchar2, XPATH varchar2, COLLECTION_TABLE_PREFIX varchar2);

  ** function printNestedTables(XML_TABLE varchar2) return XMLType;

  ** function getDefaultTableName(P_RESOURCE_PATH VARCHAR2) return VARCHAR2;

  **

  */
  function getBinaryContent(P_FILE bfile) return BLOB;
  function getBinaryContent(
    P_FILENAME varchar2,
    P_DIRECTORY varchar2 default DEFAULT_DIRECTORY
  ) return BLOB;
  function getBinaryContent(P_FILE bfile, P_CONTENT IN OUT BLOB) return BLOB;
  function getBinaryContent(
    P_FILENAME varchar2,
    P_DIRECTORY varchar2 default DEFAULT_DIRECTORY,
    P_CONTENT IN OUT BLOB
  ) return BLOB;
  function getFileContent(
    P_FILE bfile,
    P_CHARSET varchar2 default DBMS_XDB_CONSTANTS.ENCODING_DEFAULT
  ) return CLOB;
  function getFileContent(
    P_FILENAME varchar2,
    P_DIRECTORY varchar2 default DEFAULT_DIRECTORY,
    P_CHARSET varchar2 default DBMS_XDB_CONSTANTS.ENCODING_DEFAULT
  ) return CLOB;
  function getFileContent(
    P_FILE bfile,
    P_CHARSET varchar2 default DBMS_XDB_CONSTANTS.ENCODING_DEFAULT,
    P_CONTENT IN OUT CLOB
  ) return CLOB;
  function getFileContent(
    P_FILENAME varchar2,
    P_DIRECTORY varchar2 default DEFAULT_DIRECTORY,
    P_CHARSET varchar2 default DBMS_XDB_CONSTANTS.ENCODING_DEFAULT,
    P_CONTENT IN OUT CLOB
  ) return CLOB;
  procedure mkdir(
    P_FOLDER_PATH varchar2,
    force varchar2 default 'FALSE'
  );
  procedure mkdir(
    P_FOLDER_PATH varchar2,
    force boolean default FALSE
  );
  procedure rmdir(
    P_FOLDER_PATH varchar2,
    force varchar2 default 'FALSE'
  );
  procedure rmdir(
    P_FOLDER_PATH varchar2,
    force boolean default FALSE
  );
  procedure uploadFiles(
    P_FILELIST varchar2 default DEFAULT_FILENAME,
    P_DIRECTORY varchar2 default DEFAULT_DIRECTORY,
    P_TARGET_FOLDER varchar2 default XDB_CONSTANTS.FOLDER_USER_HOME,
    P_BATCH_SIZE number default DEFAULT_BATCH_SIZE
  );
  procedure uploadBinaryFiles(
    P_FILELIST varchar2 default DEFAULT_FILENAME,
    P_DIRECTORY varchar2 default DEFAULT_DIRECTORY,
    P_TARGET_FOLDER varchar2 default XDB_CONSTANTS.FOLDER_USER_HOME,
    P_BATCH_SIZE number default DEFAULT_BATCH_SIZE
  );
  procedure uploadTextFiles(
    P_FILELIST varchar2 default DEFAULT_FILENAME,
    P_DIRECTORY varchar2 default DEFAULT_DIRECTORY,
    P_TARGET_FOLDER varchar2 default XDB_CONSTANTS.FOLDER_USER_HOME,
    P_BATCH_SIZE number default DEFAULT_BATCH_SIZE
  );
  procedure uploadXMLFiles(
    P_FILELIST varchar2 default DEFAULT_FILENAME,
    P_DIRECTORY varchar2 default DEFAULT_DIRECTORY,
    P_TARGET_FOLDER varchar2 default XDB_CONSTANTS.FOLDER_USER_HOME,
    P_BATCH_SIZE number default DEFAULT_BATCH_SIZE
  );
  procedure uploadToXMLTable(
    P_FILELIST varchar2 default DEFAULT_FILENAME,
    P_DIRECTORY varchar2 default DEFAULT_DIRECTORY,
    TABLE_NAME varchar2,
    P_BATCH_SIZE number default DEFAULT_BATCH_SIZE
  );
  procedure updateXMLContent(P_RESOURCE_PATH VARCHAR2, P_CONTENT XMLType);
  procedure updateBinaryContent(P_RESOURCE_PATH VARCHAR2, P_CONTENT BLOB);
  procedure updateCharacterContent(
    P_RESOURCE_PATH VARCHAR2,
    P_CONTENT VARCHAR2,
    P_DB_CHARSET VARCHAR2 default DBMS_XDB_CONSTANTS.ENCODING_DEFAULT
  );
  procedure updateCharacterContent(
    P_RESOURCE_PATH VARCHAR2,
    P_CONTENT CLOB,
    P_DB_CHARSET VARCHAR2 default DBMS_XDB_CONSTANTS.ENCODING_DEFAULT
  );
  procedure appendContent(
    P_RESOURCE_PATH VARCHAR2,
    P_CONTENT VARCHAR2,
    P_DB_CHARSET VARCHAR2 default DBMS_XDB_CONSTANTS.ENCODING_DEFAULT
  );
  procedure appendContent(
    P_RESOURCE_PATH VARCHAR2,
    P_CONTENT CLOB,
    P_DB_CHARSET VARCHAR2 default DBMS_XDB_CONSTANTS.ENCODING_DEFAULT
  );
  procedure createHomeFolder;
  procedure createPublicFolder;
  procedure setPublicIndexPageContent;
  function getXMLReference(P_RESOURCE_PATH VARCHAR2) return REF XMLType;
  function getXMLReferenceByResID(P_RESOID RAW) return REF XMLType;
  function isCheckedOutByRESID(P_RESOID RAW) return BOOLEAN;
  function getVersionsByPath(P_RESOURCE_PATH VARCHAR2) return RESOURCE_ID_TABLE pipelined;
  function getVersionsByResid(RESID RAW) return RESOURCE_ID_TABLE pipelined;
  function IS_VERSIONED(P_RESOURCE DBMS_XMLDOM.DOMDocument) return BOOLEAN;
  function IS_VERSIONED(P_RESOURCE XMLTYPE) return BOOLEAN;
  function IS_VERSIONED(P_RESOURCE_PATH VARCHAR2) return BOOLEAN;
  procedure UPDATECONTENT(P_RESOURCE_PATH VARCHAR2, P_CONTENT BLOB);
  procedure UPLOADRESOURCE(
    P_RESOURCE_PATH VARCHAR2,
    P_CONTENT BLOB,
    P_DUPLICATE_POLICY VARCHAR2 DEFAULT XDB_CONSTANTS.RAISE_ERROR
  );
  procedure printXMLToFile(
    P_XML_CONTENT XMLType,
    P_TARGET_DIRECTORY varchar2,
    P_FILENAME VARCHAR2
  );
  procedure freeAcl(P_TARGET_ACL VARCHAR2, P_REPLACEMENT_ACL VARCHAR2);
  $IF DBMS_DB_VERSION.VER_LE_10_2 $THEN -- Depricated Post 10.2.x : Provided by DBMS_XDB
  procedure changeOwner(
    resourcePath varchar2,
    owner varchar2,
    recursive boolean default false
  );
  $ELSE -- 11.1.0.1.0
  function IS_VERSIONED(P_RESOURCE DBMS_XDBRESOURCE.XDBResource) return BOOLEAN;
  function migrateACL(ACL XMLTYPE) return XMLTYPE;
  function migrateACLResource(resourceXML XMLTYPE) return XMLTYPE;
  function serializeResource(xdbResource DBMS_XDBRESOURCE.XDBResource) return xmltype;
  function serializeEvent(repositoryEvent DBMS_XEVENT.XDBRepositoryEvent) return xmltype;
  procedure freeResConfig(P_RESCONFIG_PATH VARCHAR2);
  $END --
  end XDBPM_UTILITIES;
