schema: WMSYS
name: ALL_REMOVED_WORKSPACES
updatedAllowed: false
insertAllowed: false
columns:
- name: CONTINUALLY_REFRESHED
  dataType: VARCHAR2
  textMaxLength: 3
  nullable: true
  ordinalPosition: 10
  dataTypeLength: 3
- name: CREATETIME
  dataType: TIMESTAMP(6) WITH TIME ZONE
  numericScale: 6
  nullable: true
  ordinalPosition: 6
  dataTypeLength:
- name: DESCRIPTION
  dataType: VARCHAR2
  textMaxLength: 1000
  nullable: true
  ordinalPosition: 8
  dataTypeLength: 1000
- name: MP_ROOT_WORKSPACE_ID
  dataType: NUMBER
  numericScale: 0
  nullable: true
  ordinalPosition: 9
  dataTypeLength:
- name: OWNER
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: true
  ordinalPosition: 1
  dataTypeLength: 128
- name: PARENT_WORKSPACE_ID
  dataType: NUMBER
  numericScale: 0
  nullable: true
  ordinalPosition: 5
  dataTypeLength:
- name: PARENT_WORKSPACE_NAME
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: true
  ordinalPosition: 4
  dataTypeLength: 128
- name: RETIRETIME
  dataType: TIMESTAMP(6) WITH TIME ZONE
  numericScale: 6
  nullable: true
  ordinalPosition: 7
  dataTypeLength:
- name: WORKSPACE_ID
  dataType: NUMBER
  numericScale: 0
  nullable: true
  ordinalPosition: 3
  dataTypeLength:
- name: WORKSPACE_NAME
  dataType: VARCHAR2
  textMaxLength: 128
  nullable: true
  ordinalPosition: 2
  dataTypeLength: 128
referencedTables:
- schema: WMSYS
  name: USER_WM_PRIVS
- schema: WMSYS
  name: WM$REMOVED_WORKSPACES_TABLE
viewDefinition: |-
  select
    owner,
    workspace_name,
    workspace_id,
    parent_workspace_name,
    parent_workspace_id,
    createtime,
    retiretime,
    description,
    mp_root_id mp_root_workspace_id,
    decode(rwt.isRefreshed, 1, 'YES', 'NO') continually_refreshed
  from
    wmsys.wm$removed_workspaces_table rwt
  where
    exists (
      select
        1
      from
        wmsys.user_wm_privs
      where
        privilege = 'WM_ADMIN'
        or privilege like '%ANY%'
    )
  union
  select
    owner,
    workspace_name,
    workspace_id,
    parent_workspace_name,
    parent_workspace_id,
    createtime,
    retiretime,
    description,
    mp_root_id mp_root_workspace_id,
    decode(rwt.isRefreshed, 1, 'YES', 'NO') continually_refreshed
  from
    wmsys.wm$removed_workspaces_table rwt,
    (
      select
        distinct workspace
      from
        wmsys.user_wm_privs
    ) u
  where
    rwt.workspace_name = u.workspace
  union
  select
    owner,
    workspace_name,
    workspace_id,
    parent_workspace_name,
    parent_workspace_id,
    createtime,
    retiretime,
    description,
    mp_root_id mp_root_workspace_id,
    decode(rwt.isRefreshed, 1, 'YES', 'NO') continually_refreshed
  from
    wmsys.wm$removed_workspaces_table rwt
  where
    rwt.owner = sys_context('userenv', 'current_user') WITH READ ONLY
