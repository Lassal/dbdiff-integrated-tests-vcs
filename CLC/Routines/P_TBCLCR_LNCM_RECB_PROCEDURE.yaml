schema: CLC
name: P_TBCLCR_LNCM_RECB
routineType: PROCEDURE
returnParamater: null
parameters: []
routineDefinition: |-
  PROCEDURE P_TBCLCR_LNCM_RECB IS CURSOR C_CURSOR(v_data DATE) IS WITH GRUPOS AS(
    SELECT
      CD_BNDR,
      CD_GRPO_RMNR,
      DT_INCO_VGNC,
      DT_FIM_VGNC,
      CD_TIPO_RMNR
    FROM
      CCR.TBCCRR_GRPO_RMNR
    WHERE
      IN_RGST_ATVO = 'S'
      AND DT_INCO_VGNC <= v_data
      AND (
        DT_FIM_VGNC IS NULL
        OR DT_FIM_VGNC >= v_data
      )
  ),
  CADASTRO AS (
    SELECT
      MIN(NU_CLNT) AS NU_CLNT,
      NU_RAIZ_CNPJ_CLNT
    FROM
      CCR.TBCCRR_CLNT
    WHERE
      NU_RAIZ_CNPJ_CLNT IS NOT NULL
    GROUP BY
      NU_RAIZ_CNPJ_CLNT
  ),
  CADASTRO_PF AS (
    SELECT
      MIN(NU_CLNT) AS NU_CLNT,
      NU_CPF_CLNT
    FROM
      CCR.TBCCRR_CLNT
    WHERE
      NU_CPF_CLNT IS NOT NULL
    GROUP BY
      NU_CPF_CLNT
  ),
  ESPECIAL_OLD AS (
    SELECT
      T1.CD_BNDR,
      T1.NU_CLNT,
      T1.CD_GRPO_RMNR
    FROM
      CCR.TBCCRR_RMNR_DIFR_CLNT T1,
      GRUPOS T2
    WHERE
      T1.IN_RGST_ATVO = 'S'
      AND T2.CD_TIPO_RMNR = 2
      AND T1.CD_TIPO_RMNR = T2.CD_TIPO_RMNR
      AND T1.CD_GRPO_RMNR = T2.CD_GRPO_RMNR
      AND T1.CD_BNDR = T2.CD_BNDR
  ),
  ESPECIAL AS (
    SELECT
      T1.CD_BNDR,
      T1.NU_CLNT,
      T1.CD_GRPO_RMNR,
      T3.NU_RAIZ_CNPJ_CLNT
    FROM
      CCR.TBCCRR_RMNR_DIFR_CLNT T1,
      GRUPOS T2,
      CADASTRO T3
    WHERE
      T1.IN_RGST_ATVO = 'S'
      AND T2.CD_TIPO_RMNR = 2
      AND T1.NU_CLNT = T3.NU_CLNT
      AND T1.CD_TIPO_RMNR = T2.CD_TIPO_RMNR
      AND T1.CD_GRPO_RMNR = T2.CD_GRPO_RMNR
      AND T1.CD_BNDR = T2.CD_BNDR
  ),
  ESPECIAL_PF AS (
    SELECT
      T1.CD_BNDR,
      T1.NU_CLNT,
      T1.CD_GRPO_RMNR,
      T3.NU_CPF_CLNT
    FROM
      CCR.TBCCRR_RMNR_DIFR_CLNT T1,
      GRUPOS T2,
      CADASTRO_PF T3
    WHERE
      T1.IN_RGST_ATVO = 'S'
      AND T2.CD_TIPO_RMNR = 2
      AND T1.NU_CLNT = T3.NU_CLNT
      AND T1.CD_TIPO_RMNR = T2.CD_TIPO_RMNR
      AND T1.CD_GRPO_RMNR = T2.CD_GRPO_RMNR
      AND T1.CD_BNDR = T2.CD_BNDR
  ),
  PADRAO AS (
    SELECT
      T1.CD_BNDR,
      T1.CD_MCC_BNDR,
      T1.CD_GRPO_RMNR
    FROM
      CCR.TBCCRR_GRPO_RMNR_MCC T1,
      GRUPOS T2
    WHERE
      T1.IN_RGST_ATVO = 'S'
      AND T2.CD_TIPO_RMNR = 1
      AND T1.CD_TIPO_RMNR = T2.CD_TIPO_RMNR
      AND T1.CD_GRPO_RMNR = T2.CD_GRPO_RMNR
      AND T1.CD_BNDR = T2.CD_BNDR
  ),
  PRODUTO AS (
    SELECT
      CD_BNDR,
      CD_PRDT_BNDR,
      CD_TIPO_FOMA_PGMN
    FROM
      CPR.TBCPRR_PRDT_BNDR
    WHERE
      IN_RGST_ATVO = 'S'
  ),
  NOT_CRDE_REM AS (
    SELECT
      CD_BNDR,
      CD_CRDE
    FROM
      CLC.TBCLCR_PRMT_RMNR_CRDE
  )
  SELECT
    /*+ parallel 2 */
    LANCAMENTOS_RECEBIDOS.IN_TRNS_ORGM_FCLT,
    LANCAMENTOS_RECEBIDOS.NU_CLNT,
    LANCAMENTOS_RECEBIDOS.NU_CLNT_FCLT,
    ESPECIAL_FCLT.CD_GRPO_RMNR AS GRP_ESP_FCLT,
    DECODE(
      LANCAMENTOS_RECEBIDOS.DT_RERO_EMSR,
      LANCAMENTOS_RECEBIDOS.DT_RFRN_MVMN,
      0,
      1
    ) TE01,
    LANCAMENTOS_RECEBIDOS.DT_RFRN_MVMN,
    LANCAMENTOS_RECEBIDOS.CD_BNDR,
    LANCAMENTOS_RECEBIDOS.CD_TIPO_PLTF_PGMN,
    LANCAMENTOS_RECEBIDOS.CD_CRDE,
    LANCAMENTOS_RECEBIDOS.CD_EMSR,
    LANCAMENTOS_RECEBIDOS.CD_PCSR,
    LANCAMENTOS_RECEBIDOS.CD_RASD_CICL_VIDA_TRNS,
    LANCAMENTOS_RECEBIDOS.NU_RFRN,
    LANCAMENTOS_RECEBIDOS.CD_ATZC_TRNS,
    LANCAMENTOS_RECEBIDOS.CD_TIPO_TRNS_BNDR_RECB,
    LANCAMENTOS_RECEBIDOS.NU_PRCL,
    LANCAMENTOS_RECEBIDOS.TX_QNTD_TOTL_PRCL,
    LANCAMENTOS_RECEBIDOS.TX_VALR_TRNS,
    LANCAMENTOS_RECEBIDOS.TX_DATA_VNDA,
    LANCAMENTOS_RECEBIDOS.TX_VALR_TAXA_EMBQ,
    LANCAMENTOS_RECEBIDOS.CD_PRDT_BNDR_RECB,
    LANCAMENTOS_RECEBIDOS.QT_DIA_LQDC_BNDR_CRDE TX_QNTD_DIA_LQDC_CRDE_BNDR,
    LANCAMENTOS_RECEBIDOS.CD_PDV_RECB,
    LANCAMENTOS_RECEBIDOS.CD_MCC_BNDR_RECB,
    LANCAMENTOS_RECEBIDOS.TX_NMRO_CPF_CLNT,
    LANCAMENTOS_RECEBIDOS.TX_NMRO_DV_CPF_CLNT,
    LANCAMENTOS_RECEBIDOS.TX_NMRO_RAIZ_CNPJ_CLNT,
    LANCAMENTOS_RECEBIDOS.TX_NMRO_FILI_CNPJ_CLNT,
    LANCAMENTOS_RECEBIDOS.TX_NMRO_DV_CNPJ_CLNT,
    LANCAMENTOS_RECEBIDOS.CD_TIPO_APRS_TRNS_RECB,
    LANCAMENTOS_RECEBIDOS.TX_VALR_VNDA,
    LANCAMENTOS_RECEBIDOS.TX_QNTD_DIA_LQDC_EMSR_BNDR,
    LANCAMENTOS_RECEBIDOS.NU_RMSA_CRDE,
    LANCAMENTOS_RECEBIDOS.NU_RMSA_EMSR,
    LANCAMENTOS_RECEBIDOS.NU_SQNL,
    LANCAMENTOS_RECEBIDOS.SG_ORGM_IFMC_RECB,
    NVL(
      ESPECIAL_DIFR.CD_GRPO_RMNR,
      ESPECIAL_DIFR_PF.CD_GRPO_RMNR
    ) AS GRP_ESP,
    PADRAO.CD_GRPO_RMNR GRP_MCC,
    PRODUTO.CD_TIPO_FOMA_PGMN,
    LANCAMENTOS_RECEBIDOS.CD_RGRA_OPRC_TRNS,
    LANCAMENTOS_RECEBIDOS.SG_TPPS_RECB,
    LANCAMENTOS_RECEBIDOS.IN_LNCM_CRTO_PSEN,
    LANCAMENTOS_RECEBIDOS.IN_AUTC_SGRN,
    LANCAMENTOS_RECEBIDOS.CD_POCS_ATZC_TRNS,
    LANCAMENTOS_RECEBIDOS.CD_TIPO_MODO_CMNC_TRNS,
    LANCAMENTOS_RECEBIDOS.IN_CLCL_LQDC_DAUT
  FROM
    CLC.TBCLCR_LNCM_RECB LANCAMENTOS_RECEBIDOS
    LEFT JOIN(ESPECIAL) ESPECIAL_DIFR ON ESPECIAL_DIFR.CD_BNDR = LANCAMENTOS_RECEBIDOS.CD_BNDR
    AND ESPECIAL_DIFR.NU_RAIZ_CNPJ_CLNT = LANCAMENTOS_RECEBIDOS.TX_NMRO_RAIZ_CNPJ_CLNT
    LEFT JOIN(ESPECIAL_PF) ESPECIAL_DIFR_PF ON ESPECIAL_DIFR_PF.CD_BNDR = LANCAMENTOS_RECEBIDOS.CD_BNDR
    AND ESPECIAL_DIFR_PF.NU_CPF_CLNT = LANCAMENTOS_RECEBIDOS.TX_NMRO_CPF_CLNT
    LEFT JOIN(ESPECIAL_OLD) ESPECIAL_FCLT ON ESPECIAL_FCLT.CD_BNDR = LANCAMENTOS_RECEBIDOS.CD_BNDR
    AND ESPECIAL_FCLT.NU_CLNT = LANCAMENTOS_RECEBIDOS.NU_CLNT_FCLT
    LEFT JOIN PADRAO ON PADRAO.CD_BNDR = LANCAMENTOS_RECEBIDOS.CD_BNDR
    AND PADRAO.CD_MCC_BNDR = LANCAMENTOS_RECEBIDOS.CD_MCC_BNDR_RECB
    LEFT JOIN PRODUTO ON PRODUTO.CD_BNDR = LANCAMENTOS_RECEBIDOS.CD_BNDR
    AND PRODUTO.CD_PRDT_BNDR = LANCAMENTOS_RECEBIDOS.CD_PRDT_BNDR_RECB
  WHERE
    LANCAMENTOS_RECEBIDOS.DT_RERO_EMSR = v_data
    AND LANCAMENTOS_RECEBIDOS.SG_ORGM_IFMC_RECB = 'CRD'
    AND LANCAMENTOS_RECEBIDOS.CD_ERRO_PCSM_LQDC_RECB >= CHR(0)
    AND LANCAMENTOS_RECEBIDOS.CD_CRDE NOT IN (
      SELECT
        NC.CD_CRDE
      FROM
        NOT_CRDE_REM NC
      WHERE
        NC.CD_BNDR = LANCAMENTOS_RECEBIDOS.CD_BNDR
    );
  TYPE TYPE_CURSOR IS TABLE OF C_CURSOR % ROWTYPE INDEX BY BINARY_INTEGER;
  R_CURSOR TYPE_CURSOR;
  V_TRUNC1 VARCHAR2(100): = 'TRUNCATE TABLE CLC.tbl_carga';
  v_data DATE;
  BEGIN
    -- execute immediate v_trunc;
    EXECUTE IMMEDIATE v_trunc1;
  SELECT
    dt_movement INTO v_data
  FROM
    CNTRPCSM.TBSHRR_MOVEMENT_DATE_PROCESS
  WHERE
    cd_movement_status = 'P';
  OPEN C_CURSOR(v_data);
  LOOP
    --preenche a memória de 50000 em 50000 registros
    FETCH C_CURSOR BULK COLLECT INTO R_CURSOR
  LIMIT
    1000;
  EXIT
    WHEN R_CURSOR.COUNT = 0;
  FORALL I IN 1 .. R_CURSOR.COUNT
  INSERT INTO
    CLC.tbl_carga
  VALUES
    (
      R_CURSOR(I) .IN_TRNS_ORGM_FCLT,
      R_CURSOR(I) .NU_CLNT,
      R_CURSOR(I) .NU_CLNT_FCLT,
      R_CURSOR(I) .GRP_ESP_FCLT,
      R_CURSOR(I) .TE01,
      R_CURSOR(I) .DT_RFRN_MVMN,
      R_CURSOR(I) .CD_BNDR,
      R_CURSOR(I) .CD_TIPO_PLTF_PGMN,
      R_CURSOR(I) .CD_CRDE,
      R_CURSOR(I) .CD_EMSR,
      R_CURSOR(I) .CD_PCSR,
      R_CURSOR(I) .CD_RASD_CICL_VIDA_TRNS,
      R_CURSOR(I) .NU_RFRN,
      R_CURSOR(I) .CD_ATZC_TRNS,
      R_CURSOR(I) .CD_TIPO_TRNS_BNDR_RECB,
      R_CURSOR(I) .NU_PRCL,
      R_CURSOR(I) .TX_QNTD_TOTL_PRCL,
      R_CURSOR(I) .TX_VALR_TRNS,
      R_CURSOR(I) .TX_DATA_VNDA,
      R_CURSOR(I) .TX_VALR_TAXA_EMBQ,
      R_CURSOR(I) .CD_PRDT_BNDR_RECB,
      R_CURSOR(I) .TX_QNTD_DIA_LQDC_CRDE_BNDR,
      R_CURSOR(I) .CD_PDV_RECB,
      R_CURSOR(I) .CD_MCC_BNDR_RECB,
      R_CURSOR(I) .TX_NMRO_CPF_CLNT,
      R_CURSOR(I) .TX_NMRO_DV_CPF_CLNT,
      R_CURSOR(I) .TX_NMRO_RAIZ_CNPJ_CLNT,
      R_CURSOR(I) .TX_NMRO_FILI_CNPJ_CLNT,
      R_CURSOR(I) .TX_NMRO_DV_CNPJ_CLNT,
      R_CURSOR(I) .CD_TIPO_APRS_TRNS_RECB,
      R_CURSOR(I) .TX_VALR_VNDA,
      R_CURSOR(I) .TX_QNTD_DIA_LQDC_EMSR_BNDR,
      R_CURSOR(I) .NU_RMSA_CRDE,
      R_CURSOR(I) .NU_RMSA_EMSR,
      R_CURSOR(I) .NU_SQNL,
      R_CURSOR(I) .SG_ORGM_IFMC_RECB,
      R_CURSOR(I) .GRP_ESP,
      R_CURSOR(I) .GRP_MCC,
      R_CURSOR(I) .CD_TIPO_FOMA_PGMN,
      R_CURSOR(I) .CD_RGRA_OPRC_TRNS,
      R_CURSOR(I) .SG_TPPS_RECB,
      R_CURSOR(I) .IN_LNCM_CRTO_PSEN,
      NVL(R_CURSOR(I) .IN_AUTC_SGRN, 'N'),
      R_CURSOR(I) .CD_POCS_ATZC_TRNS,
      R_CURSOR(I) .CD_TIPO_MODO_CMNC_TRNS,
      R_CURSOR(I) .IN_CLCL_LQDC_DAUT
    );
  COMMIT;
  END
  LOOP;
  --VAI APLICAR COMMIT DE 50000 EM 50000;
    COMMIT;
  -- END LOOP C_CURSOR;
    CLOSE C_CURSOR;
  DBMS_STATS.GATHER_TABLE_STATS(
      'CLC',
      'TBL_CARGA',
      method_opt = > 'FOR ALL COLUMNS SIZE 1',
      CASCADE = > TRUE,
      DEGREE = > 6,
      estimate_percent = > dbms_stats.auto_sample_size,
      NO_INVALIDATE = > FALSE,
      GRANULARITY = > 'ALL'
    );
  COMMIT;
  END;
