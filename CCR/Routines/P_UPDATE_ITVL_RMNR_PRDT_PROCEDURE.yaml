schema: CCR
name: P_UPDATE_ITVL_RMNR_PRDT
routineType: PROCEDURE
returnParamater: null
parameters: []
routineDefinition: |-
  PROCEDURE p_update_ITVL_RMNR_PRDT IS CURSOR C_CURSOR IS
  SELECT
    b.rowid browid,
    a .CD_BNDR,
    a .CD_GRPO_RMNR,
    a .CD_TIPO_RMNR,
    a .CD_PRDT_BNDR,
    a .cd_itvl_prcl,
    a .DH_INCL_RGST,
    a .CD_USRO_INCL_RGST,
    a .CD_USRO_ACAO_RGST,
    a .CD_TIPO_FOMA_CBRN_BNDR,
    a .IN_RGST_ATVO,
    a .CD_TIPO_ACAO_RGST,
    a .PC_TAXA_USO_BNDR,
    a .VL_MXMO_CBRN_USO_BNDR,
    a .VL_TARF_CBRN_USO_BNDR,
    a .VL_ADCN_PRCL,
    a .PC_TAXA_USO_BNDR_PF,
    a .VL_MXMO_CBRN_USO_BNDR_PF,
    a .VL_TARF_CBRN_USO_BNDR_PF,
    a .VL_ADCN_PRCL_PF
  FROM
    CCR.TBCCRR_ITVL_RMNR_PRDT a,
    CCR.TBCCRR_LOG_ITVL_RMNR_PRDT b
  WHERE
    a .CD_BNDR = b.CD_BNDR
    AND a .CD_GRPO_RMNR = b.CD_GRPO_RMNR
    AND a .CD_TIPO_RMNR = b.CD_TIPO_RMNR
    AND a .CD_PRDT_BNDR = b.CD_PRDT_BNDR
    AND a .cd_itvl_prcl = b.cd_itvl_prcl
    AND a .CD_TIPO_FOMA_CBRN_BNDR = b.CD_TIPO_FOMA_CBRN_BNDR
    AND b.DH_ACAO_FIM_RGST IS NULL
    AND (
      TRIM(a .IN_RGST_ATVO) <> TRIM(b.IN_RGST_ATVO)
      OR TRIM(a .CD_TIPO_ACAO_RGST) <> TRIM(b.CD_TIPO_ACAO_RGST)
      OR NVL(a .PC_TAXA_USO_BNDR, 0) <> NVL(b.PC_TAXA_USO_BNDR, 0)
      OR NVL(a .VL_MXMO_CBRN_USO_BNDR, 0) <> NVL(b.VL_MXMO_CBRN_USO_BNDR, 0)
      OR NVL(a .VL_TARF_CBRN_USO_BNDR, 0) <> NVL(b.VL_TARF_CBRN_USO_BNDR, 0)
      OR NVL(a .VL_ADCN_PRCL, 0) <> NVL(b.VL_ADCN_PRCL, 0)
      OR NVL(a .PC_TAXA_USO_BNDR_PF, 0) <> NVL(b.PC_TAXA_USO_BNDR_PF, 0)
      OR NVL(a .VL_MXMO_CBRN_USO_BNDR_PF, 0) <> NVL(b.VL_MXMO_CBRN_USO_BNDR_PF, 0)
      OR NVL(a .VL_TARF_CBRN_USO_BNDR_PF, 0) <> NVL(b.VL_TARF_CBRN_USO_BNDR_PF, 0)
      OR NVL(a .VL_ADCN_PRCL_PF, 0) <> NVL(b.VL_ADCN_PRCL_PF, 0)
    );
  TYPE TYPE_CURSOR IS TABLE OF C_CURSOR % ROWTYPE INDEX BY BINARY_INTEGER;
  R_CURSOR TYPE_CURSOR;
  BEGIN
    OPEN C_CURSOR;
  LOOP
    --preenche a memória de 1000 em 1000 registros
    FETCH C_CURSOR BULK COLLECT INTO R_CURSOR
  LIMIT
    1000;
  EXIT
    WHEN R_CURSOR.COUNT = 0;
  FOR I IN 1 .. R_CURSOR.COUNT
  LOOP
  UPDATE
    CCR.TBCCRR_LOG_ITVL_RMNR_PRDT
  SET
    TBCCRR_LOG_ITVL_RMNR_PRDT.IN_RGST_ATVO = R_CURSOR(I) .in_rgst_atvo,
    TBCCRR_LOG_ITVL_RMNR_PRDT.CD_TIPO_ACAO_RGST = R_CURSOR(I) .cd_tipo_acao_rgst,
    TBCCRR_LOG_ITVL_RMNR_PRDT.PC_TAXA_USO_BNDR = R_CURSOR(I) .PC_TAXA_USO_BNDR,
    TBCCRR_LOG_ITVL_RMNR_PRDT.VL_MXMO_CBRN_USO_BNDR = R_CURSOR(I) .VL_MXMO_CBRN_USO_BNDR,
    TBCCRR_LOG_ITVL_RMNR_PRDT.VL_TARF_CBRN_USO_BNDR = R_CURSOR(I) .VL_TARF_CBRN_USO_BNDR,
    TBCCRR_LOG_ITVL_RMNR_PRDT.VL_ADCN_PRCL = R_CURSOR(I) .VL_ADCN_PRCL,
    TBCCRR_LOG_ITVL_RMNR_PRDT.PC_TAXA_USO_BNDR_PF = R_CURSOR(I) .PC_TAXA_USO_BNDR_PF,
    TBCCRR_LOG_ITVL_RMNR_PRDT.VL_MXMO_CBRN_USO_BNDR_PF = R_CURSOR(I) .VL_MXMO_CBRN_USO_BNDR_PF,
    TBCCRR_LOG_ITVL_RMNR_PRDT.VL_TARF_CBRN_USO_BNDR_PF = R_CURSOR(I) .VL_TARF_CBRN_USO_BNDR_PF,
    TBCCRR_LOG_ITVL_RMNR_PRDT.VL_ADCN_PRCL_PF = R_CURSOR(I) .VL_ADCN_PRCL_PF
  where
    rowid = R_CURSOR(I) .browid;
  --dbms_output.put_line(R_CURSOR(I).in_rgst_atvo||' '||R_CURSOR(I).cd_tipo_acao_rgst||' '||R_CURSOR(I).VL_TARF_CBRN_USO_BNDR);
  END
  LOOP;
  --VAI APLICAR COMMIT DE 1000 EM 1000;
    COMMIT;
  END
  LOOP
    C_CURSOR;
  CLOSE C_CURSOR;
  commit;
  END;
