schema: APEX_050000
name: WWV_FLOW_GENERATE_DDL
routineType: PACKAGE
returnParamater:
  name: GET_DDL_SUPPORTING_OBJECTS.(--return--)
  dataType: PL/SQL TABLE
  parameterMode: OUT
  ordinalPosition: 0
parameters:
- name: EXECUTE_GET_DDL.P_SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: EXECUTE_GET_DDL.P_OBJECT_TYPES
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: EXECUTE_GET_DDL.P_OBJECTS
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: EXECUTE_GET_DDL.P_OUTPUT_TYPE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
- name: EXECUTE_GET_DDL.P_FILTER
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 5
- name: EXECUTE_GET_DDL.P_FILENAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 6
- name: EXECUTE_GET_DDL.P_FILE_TYPE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 7
- name: EXECUTE_GET_DDL.P_DESCRIPTION
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 8
- name: EXECUTE_GET_TABLE_DDL.P_SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: EXECUTE_GET_TABLE_DDL.P_TABLE_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: GET_DDL.P_SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: GET_DDL.P_OBJECT_TYPE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: GET_DDL.P_OBJECTS
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: GET_DDL.P_OUTPUT_TYPE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
- name: GET_DDL.P_FILTER
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 5
- name: GET_DDL_SUPPORTING_OBJECTS.P_SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: GET_DDL_SUPPORTING_OBJECTS.P_OBJECT_TYPE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: GET_DDL_SUPPORTING_OBJECTS.P_OBJECTS
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
routineDefinition: |-
  package wwv_flow_generate_ddl --  Copyright (c) Oracle Corporation 1999 - 2002. All Rights Reserved.
  --
  --    NAME
  --      generate_ddl.sql
  --
  --    DESCRIPTION
  --      Used to generate DDL using dbms_metadata.
  --
  --    NOTES
  --      This package will only compile in 9i and above.
  --
  --    SECURITY
  --      Grant execute to Public.  Synonym is NOT availabe on wwv_flow_generate_ddl.
  --      This package is invokers right package.
  --      Flows owner needs SELECT_CATALOG_ROLE granted to run this package.
  --
  --    NOTES
  --
  --    INTERNATIONALIZATION
  --      unknown
  --
  --    MULTI-CUSTOMER
  --      unknown
  --
  --    CUSTOMER MAY CUSTOMIZE
  --      NO
  --
  --
  AUTHID CURRENT_USER as empty_vc_arr wwv_flow_global.vc_arr2;
  function get_ddl_supporting_objects (
    p_schema in varchar2,
    p_object_type in varchar2,
    p_objects in varchar2 default null
  ) return wwv_flow.clob_arr;
  procedure get_ddl (
    p_schema in varchar2,
    p_object_type in varchar2,
    p_objects in varchar2 default null,
    p_output_type in varchar2 default null,
    p_filter in varchar2 default 'NAME_EXPR'
  );
  procedure execute_get_ddl (
    p_schema in varchar2,
    p_object_types in varchar2,
    p_objects in varchar2 default null,
    p_output_type in varchar2 default null,
    p_filter in varchar2 default 'NAME_EXPR',
    p_filename in varchar2 default null,
    p_file_type in varchar2 default 'sql',
    p_description in varchar2 default null
  );
  procedure execute_get_table_ddl (
    p_schema in varchar2,
    p_table_name in varchar2 default null
  );
  end wwv_flow_generate_ddl;
