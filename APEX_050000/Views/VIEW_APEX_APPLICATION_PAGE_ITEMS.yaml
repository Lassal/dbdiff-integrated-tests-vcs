schema: APEX_050000
name: APEX_APPLICATION_PAGE_ITEMS
updatedAllowed: true
insertAllowed: true
columns: []
referencedTables: []
viewDefinition: |-
  select
    w.short_name workspace,
    w.display_name workspace_display_name,
    p.flow_id application_id,
    f.name application_name,
    p.id page_id,
    p.name page_name,
    --
    i.name item_name,
    case
      substr(i.display_as, 1, 7)
      when 'NATIVE_' then (
        select
          display_name
        from
          wwv_flow_plugins
        where
          flow_id = 4411
          and plugin_type = 'ITEM TYPE'
          and name = substr(i.display_as, 8)
      )
      when 'PLUGIN_' then (
        select
          display_name
        from
          wwv_flow_plugins
        where
          flow_id = p.flow_id
          and plugin_type = 'ITEM TYPE'
          and name = substr(i.display_as, 8)
      )
      else nvl(
        (
          select
            display_name
          from
            wwv_flow_standard_item_types
          where
            name = i.display_as
        ),
        i.display_as
      )
    end display_as,
    i.display_as display_as_code,
    decode(
      i.DATA_TYPE,
      'NUMBER',
      'Numbers Only',
      'VARCHAR',
      'Varchar',
      i.DATA_TYPE
    ) item_data_type,
    case
      when i.is_required = 'Y' then 'Yes'
      else 'No'
    end is_required,
    nvl(
      i.standard_validations,
      'Application Level Setting'
    ) standard_validations,
    --
    i.ITEM_SEQUENCE display_sequence,
    (
      select
        plug_name
      from
        wwv_flow_page_plugs
      where
        id = i.ITEM_PLUG_ID
    ) region,
    i.item_plug_id region_id,
    --
    decode(
      i.USE_CACHE_BEFORE_DEFAULT,
      'NO',
      'Always, replacing any existing value in session state',
      'YES',
      'Only when current value in session state is null',
      i.USE_CACHE_BEFORE_DEFAULT
    ) source_used,
    i.ITEM_DEFAULT item_default,
    i.ITEM_DEFAULT_TYPE item_default_type,
    --
    i.PROMPT label,
    i.placeholder placeholder,
    i.PRE_ELEMENT_TEXT pre_element_text,
    i.POST_ELEMENT_TEXT post_element_text,
    i.FORMAT_MASK format_mask,
    (
      select
        template_name
      from
        wwv_flow_field_templates
      where
        id = to_char(i.ITEM_FIELD_TEMPLATE)
        and flow_id = f.id
    ) item_label_template,
    i.ITEM_FIELD_TEMPLATE item_label_template_id,
    i.item_css_classes item_css_classes,
    i.item_template_options item_template_options,
    i.SOURCE item_source,
    decode(
      i.SOURCE_TYPE,
      'ALWAYS_NULL',
      'Always Null',
      'STATIC',
      'Static Assignment (value equals source attribute)',
      'QUERY',
      'SQL Query (return single value)',
      'QUERY_COLON',
      'SQL Query (return colon separated value)',
      'ITEM',
      'Item (application or page item name)',
      'FUNCTION',
      'PL/SQL Expression or Function',
      'FUNCTION_BODY',
      'PL/SQL Function Body',
      'DB_COLUMN',
      'Database Column',
      'PREFERENCE',
      'Preference',
      i.SOURCE_TYPE
    ) item_source_type,
    decode(i.encrypt_session_state_yn, 'Y', 'Yes', 'No') encrypt_session_state,
    i.SOURCE_POST_COMPUTATION source_post_computation,
    -- read only conditionality
    nvl(
      (
        select
          r
        from
          apex_standard_conditions
        where
          d = i.READ_ONLY_WHEN_TYPE
      ),
      i.READ_ONLY_WHEN_TYPE
    ) read_only_condition_type,
    i.read_only_when_type read_only_condition_type_code,
    i.READ_ONLY_WHEN read_only_condition_exp1,
    i.READ_ONLY_WHEN2 read_only_condition_exp2,
    i.READ_ONLY_DISP_ATTR read_only_display_attr,
    --
    i.NAMED_LOV lov_named_lov,
    i.LOV lov_definition,
    decode(
      i.LOV_DISPLAY_EXTRA,
      'NO',
      'No',
      'YES',
      'Yes',
      i.LOV_DISPLAY_EXTRA
    ) lov_display_extra,
    decode(
      i.LOV_DISPLAY_NULL,
      'NO',
      'No',
      'YES',
      'Yes',
      i.LOV_DISPLAY_NULL
    ) lov_display_null,
    i.LOV_NULL_TEXT lov_null_text,
    i.LOV_NULL_VALUE lov_null_value,
    decode(
      i.LOV_TRANSLATED,
      'N',
      'No',
      'Y',
      'Yes',
      i.LOV_TRANSLATED
    ) lov_query_result_translated,
    lov_cascade_parent_items,
    ajax_items_to_submit,
    case
      nvl(i.ajax_optimize_refresh, 'Y')
      when 'Y' then 'Yes'
      when 'N' then 'No'
      else i.ajax_optimize_refresh
    end ajax_optimize_refresh,
    --
    i.csize item_element_width,
    i.cmaxlength item_element_max_length,
    i.cheight item_element_height,
    --
    i.cattributes html_table_cell_attr_label,
    i.cattributes_element html_table_cell_attr_element,
    /* for backwards compatibility, replaced by grid_column_attributes */
    i.tag_css_classes html_form_element_css_classes,
    i.tag_attributes html_form_element_attributes,
    i.tag_attributes2 form_element_option_attributes,
    --
    i.button_image item_button_image,
    i.button_image_attr item_button_image_attributes,
    --
    case
      i.new_grid
      when 'Y' then 'Yes'
      else 'No'
    end new_grid,
    case
      i.begin_on_new_line
      when 'Y' then 'Yes'
      else 'No'
    end new_grid_row,
    case
      i.begin_on_new_field
      when 'Y' then 'Yes'
      else 'No'
    end new_grid_column,
    i.grid_column grid_column,
    i.colspan grid_column_span,
    i.grid_label_column_span,
    i.grid_column_css_classes,
    i.cattributes_element grid_column_attributes,
    --
    decode(
      i.BEGIN_ON_NEW_LINE,
      'N',
      'No',
      'Y',
      'Yes',
      i.BEGIN_ON_NEW_LINE
    ) begins_on_new_row,
    /* for backward compatibility */
    decode(
      i.BEGIN_ON_NEW_FIELD,
      'N',
      'No',
      'Y',
      'Yes',
      i.BEGIN_ON_NEW_FIELD
    ) begins_on_new_cell,
    /* for backward compatibility */
    i.COLSPAN column_span,
    /* for backward compatibility */
    --
    i.ROWSPAN row_span,
    --
    decode(
      i.LABEL_ALIGNMENT,
      'ABOVE',
      'Above',
      'BELOW',
      'Below',
      'CENTER',
      'Center',
      'CENTER-BOTTOM',
      'Bottom center',
      'CENTER-CENTER',
      'Center center',
      'CENTER-TOP',
      'Top center',
      'LEFT',
      'Left',
      'LEFT-BOTTOM',
      'Bottom left',
      'LEFT-CENTER',
      'Center left',
      'LEFT-TOP',
      'Top left',
      'RIGHT',
      'Right',
      'RIGHT-BOTTOM',
      'Bottom right',
      'RIGHT-CENTER',
      'Center right',
      'RIGHT-TOP',
      'Top right',
      i.LABEL_ALIGNMENT
    ) label_alignment,
    decode(
      i.FIELD_ALIGNMENT,
      'CENTER',
      'Center',
      'CENTER-BOTTOM',
      'Center bottom',
      'CENTER-CENTER',
      'Center center',
      'CENTER-TOP',
      'Center top',
      'LEFT',
      'Left',
      'LEFT-BOTTOM',
      'Left bottom',
      'LEFT-CENTER',
      'Left center',
      'LEFT-TOP',
      'Left top',
      'RIGHT',
      'Right',
      'RIGHT-BOTTOM',
      'Right bottom',
      'RIGHT-CENTER',
      'Right center',
      'RIGHT-TOP',
      'Right top',
      i.FIELD_ALIGNMENT
    ) item_alignment,
    --
    --i.FIELD_TEMPLATE,
    --
    decode(
      i.show_quick_picks,
      'NO',
      'No',
      'YES',
      'Yes',
      i.show_quick_picks
    ) show_quick_picks,
    i.quick_pick_link_attr,
    i.quick_pick_label_01,
    i.quick_pick_value_01,
    i.quick_pick_label_02,
    i.quick_pick_value_02,
    i.quick_pick_label_03,
    i.quick_pick_value_03,
    i.quick_pick_label_04,
    i.quick_pick_value_04,
    i.quick_pick_label_05,
    i.quick_pick_value_05,
    i.quick_pick_label_06,
    i.quick_pick_value_06,
    i.quick_pick_label_07,
    i.quick_pick_value_07,
    i.quick_pick_label_08,
    i.quick_pick_value_08,
    i.quick_pick_label_09,
    i.quick_pick_value_09,
    i.quick_pick_label_10,
    i.quick_pick_value_10,
    --
    i.attribute_01,
    i.attribute_02,
    i.attribute_03,
    i.attribute_04,
    i.attribute_05,
    i.attribute_06,
    i.attribute_07,
    i.attribute_08,
    i.attribute_09,
    i.attribute_10,
    i.attribute_11,
    i.attribute_12,
    i.attribute_13,
    i.attribute_14,
    i.attribute_15,
    --
    nvl(
      (
        select
          r
        from
          apex_standard_conditions
        where
          d = i.DISPLAY_WHEN_TYPE
      ),
      i.DISPLAY_WHEN_TYPE
    ) condition_type,
    i.display_when_type condition_type_code,
    i.DISPLAY_WHEN condition_expression1,
    i.DISPLAY_WHEN2 condition_expression2,
    --
    decode(
      i.IS_PERSISTENT,
      'Y',
      'Per Session',
      'U',
      'Per User',
      'N',
      'Do Not Save Session State',
      i.IS_PERSISTENT
    ) maintain_session_state,
    decode(
      nvl(i.PROTECTION_LEVEL, 'N'),
      'N',
      'Unrestricted',
      'C',
      'Arguments Must Have Checksum',
      'U',
      'No Arguments Allowed',
      'D',
      'No URL Access',
      'S',
      'Checksum Required - Session Level',
      'I',
      'Restricted - May not be set from browser',
      'B',
      'Checksum Required - Application Level',
      'P',
      'Checksum Required - User Level',
      i.PROTECTION_LEVEL
    ) item_protection_level,
    case
      i.escape_on_http_output
      when 'Y' then 'Yes'
      when 'N' then 'No'
      else i.escape_on_http_output
    end escape_on_http_output,
    --i.ESCAPE_ON_HTTP_INPUT
    --
    decode(substr(i.SECURITY_SCHEME, 1, 1), '!', 'Not ') || nvl(
      (
        select
          name
        from
          wwv_flow_security_schemes
        where
          to_char(id) = ltrim(i.SECURITY_SCHEME, '!')
          and flow_id = f.id
      ),
      i.SECURITY_SCHEME
    ) authorization_scheme,
    i.security_scheme authorization_scheme_id,
    (
      select
        case
          when i.required_patch > 0 then PATCH_NAME
          else '{Not ' || PATCH_NAME || '}'
        end PATCH_NAME
      from
        wwv_flow_patches
      where
        id = abs(i.REQUIRED_PATCH)
    ) build_option,
    i.REQUIRED_PATCH build_option_id,
    --
    (
      select
        max(help_text) h
      from
        wwv_flow_step_item_help
      where
        FLOW_ITEM_ID = i.id
    ) item_help_text,
    --
    i.LAST_UPDATED_BY last_updated_by,
    i.LAST_UPDATED_ON last_updated_on,
    i.ITEM_COMMENT component_comment,
    i.id item_id,
    --
    i.name || ' da=' || i.display_as || decode(
      i.DATA_TYPE,
      'NUMBER',
      'NOnly',
      'VARCHAR',
      'V',
      i.DATA_TYPE
    ) || ',seq=' || lpad(i.ITEM_SEQUENCE, 5, '00000') || ',r='(
      select
        plug_name
      from
        wwv_flow_page_plugs
      where
        id = i.ITEM_PLUG_ID
    ) || ',c=' || decode(
      i.USE_CACHE_BEFORE_DEFAULT,
      'NO',
      'Always',
      'YES',
      'Only null',
      i.USE_CACHE_BEFORE_DEFAULT
    ) || ',d=' || substr(i.ITEM_DEFAULT, 1, 20) || length(i.ITEM_DEFAULT) || i.ITEM_DEFAULT_TYPE || ',l=' || substr(i.PROMPT, 1, 20) || length(i.prompt) || substr(i.PRE_ELEMENT_TEXT, 1, 10) || length(i.PRE_ELEMENT_TEXT) || substr(i.POST_ELEMENT_TEXT, 1, 10) || length(i.POST_ELEMENT_TEXT) || ',m=' || i.FORMAT_MASK || 't='(
      select
        template_name
      from
        wwv_flow_field_templates
      where
        id = to_char(i.ITEM_FIELD_TEMPLATE)
        and flow_id = f.id
    ) || 's=' || substr(i.SOURCE, 1, 30) || length(i.source) || decode(
      i.SOURCE_TYPE,
      'ALWAYS_NULL',
      'Always Null',
      'STATIC',
      'StaticAs',
      'QUERY',
      'SQLQuery',
      'QUERY_COLON',
      'SQLQueryColon',
      'ITEM',
      'Item ',
      'FUNCTION',
      'PL/SQL',
      'FUNCTION_BODY',
      'PL/SQLFunctionBody',
      'DB_COLUMN',
      'DBColumn',
      'PREFERENCE',
      'Pref',
      i.SOURCE_TYPE
    ) || length(i.SOURCE_POST_COMPUTATION) || ' ro=' || nvl(
      (
        select
          r
        from
          apex_standard_conditions
        where
          d = i.READ_ONLY_WHEN_TYPE
      ),
      i.READ_ONLY_WHEN_TYPE
    ) || length(i.READ_ONLY_WHEN) || length(i.READ_ONLY_WHEN2) || length(i.READ_ONLY_DISP_ATTR) || ',lov=' || i.NAMED_LOV || decode(i.named_lov, null, null, length(i.LOV)) || decode(
      i.LOV_DISPLAY_EXTRA,
      'NO',
      'No',
      'YES',
      'Yes',
      i.LOV_DISPLAY_EXTRA
    ) || decode(
      i.LOV_DISPLAY_NULL,
      'NO',
      'No',
      'YES',
      'Yes',
      i.LOV_DISPLAY_NULL
    ) || substr(LOV_NULL_TEXT, 1, 20) || length(LOV_NULL_TEXT) || i.LOV_NULL_VALUE || ',t=' || decode(
      i.LOV_TRANSLATED,
      'N',
      'No',
      'Y',
      'Yes',
      i.LOV_TRANSLATED
    ) || ',s=' || i.csize || i.cmaxlength || i.cheight || ',a=' || substr(i.cattributes, 1, 10) || length(i.cattributes) || length(i.cattributes_element) || length(i.tag_attributes) || length(i.tag_attributes2) || ',b=' || length(i.button_image) || length(i.button_image_attr) || ',disp=' || decode(
      i.BEGIN_ON_NEW_LINE,
      'N',
      'No',
      'Y',
      'Yes',
      i.BEGIN_ON_NEW_LINE
    ) || decode(
      i.BEGIN_ON_NEW_FIELD,
      'N',
      'No',
      'Y',
      'Yes',
      i.BEGIN_ON_NEW_FIELD
    ) || i.COLSPAN || i.ROWSPAN || ' l=' || decode(
      i.LABEL_ALIGNMENT,
      'ABOVE',
      'Above',
      'BELOW',
      'Below',
      'CENTER',
      'Center',
      'CENTER-BOTTOM',
      'Bottom center',
      'CENTER-CENTER',
      'Center center',
      'CENTER-TOP',
      'Top center',
      'LEFT',
      'Left',
      'LEFT-BOTTOM',
      'Bottom left',
      'LEFT-CENTER',
      'Center left',
      'LEFT-TOP',
      'Top left',
      'RIGHT',
      'Right',
      'RIGHT-BOTTOM',
      'Bottom right',
      'RIGHT-CENTER',
      'Center right',
      'RIGHT-TOP',
      'Top right',
      i.LABEL_ALIGNMENT
    ) || decode(
      i.FIELD_ALIGNMENT,
      'CENTER',
      'Center',
      'CENTER-BOTTOM',
      'Center bottom',
      'CENTER-CENTER',
      'Center center',
      'CENTER-TOP',
      'Center top',
      'LEFT',
      'Left',
      'LEFT-BOTTOM',
      'Left bottom',
      'LEFT-CENTER',
      'Left center',
      'LEFT-TOP',
      'Left top',
      'RIGHT',
      'Right',
      'RIGHT-BOTTOM',
      'Right bottom',
      'RIGHT-CENTER',
      'Right center',
      'RIGHT-TOP',
      'Right top',
      i.FIELD_ALIGNMENT
    ) || ',c=' || i.DISPLAY_WHEN_TYPE || substr(i.DISPLAY_WHEN, 1, 20) || length(i.DISPLAY_WHEN) || length(i.DISPLAY_WHEN2) || decode(
      i.IS_PERSISTENT,
      'Y',
      'PerSes',
      'U',
      'PerU',
      'N',
      'Do Not Save SesSt',
      i.IS_PERSISTENT
    ) || decode(
      nvl(i.PROTECTION_LEVEL, 'N'),
      'N',
      'Unrest',
      'C',
      'Arg Must Have Cs',
      'U',
      'No Arguments Allowed',
      'D',
      'No URL Access',
      'S',
      'Cs Required - Session Level',
      'I',
      'Restricted - May not be set from browser',
      'B',
      'Cs Req-AL',
      'P',
      'Cs Req-UL',
      i.PROTECTION_LEVEL
    ) || decode(substr(i.SECURITY_SCHEME, 1, 1), '!', 'Not ') || nvl(
      (
        select
          name
        from
          wwv_flow_security_schemes
        where
          to_char(id) = ltrim(i.SECURITY_SCHEME, '!')
          and flow_id = f.id
      ),
      'Not found'
    )(
      select
        PATCH_NAME
      from
        wwv_flow_patches
      where
        id = abs(i.REQUIRED_PATCH)
    ) component_signature
  from
    wwv_flow_step_items i,
    wwv_flow_steps p,
    wwv_flows f,
    wwv_flow_companies w,
    wwv_flow_company_schemas s,
    (
      select
        nvl(v('FLOW_SECURITY_GROUP_ID'), 0) sgid,
        (
          select
            sys_context('USERENV', 'CURRENT_USER')
          from
            sys.dual
        ) cu
      from
        sys.dual
    ) d
  where
    (
      s.schema = cu
      or (
        select
          wwv_flow_security.has_apex_administrator_role_yn(cu)
        from
          sys.dual
      ) = 'Y'
      or d.sgid = w.PROVISIONING_COMPANY_ID
    )
    and f.security_group_id = w.PROVISIONING_COMPANY_ID
    and s.security_group_id = w.PROVISIONING_COMPANY_ID
    and s.schema = f.owner
    and f.security_group_id = p.security_group_id
    and f.id = p.flow_id
    and f.id = i.flow_id
    and p.id = i.flow_step_id
    and (
      d.sgid != 0
      or nvl(f.BUILD_STATUS, 'x') != 'RUN_AND_HIDDEN'
    )
    and w.PROVISIONING_COMPANY_ID != 0
