schema: APEX_050000
name: APEX_APPLICATION_PAGE_BUTTONS
updatedAllowed: true
insertAllowed: true
columns: []
referencedTables: []
viewDefinition: |-
  select
    w.short_name workspace,
    w.display_name workspace_display_name,
    p.flow_id application_id,
    f.name application_name,
    p.id page_id,
    p.name page_name,
    --
    b.BUTTON_SEQUENCE button_sequence,
    (
      select
        plug_name
      from
        wwv_flow_page_plugs
      where
        id = b.BUTTON_PLUG_ID
    ) region,
    b.button_plug_id region_id,
    b.BUTTON_NAME button_name,
    b.button_static_id button_static_id,
    (
      select
        template_name
      from
        wwv_flow_button_templates
      where
        id = b.button_template_id
        and flow_id = f.id
    ) button_template,
    to_char(b.button_template_id) button_template_id,
    b.button_template_options button_template_options,
    case
      b.button_is_hot
      when 'Y' then 'Yes'
      when 'N' then 'No'
    end button_is_hot,
    cast(null as varchar2(10)) image_name,
    b.BUTTON_IMAGE_ALT label,
    nullif(b.BUTTON_POSITION, 'BODY') display_position,
    case
      b.grid_new_grid
      when 'Y' then 'Yes'
      else 'No'
    end new_grid,
    case
      b.grid_new_row
      when 'Y' then 'Yes'
      else 'No'
    end new_grid_row,
    case
      b.grid_new_column
      when 'Y' then 'Yes'
      else 'No'
    end new_grid_column,
    grid_column,
    grid_column_span,
    grid_column_css_classes,
    grid_column_attributes,
    b.BUTTON_ALIGNMENT alignment,
    --
    decode(
      b.button_action,
      'SUBMIT',
      'Submit Page',
      'REDIRECT_PAGE',
      'Redirect to Page in this Application',
      'REDIRECT_URL',
      'Redirect to URL',
      'DEFINED_BY_DA',
      'Defined by Dynamic Action',
      b.button_action
    ) button_action,
    b.button_action button_action_code,
    b.BUTTON_REDIRECT_URL redirect_url,
    case
      nvl(b.button_execute_validations, 'Y')
      when 'Y' then 'Yes'
      when 'N' then 'No'
    end execute_validations,
    --
    nvl(
      (
        select
          r
        from
          apex_standard_conditions
        where
          d = b.BUTTON_CONDITION_TYPE
      ),
      b.BUTTON_CONDITION_TYPE
    ) condition_type,
    b.button_condition_type condition_type_code,
    b.BUTTON_CONDITION condition_expression1,
    b.BUTTON_CONDITION2 condition_expression2,
    cast(null as varchar2(10)) image_attributes,
    b.button_css_classes button_css_classes,
    b.icon_css_classes icon_css_classes,
    b.BUTTON_CATTRIBUTES button_attributes,
    decode(
      b.DATABASE_ACTION,
      'DELETE',
      'SQL DELETE action',
      'INSERT',
      'SQL INSERT action',
      'UPDATE',
      'SQL UPDATE action',
      b.DATABASE_ACTION
    ) database_action,
    --
    (
      select
        case
          when b.required_patch > 0 then PATCH_NAME
          else '{Not ' || PATCH_NAME || '}'
        end PATCH_NAME
      from
        wwv_flow_patches
      where
        id = abs(b.REQUIRED_PATCH)
    ) build_option,
    --
    decode(substr(b.SECURITY_SCHEME, 1, 1), '!', 'Not ') || nvl(
      (
        select
          name
        from
          wwv_flow_security_schemes
        where
          to_char(id) = ltrim(b.SECURITY_SCHEME, '!')
          and flow_id = f.id
      ),
      b.SECURITY_SCHEME
    ) authorization_scheme,
    b.SECURITY_SCHEME authorization_scheme_id,
    --
    b.LAST_UPDATED_BY last_updated_by,
    b.LAST_UPDATED_ON last_updated_on,
    b.BUTTON_COMMENT component_comment,
    case
      button_position
      when 'BODY' then 'Among region items'
      else 'Region Position'
    end button_position,
    b.id button_id,
    --
    b.BUTTON_NAME || ',s=' || rpad(b.BUTTON_SEQUENCE, 5, '00000') || ',r='(
      select
        plug_name
      from
        wwv_flow_page_plugs
      where
        id = b.BUTTON_PLUG_ID
    ) || ',bs=' || b.button_static_id || ' t='(
      select
        template_name
      from
        wwv_flow_button_templates t
      where
        b.button_template_id = t.id
        and t.flow_id = f.id
    ) || ' label=' || b.BUTTON_IMAGE_ALT || ' p=' || b.BUTTON_POSITION || ' a=' || b.BUTTON_ALIGNMENT || ' ba=' || b.button_action || ' u=' || substr(b.BUTTON_REDIRECT_URL, 1, 30) || length(b.BUTTON_REDIRECT_URL) || ' c=' || b.BUTTON_CONDITION_TYPE || substr(b.BUTTON_CONDITION, 1, 20) || length(b.BUTTON_CONDITION) || '.' || substr(b.BUTTON_CONDITION2, 1, 20) || length(b.BUTTON_CONDITION2) || ' ca=' || substr(b.BUTTON_CATTRIBUTES, 1, 20) || length(b.BUTTON_CATTRIBUTES) || ' b=' || decode(
      b.DATABASE_ACTION,
      'DELETE',
      'SQLDELETE',
      'INSERT',
      'SQLINSERT',
      'UPDATE',
      'SQLUPDATE',
      b.DATABASE_ACTION
    ) || ' b='(
      select
        PATCH_NAME
      from
        wwv_flow_patches
      where
        id = abs(b.REQUIRED_PATCH)
    ) || ' s=' || decode(substr(b.SECURITY_SCHEME, 1, 1), '!', 'Not ') || nvl(
      (
        select
          name
        from
          wwv_flow_security_schemes
        where
          to_char(id) = ltrim(b.SECURITY_SCHEME, '!')
          and flow_id = f.id
      ),
      'Not found'
    ) component_signature,
    b.PRE_ELEMENT_TEXT pre_element_text,
    b.POST_ELEMENT_TEXT post_element_text,
    b.request_source_type request_source_type
  from
    wwv_flow_step_buttons b,
    wwv_flow_steps p,
    wwv_flows f,
    wwv_flow_companies w,
    wwv_flow_company_schemas s,
    (
      select
        nvl(v('FLOW_SECURITY_GROUP_ID'), 0) sgid,
        (
          select
            sys_context('USERENV', 'CURRENT_USER')
          from
            sys.dual
        ) cu
      from
        sys.dual
    ) d
  where
    (
      s.schema = cu
      or (
        select
          wwv_flow_security.has_apex_administrator_role_yn(cu)
        from
          sys.dual
      ) = 'Y'
      or d.sgid = w.PROVISIONING_COMPANY_ID
    )
    and f.security_group_id = w.PROVISIONING_COMPANY_ID
    and s.security_group_id = w.PROVISIONING_COMPANY_ID
    and s.schema = f.owner
    and f.security_group_id = p.security_group_id
    and f.security_group_id = b.security_group_id
    and f.id = p.flow_id
    and f.id = b.flow_id
    and p.id = b.flow_step_id
    and (
      d.sgid != 0
      or nvl(f.BUILD_STATUS, 'x') != 'RUN_AND_HIDDEN'
    )
    and w.PROVISIONING_COMPANY_ID != 0
