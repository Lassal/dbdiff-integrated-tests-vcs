schema: XDB
name: DBMS_XMLINDEX
routineType: PACKAGE
returnParamater:
  name: GETPARAMETER.(--return--)
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 0
  packageRoutineName: GETPARAMETE
parameters:
- name: CREATEDATEINDEX.XML_INDEX_SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
  packageRoutineName: CREATEDATEINDE
- name: CREATEDATEINDEX.XML_INDEX_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
  packageRoutineName: CREATEDATEINDE
- name: CREATEDATEINDEX.DATE_INDEX_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
  packageRoutineName: CREATEDATEINDE
- name: CREATEDATEINDEX.XMLTYPENAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
  packageRoutineName: CREATEDATEINDE
- name: CREATEDATEINDEX.DATE_INDEX_CLAUSE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 5
  packageRoutineName: CREATEDATEINDE
- name: CREATEDATEINDEX.COLUMN_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 6
  packageRoutineName: CREATEDATEINDE
- name: CREATENUMBERINDEX.XML_INDEX_SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
  packageRoutineName: CREATENUMBERINDE
- name: CREATENUMBERINDEX.XML_INDEX_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
  packageRoutineName: CREATENUMBERINDE
- name: CREATENUMBERINDEX.NUM_INDEX_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
  packageRoutineName: CREATENUMBERINDE
- name: CREATENUMBERINDEX.NUM_INDEX_CLAUSE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
  packageRoutineName: CREATENUMBERINDE
- name: CREATENUMBERINDEX.XMLTYPENAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 5
  packageRoutineName: CREATENUMBERINDE
- name: CREATENUMBERINDEX.COLUMN_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 6
  packageRoutineName: CREATENUMBERINDE
- name: DROPPARAMETER.PARAMNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
  packageRoutineName: DROPPARAMETE
- name: GETPARAMETER.PARAMNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
  packageRoutineName: GETPARAMETE
- name: MODIFYPARAMETER.PARAMNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
  packageRoutineName: MODIFYPARAMETE
- name: MODIFYPARAMETER.PARAMSTR
  dataType: CLOB
  parameterMode: IN
  ordinalPosition: 2
  packageRoutineName: MODIFYPARAMETE
- name: PROCESS_PENDING.XML_INDEX_SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
  packageRoutineName: PROCESS_PENDIN
- name: PROCESS_PENDING.XML_INDEX_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
  packageRoutineName: PROCESS_PENDIN
- name: PROCESS_PENDING.PENDING_ROW_COUNT
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 3
  packageRoutineName: PROCESS_PENDIN
- name: PROCESS_PENDING.ERROR_ROW_COUNT
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 4
  packageRoutineName: PROCESS_PENDIN
- name: REGISTERPARAMETER.PARAMNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
  packageRoutineName: REGISTERPARAMETE
- name: REGISTERPARAMETER.PARAMSTR
  dataType: CLOB
  parameterMode: IN
  ordinalPosition: 2
  packageRoutineName: REGISTERPARAMETE
- name: SYNCINDEX.XML_INDEX_SCHEMA
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
  packageRoutineName: SYNCINDE
- name: SYNCINDEX.XML_INDEX_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
  packageRoutineName: SYNCINDE
- name: SYNCINDEX.PARTITION_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
  packageRoutineName: SYNCINDE
- name: SYNCINDEX.REINDEX
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 4
  packageRoutineName: SYNCINDE
routineDefinition: "PACKAGE dbms_xmlindex AUTHID CURRENT_USER AS ----------------------------------------------------------------------------\n\
  -- PROCEDURE - CreateNumberIndex\n--     Creates an index for number values in the\
  \ XMLIndex. The index\n--     is created on the VALUE column of the XMLIndex path\
  \ table on the\n--     expression TO_BINARY_DOUBLE(VALUE).\n-- PARAMETERS -\n--\
  \  xml_index_schema\n--     Schema of the XMLIndex: default is current user schema\n\
  --  xml_index_name\n--     Name of the XMLIndex\n--  num_index_name: default is\
  \ system-generated\n--     Name of the number index to create\n--  num_index_clause\n\
  --     Storage clause for the number index. This would simply be appended\n--  \
  \   to the CREATE INDEX statement.\n--  xmltypename\n--     Xml type name corresponding\
  \ to the number - one of the following:\n--     float\n--     double\n--     decimal\n\
  --     integer\n--     nonPositiveInteger\n--     negativeInteger\n--     long\n\
  --     int\n--     short\n--     byte\n--     nonNegativeInteger\n--     unsignedLong\n\
  --     unsignedInt\n--     unsignedShort\n--     unsignedByte\n--     positiveInteger\n\
  --  column_name\n--     Name of the path table column on which to create the number\
  \ index.\n----------------------------------------------------------------------------\n\
  PROCEDURE CreateNumberIndex(\n  xml_index_schema IN VARCHAR2: = USER,\n  xml_index_name\
  \ IN VARCHAR2,\n  num_index_name IN VARCHAR2: = NULL,\n  num_index_clause IN VARCHAR2:\
  \ = NULL,\n  xmltypename IN VARCHAR2: = NULL,\n  column_name IN VARCHAR2: = NULL\n\
  );\nPRAGMA SUPPLEMENTAL_LOG_DATA(CreateNumberIndex, AUTO_WITH_COMMIT);\n----------------------------------------------------------------------------\n\
  -- PROCEDURE - CreateDateIndex\n--     Creates an index for date values in the XMLIndex.\
  \ The user specifies\n--     the XML type name (date, dateTime etc.) and the index\
  \ is created\n--     on SYS_XMLCONV(VALUE) which would always return a TIMESTAMP\
  \ datatype.\n-- PARAMETERS -\n--  xml_index_schema\n--     Schema of the XMLIndex:\
  \ default is current user schema\n--  xml_index_name\n--     Name of the XMLIndex\n\
  --  date_index_name: default is system generated\n--     Name of the date index\
  \ to be created\n--  xmltypename\n--     XML type name - one of the following\n\
  --         dateTime\n--         time\n--         date\n--         gDay\n--     \
  \    gMonth\n--         gYear\n--         gYearMonth\n--         gMonthDay\n-- \
  \ date_index_clause\n--     Storage clause for the date index. This would simply\
  \ be appended\n--     to the CREATE INDEX statement.\n--  column_name\n--     Name\
  \ of the path table column on which to create the date index.\n----------------------------------------------------------------------------\n\
  PROCEDURE CreateDateIndex(\n  xml_index_schema IN VARCHAR2: = USER,\n  xml_index_name\
  \ IN VARCHAR2,\n  date_index_name IN VARCHAR2: = NULL,\n  xmltypename IN VARCHAR2:\
  \ = NULL,\n  date_index_clause IN VARCHAR2: = NULL,\n  column_name IN VARCHAR2:\
  \ = NULL\n);\nPRAGMA SUPPLEMENTAL_LOG_DATA(CreateDateIndex, AUTO_WITH_COMMIT);\n\
  ----------------------------------------------------------------------------\n--\
  \    PROCEDURE SyncIndex(xml_index_schema IN VARCHAR2,\n--                     \
  \   xml_index_name   IN VARCHAR2,\n--                        partition_name   IN\
  \ VARCHAR2,\n--\t\t\t  reindex          IN BOOLEAN);\n--    This procedure synchronizes\
  \ an asynchronously maintained xmlindex.\n--    It applies to the xmlindex changes\
  \ that are logged in the pending\n--    table, and brings the path table up-to-date\
  \ with the base xmltype\n--    column.\n--\n--    PARAMETERS\n--    (a) xml_index_schema\
  \ - Name of the owner of the XMLIndex.\n--    (b) xml_index_name   - Name of the\
  \ XMLIndex.\n--    (c) partition_name   - Optional name of the partition to be synced.\n\
  --    (d) reindex          - If true drops and recreates secondary indexes\n--\t\
  \t\t\ton path table. Default is false.\n----------------------------------------------------------------------------\n\
  PROCEDURE SyncIndex(\n  xml_index_schema IN VARCHAR2 default USER,\n  xml_index_name\
  \ IN VARCHAR2,\n  partition_name IN VARCHAR2 default NULL,\n  reindex IN BOOLEAN\
  \ default FALSE\n);\nPRAGMA SUPPLEMENTAL_LOG_DATA(SyncIndex, AUTO_WITH_COMMIT);\n\
  PROCEDURE registerparameter(\n  paramname IN VARCHAR2,\n  paramstr IN CLOB\n);\n\
  PRAGMA SUPPLEMENTAL_LOG_DATA(registerparameter, UNSUPPORTED_WITH_COMMIT);\nPROCEDURE\
  \ modifyparameter(\n  paramname IN VARCHAR2,\n  paramstr IN CLOB\n);\nPRAGMA SUPPLEMENTAL_LOG_DATA(modifyparameter,\
  \ UNSUPPORTED_WITH_COMMIT);\nPROCEDURE dropparameter(paramname IN VARCHAR2);\nPRAGMA\
  \ SUPPLEMENTAL_LOG_DATA(dropparameter, UNSUPPORTED_WITH_COMMIT);\nFUNCTION getparameter(paramname\
  \ IN VARCHAR2) RETURN VARCHAR2;\n----------------------------------------------------------------------------\n\
  --    PROCEDURE PROCESS_PENDING(xml_index_schema  IN  VARCHAR2,\n--            \
  \                  xml_index_name    IN  VARCHAR2,\n--                         \
  \     pending_row_count OUT BINARY_INTEGER,\n--                              error_row_count\
  \   OUT BINARY_INTEGER);\n--    This procedure executes DMLs required to complete\
  \ a NONBLOCKING\n--    alter index add_group/add_column operation.\n--\n--    PARAMETERS\n\
  --    (a) xml_index_schema  - Name of the owner of the XMLIndex.\n--    (b) xml_index_name\
  \    - Name of the XMLIndex.\n--    (c) pending_row_count - RETURNs number of rows\
  \ that still have\n--                            to be processed/indexed.\n--  \
  \  (d) error_row_count   - RETURNs number of rows for which indexing may\n--   \
  \                         have failed because of an error\n----------------------------------------------------------------------------\n\
  PROCEDURE process_pending(\n  xml_index_schema IN VARCHAR2,\n  xml_index_name IN\
  \ VARCHAR2,\n  pending_row_count OUT BINARY_INTEGER,\n  error_row_count OUT BINARY_INTEGER\n\
  );\nPRAGMA SUPPLEMENTAL_LOG_DATA(process_pending, AUTO_WITH_COMMIT);\nend dbms_xmlindex;"
