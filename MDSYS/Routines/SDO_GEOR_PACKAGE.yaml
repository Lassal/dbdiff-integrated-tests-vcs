schema: MDSYS
name: SDO_GEOR
routineType: PACKAGE
returnParamater:
  name: VALIDATEGEORASTER.(--return--)
  ordinalPosition: 0
  dataType: VARCHAR2
  parameterMode: OUT
parameters:
- name: ADDNODATA(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: ADDNODATA(1).LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: ADDNODATA(1).NODATA
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: ADDNODATA(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: ADDNODATA(2).LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: ADDNODATA(2).NODATA
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: ADDSOURCEINFO.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: ADDSOURCEINFO.SOURCEINFO
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: CALCCOMPRESSIONRATIO.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: CHANGECELLVALUE(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: CHANGECELLVALUE(1).WINDOW
  ordinalPosition: 2
  dataType: VARRAY
  parameterMode: IN
- name: CHANGECELLVALUE(1).BANDNUMBERS
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: CHANGECELLVALUE(1).NEWCELLVALUE
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: CHANGECELLVALUE(1).BGVALUES
  ordinalPosition: 5
  dataType: VARRAY
  parameterMode: IN
- name: CHANGECELLVALUE(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: CHANGECELLVALUE(2).WINDOW
  ordinalPosition: 2
  dataType: OBJECT
  parameterMode: IN
- name: CHANGECELLVALUE(2).LAYERNUMBERS
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: CHANGECELLVALUE(2).NEWCELLVALUE
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: CHANGECELLVALUE(2).BGVALUES
  ordinalPosition: 5
  dataType: VARRAY
  parameterMode: IN
- name: CHANGEFORMAT.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: CHANGEFORMAT.STORAGEPARAM
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: CHANGEFORMAT.BGVALUES
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: CHANGEFORMATCOPY(1).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: CHANGEFORMATCOPY(1).STORAGEPARAM
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: CHANGEFORMATCOPY(1).OUTGEORASTER
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: INOUT
- name: CHANGEFORMATCOPY(1).BGVALUES
  ordinalPosition: 4
  dataType: VARRAY
  parameterMode: IN
- name: CHANGEFORMATCOPY(2).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: CHANGEFORMATCOPY(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: CHANGEFORMATCOPY(2).STORAGEPARAM
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: CHANGEFORMATCOPY(2).OUTGEORASTER
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: INOUT
- name: CHANGEFORMATCOPY(2).BGVALUES
  ordinalPosition: 5
  dataType: VARRAY
  parameterMode: IN
- name: COPY.INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: COPY.OUTGEORASTER
  ordinalPosition: 2
  dataType: OBJECT
  parameterMode: INOUT
- name: CREATEBLANK.RASTERTYPE
  ordinalPosition: 1
  dataType: NUMBER
  numericPrecision: 38
  parameterMode: IN
- name: CREATEBLANK.ULTCOORD
  ordinalPosition: 2
  dataType: VARRAY
  parameterMode: IN
- name: CREATEBLANK.DIMSIZES
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: CREATEBLANK.CELLVALUE
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: CREATEBLANK.RASTERDATATABLE
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: CREATEBLANK.RASTERID
  ordinalPosition: 6
  dataType: NUMBER
  parameterMode: IN
- name: CREATETEMPLATE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: CREATETEMPLATE.RASTERTYPE
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: CREATETEMPLATE.RASTERSPEC
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: CREATETEMPLATE.MASKLAYERS
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: CREATETEMPLATE.INITRDTENTRY
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: DELETECONTROLPOINT.INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: DELETECONTROLPOINT.CONTROLPOINTID
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: DELETENODATA(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: DELETENODATA(1).LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: DELETENODATA(1).NODATA
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: DELETENODATA(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: DELETENODATA(2).LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: DELETENODATA(2).NODATA
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: DELETEPYRAMID.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: EVALUATEDOUBLE(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: EVALUATEDOUBLE(1).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: EVALUATEDOUBLE(1).ROW
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: EVALUATEDOUBLE(1).COLUMN
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: EVALUATEDOUBLE(1).BANDS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: EVALUATEDOUBLE(1).INTERPOLATIONMETHOD
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: EVALUATEDOUBLE(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: EVALUATEDOUBLE(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: EVALUATEDOUBLE(2).PTGEOM
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: EVALUATEDOUBLE(2).LAYERS
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: EVALUATEDOUBLE(2).INTERPOLATIONMETHOD
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: EXPORTTO(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: EXPORTTO(1).SUBSETPARAM
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: EXPORTTO(1).R_DESTFORMAT
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: EXPORTTO(1).R_DESTTYPE
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: EXPORTTO(1).R_DESTNAME
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: EXPORTTO(1).H_DESTFORMAT
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: EXPORTTO(1).H_DESTTYPE
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: EXPORTTO(1).H_DESTNAME
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: EXPORTTO(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: EXPORTTO(2).SUBSETPARAM
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: EXPORTTO(2).DESTFORMAT
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: EXPORTTO(2).DESTBLOB
  ordinalPosition: 4
  dataType: BLOB
  parameterMode: INOUT
- name: EXPORTTO(3).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: EXPORTTO(3).SUBSETPARAM
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: EXPORTTO(3).R_DESTFORMAT
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: EXPORTTO(3).R_DESTBLOB
  ordinalPosition: 4
  dataType: BLOB
  parameterMode: INOUT
- name: EXPORTTO(3).H_DESTFORMAT
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: EXPORTTO(3).H_DESTCLOB
  ordinalPosition: 6
  dataType: CLOB
  parameterMode: INOUT
- name: GENERATEBLOCKMBR.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATEPYRAMID.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: GENERATEPYRAMID.PYRAMIDPARAMS
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATEPYRAMID.BGVALUES
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: GENERATEPYRAMID.PARALLELPARAM
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESPATIALEXTENT.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESPATIALEXTENT.HEIGHT
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESPATIALRESOLUTIONS(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: GENERATESPATIALRESOLUTIONS(1).OUTRESOLUTION
  ordinalPosition: 2
  dataType: VARRAY
  parameterMode: OUT
- name: GENERATESPATIALRESOLUTIONS(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESPATIALRESOLUTIONS(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESPATIALRESOLUTIONS(2).SRID
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESPATIALRESOLUTIONS(2).RESOLUTIONUNIT
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: GENERATESTATISTICS(1).SAMPLINGFACTOR
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(1).SAMPLINGWINDOW
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICS(1).HISTOGRAM
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(1).LAYERNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(1).USEBIN
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(1).BINFUNCTION
  ordinalPosition: 7
  dataType: VARRAY
  parameterMode: IN
- name: GENERATESTATISTICS(1).NODATA
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: GENERATESTATISTICS(2).SAMPLINGFACTOR
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(2).SAMPLINGWINDOW
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: GENERATESTATISTICS(2).HISTOGRAM
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(2).LAYERNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(2).USEBIN
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(2).BINFUNCTION
  ordinalPosition: 7
  dataType: VARRAY
  parameterMode: IN
- name: GENERATESTATISTICS(2).NODATA
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(3).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICS(3).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESTATISTICS(3).SAMPLINGFACTOR
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(3).SAMPLINGWINDOW
  ordinalPosition: 4
  dataType: VARRAY
  parameterMode: IN
- name: GENERATESTATISTICS(3).BANDNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(3).NODATA
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(4).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICS(4).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESTATISTICS(4).SAMPLINGFACTOR
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(4).SAMPLINGWINDOW
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICS(4).BANDNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(4).NODATA
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICS(4).POLYGONCLIP
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMAX(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSMAX(1).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESTATISTICSMAX(1).SAMPLINGFACTOR
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMAX(1).SAMPLINGWINDOW
  ordinalPosition: 4
  dataType: VARRAY
  parameterMode: IN
- name: GENERATESTATISTICSMAX(1).BANDNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMAX(1).NODATA
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMAX(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSMAX(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESTATISTICSMAX(2).SAMPLINGFACTOR
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMAX(2).SAMPLINGWINDOW
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSMAX(2).BANDNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMAX(2).NODATA
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMAX(2).POLYGONCLIP
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMEAN(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSMEAN(1).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESTATISTICSMEAN(1).SAMPLINGFACTOR
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMEAN(1).SAMPLINGWINDOW
  ordinalPosition: 4
  dataType: VARRAY
  parameterMode: IN
- name: GENERATESTATISTICSMEAN(1).BANDNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMEAN(1).NODATA
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMEAN(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSMEAN(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESTATISTICSMEAN(2).SAMPLINGFACTOR
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMEAN(2).SAMPLINGWINDOW
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSMEAN(2).BANDNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMEAN(2).NODATA
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMEAN(2).POLYGONCLIP
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMEDIAN(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSMEDIAN(1).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESTATISTICSMEDIAN(1).SAMPLINGFACTOR
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMEDIAN(1).SAMPLINGWINDOW
  ordinalPosition: 4
  dataType: VARRAY
  parameterMode: IN
- name: GENERATESTATISTICSMEDIAN(1).BANDNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMEDIAN(1).NODATA
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMEDIAN(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSMEDIAN(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESTATISTICSMEDIAN(2).SAMPLINGFACTOR
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMEDIAN(2).SAMPLINGWINDOW
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSMEDIAN(2).BANDNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMEDIAN(2).NODATA
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMEDIAN(2).POLYGONCLIP
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMIN(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSMIN(1).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESTATISTICSMIN(1).SAMPLINGFACTOR
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMIN(1).SAMPLINGWINDOW
  ordinalPosition: 4
  dataType: VARRAY
  parameterMode: IN
- name: GENERATESTATISTICSMIN(1).BANDNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMIN(1).NODATA
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMIN(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSMIN(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESTATISTICSMIN(2).SAMPLINGFACTOR
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMIN(2).SAMPLINGWINDOW
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSMIN(2).BANDNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMIN(2).NODATA
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMIN(2).POLYGONCLIP
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMODE(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSMODE(1).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESTATISTICSMODE(1).SAMPLINGFACTOR
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMODE(1).SAMPLINGWINDOW
  ordinalPosition: 4
  dataType: VARRAY
  parameterMode: IN
- name: GENERATESTATISTICSMODE(1).BANDNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMODE(1).NODATA
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMODE(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSMODE(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESTATISTICSMODE(2).SAMPLINGFACTOR
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMODE(2).SAMPLINGWINDOW
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSMODE(2).BANDNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMODE(2).NODATA
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSMODE(2).POLYGONCLIP
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSSTD(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSSTD(1).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESTATISTICSSTD(1).SAMPLINGFACTOR
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSSTD(1).SAMPLINGWINDOW
  ordinalPosition: 4
  dataType: VARRAY
  parameterMode: IN
- name: GENERATESTATISTICSSTD(1).BANDNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSSTD(1).NODATA
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSSTD(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSSTD(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GENERATESTATISTICSSTD(2).SAMPLINGFACTOR
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSSTD(2).SAMPLINGWINDOW
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: IN
- name: GENERATESTATISTICSSTD(2).BANDNUMBERS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSSTD(2).NODATA
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GENERATESTATISTICSSTD(2).POLYGONCLIP
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: GEOREFERENCE(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: GEOREFERENCE(1).SRID
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GEOREFERENCE(1).MODELCOORDINATELOCATION
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: GEOREFERENCE(1).XCOEFFICIENTS
  ordinalPosition: 4
  dataType: VARRAY
  parameterMode: IN
- name: GEOREFERENCE(1).YCOEFFICIENTS
  ordinalPosition: 5
  dataType: VARRAY
  parameterMode: IN
- name: GEOREFERENCE(2).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: GEOREFERENCE(2).FFMETHODTYPE
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: GEOREFERENCE(2).NGCP
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: GEOREFERENCE(2).GCPS
  ordinalPosition: 4
  dataType: VARRAY
  parameterMode: IN
- name: GEOREFERENCE(2).STOREGCP
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GEOREFERENCE(2).SRID
  ordinalPosition: 6
  dataType: NUMBER
  parameterMode: IN
- name: GEOREFERENCE(2).MODELCOORDINATELOCATION
  ordinalPosition: 7
  dataType: NUMBER
  parameterMode: IN
- name: GEOREFERENCE(2).SETRESOLUTION
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: GEOREFERENCE(3).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: GEOREFERENCE(3).GCPGEOREFMODEL
  ordinalPosition: 2
  dataType: OBJECT
  parameterMode: IN
- name: GEOREFERENCE(3).STOREGCP
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GEOREFERENCE(3).SRID
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: GEOREFERENCE(3).MODELCOORDINATELOCATION
  ordinalPosition: 5
  dataType: NUMBER
  parameterMode: IN
- name: GEOREFERENCE(3).SETRESOLUTION
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GEOREFERENCE(4).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: GEOREFERENCE(4).FFMETHOD
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: GEOREFERENCE(4).SRID
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: GEOREFERENCE(4).MODELCOORDINATELOCATION
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: GEOREFERENCE(4).SETRESOLUTION
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GETBANDDIMSIZE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETBEGINDATETIME.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETBINFUNCTION.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETBINFUNCTION.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETBINTABLE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETBINTABLE.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETBINTYPE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETBINTYPE.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASK.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETBITMAPMASK.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASK.STORAGEPARAM
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: GETBITMAPMASK.MASK
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: INOUT
- name: GETBITMAPMASKSUBSET(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(1).LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(1).PYRAMIDLEVEL
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(1).WINDOW
  ordinalPosition: 4
  dataType: VARRAY
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(1).RASTERBLOB
  ordinalPosition: 5
  dataType: BLOB
  parameterMode: INOUT
- name: GETBITMAPMASKSUBSET(1).STORAGEPARAM
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(2).LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(2).PYRAMIDLEVEL
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(2).WINDOW
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(2).RASTERBLOB
  ordinalPosition: 5
  dataType: BLOB
  parameterMode: INOUT
- name: GETBITMAPMASKSUBSET(2).STORAGEPARAM
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(3).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(3).LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(3).PYRAMIDLEVEL
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(3).INWINDOW
  ordinalPosition: 4
  dataType: VARRAY
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(3).RASTERBLOB
  ordinalPosition: 5
  dataType: BLOB
  parameterMode: INOUT
- name: GETBITMAPMASKSUBSET(3).OUTWINDOW
  ordinalPosition: 6
  dataType: VARRAY
  parameterMode: OUT
- name: GETBITMAPMASKSUBSET(3).STORAGEPARAM
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(4).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(4).LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(4).PYRAMIDLEVEL
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(4).INWINDOW
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: IN
- name: GETBITMAPMASKSUBSET(4).RASTERBLOB
  ordinalPosition: 5
  dataType: BLOB
  parameterMode: INOUT
- name: GETBITMAPMASKSUBSET(4).OUTWINDOW
  ordinalPosition: 6
  dataType: VARRAY
  parameterMode: OUT
- name: GETBITMAPMASKSUBSET(4).STORAGEPARAM
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: GETBITMAPMASKVALUE(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETBITMAPMASKVALUE(1).LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASKVALUE(1).PYRAMIDLEVEL
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASKVALUE(1).ROWNUMBER
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASKVALUE(1).COLNUMBER
  ordinalPosition: 5
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASKVALUE(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETBITMAPMASKVALUE(2).LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASKVALUE(2).PYRAMIDLEVEL
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: GETBITMAPMASKVALUE(2).PTGEOM
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: IN
- name: GETBLANKCELLVALUE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETBLOCKINGTYPE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETBLOCKSIZE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETCELLCOORDINATE(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETCELLCOORDINATE(1).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLCOORDINATE(1).MODELCOORDINATE
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: GETCELLCOORDINATE(1).SUBCELL
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: GETCELLCOORDINATE(1).HEIGHT
  ordinalPosition: 5
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLCOORDINATE(1).VERT_ID
  ordinalPosition: 6
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLCOORDINATE(1).ELLIPSOIDAL
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: GETCELLCOORDINATE(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETCELLCOORDINATE(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLCOORDINATE(2).MODELCOORDINATE
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: GETCELLCOORDINATE(2).CELLCOORDINATE
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: OUT
- name: GETCELLCOORDINATE(2).SUBCELL
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GETCELLCOORDINATE(2).HEIGHT
  ordinalPosition: 6
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLCOORDINATE(2).VERT_ID
  ordinalPosition: 7
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLCOORDINATE(2).ELLIPSOIDAL
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: GETCELLCOORDINATE(3).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETCELLCOORDINATE(3).SOURCEPYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLCOORDINATE(3).SOURCECELLCOORDINATE
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: GETCELLCOORDINATE(3).TARGETPYRAMIDLEVEL
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLCOORDINATE(3).SUBCELL
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GETCELLCOORDINATE(4).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETCELLCOORDINATE(4).SOURCEPYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLCOORDINATE(4).SOURCECELLCOORDINATE
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: GETCELLCOORDINATE(4).TARGETPYRAMIDLEVEL
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLCOORDINATE(4).SUBCELL
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GETCELLDEPTH.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETCELLVALUE(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETCELLVALUE(1).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLVALUE(1).ROWNUMBER
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLVALUE(1).COLNUMBER
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLVALUE(1).BANDNUMBER
  ordinalPosition: 5
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLVALUE(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETCELLVALUE(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLVALUE(2).PTGEOM
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: GETCELLVALUE(2).LAYERNUMBER
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLVALUE(3).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETCELLVALUE(3).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLVALUE(3).ROWNUMBER
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLVALUE(3).COLNUMBER
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLVALUE(3).BANDS
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: GETCELLVALUE(4).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETCELLVALUE(4).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETCELLVALUE(4).PTGEOM
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: GETCELLVALUE(4).LAYERS
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: GETCOLORMAP.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETCOLORMAP.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETCOLORMAPTABLE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETCOLORMAPTABLE.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETCOMPRESSIONTYPE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETCONTROLPOINT.INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETCONTROLPOINT.CONTROLPOINTID
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: GETDEFAULTALPHA.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETDEFAULTBLUE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETDEFAULTCOLORLAYER.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETDEFAULTGREEN.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETDEFAULTPYRAMIDLEVEL.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETDEFAULTRED.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETENDDATETIME.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETGCPGEOREFMETHOD.INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETGCPGEOREFMODEL.INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETGEOREFERENCETYPE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETGRAYSCALE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETGRAYSCALE.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETGRAYSCALETABLE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETGRAYSCALETABLE.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETHISTOGRAM.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETHISTOGRAM.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETHISTOGRAMTABLE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETHISTOGRAMTABLE.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETID.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETINTERLEAVINGTYPE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETLAYERDIMENSION.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETLAYERID.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETLAYERID.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETLAYERORDINATE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETLAYERORDINATE.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETMODELCOORDINATE(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETMODELCOORDINATE(1).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETMODELCOORDINATE(1).CELLCOORDINATE
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: GETMODELCOORDINATE(1).HEIGHT
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: GETMODELCOORDINATE(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETMODELCOORDINATE(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETMODELCOORDINATE(2).CELLCOORDINATE
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: GETMODELCOORDINATE(2).MODELCOORDINATE
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: OUT
- name: GETMODELCOORDINATE(2).HEIGHT
  ordinalPosition: 5
  dataType: NUMBER
  parameterMode: IN
- name: GETMODELCOORDLOCATION.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETMODELSRID.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETNODATA(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETNODATA(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETNODATA(2).LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETPYRAMIDMAXLEVEL.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETPYRAMIDTYPE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(1).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(1).BANDBLOCKNUMBER
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(1).ROWBLOCKNUMBER
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(1).COLUMNBLOCKNUMBER
  ordinalPosition: 5
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(1).LOC
  ordinalPosition: 6
  dataType: BLOB
  parameterMode: INOUT
- name: GETRASTERBLOCKLOCATOR(1).ISBITMAPMASK
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(1).LOCK_FOR_WRITE
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(2).ROWNUMBER
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(2).COLNUMBER
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(2).BANDNUMBER
  ordinalPosition: 5
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(2).OFFSET
  ordinalPosition: 6
  dataType: NUMBER
  parameterMode: OUT
- name: GETRASTERBLOCKLOCATOR(2).LOC
  ordinalPosition: 7
  dataType: BLOB
  parameterMode: INOUT
- name: GETRASTERBLOCKLOCATOR(2).ISBITMAPMASK
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(2).LOCK_FOR_WRITE
  ordinalPosition: 9
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(3).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(3).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(3).PTGEOM
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(3).LAYERNUMBER
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(3).OFFSET
  ordinalPosition: 5
  dataType: NUMBER
  parameterMode: OUT
- name: GETRASTERBLOCKLOCATOR(3).LOC
  ordinalPosition: 6
  dataType: BLOB
  parameterMode: INOUT
- name: GETRASTERBLOCKLOCATOR(3).ISBITMAPMASK
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERBLOCKLOCATOR(3).LOCK_FOR_WRITE
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERBLOCKS(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERBLOCKS(1).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERBLOCKS(1).WINDOW
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: GETRASTERBLOCKS(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERBLOCKS(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERBLOCKS(2).WINDOW
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERDATA.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERDATA.PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERDATA.RASTERBLOB
  ordinalPosition: 3
  dataType: BLOB
  parameterMode: INOUT
- name: GETRASTERDATA.STORAGEPARAM
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERDATA.BGVALUES
  ordinalPosition: 5
  dataType: VARRAY
  parameterMode: IN
- name: GETRASTERRANGE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERRANGE.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERSUBSET(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERSUBSET(1).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERSUBSET(1).WINDOW
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: GETRASTERSUBSET(1).BANDNUMBERS
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERSUBSET(1).RASTERBLOB
  ordinalPosition: 5
  dataType: BLOB
  parameterMode: INOUT
- name: GETRASTERSUBSET(1).STORAGEPARAM
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERSUBSET(1).BGVALUES
  ordinalPosition: 7
  dataType: VARRAY
  parameterMode: IN
- name: GETRASTERSUBSET(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERSUBSET(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERSUBSET(2).INWINDOW
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: GETRASTERSUBSET(2).BANDNUMBERS
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERSUBSET(2).RASTERBLOB
  ordinalPosition: 5
  dataType: BLOB
  parameterMode: INOUT
- name: GETRASTERSUBSET(2).OUTWINDOW
  ordinalPosition: 6
  dataType: VARRAY
  parameterMode: OUT
- name: GETRASTERSUBSET(2).STORAGEPARAM
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERSUBSET(2).BGVALUES
  ordinalPosition: 8
  dataType: VARRAY
  parameterMode: IN
- name: GETRASTERSUBSET(3).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERSUBSET(3).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERSUBSET(3).WINDOW
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERSUBSET(3).LAYERNUMBERS
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERSUBSET(3).RASTERBLOB
  ordinalPosition: 5
  dataType: BLOB
  parameterMode: INOUT
- name: GETRASTERSUBSET(3).STORAGEPARAM
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERSUBSET(3).BGVALUES
  ordinalPosition: 7
  dataType: VARRAY
  parameterMode: IN
- name: GETRASTERSUBSET(3).POLYGONCLIP
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERSUBSET(4).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERSUBSET(4).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETRASTERSUBSET(4).INWINDOW
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: GETRASTERSUBSET(4).LAYERNUMBERS
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERSUBSET(4).RASTERBLOB
  ordinalPosition: 5
  dataType: BLOB
  parameterMode: INOUT
- name: GETRASTERSUBSET(4).OUTWINDOW
  ordinalPosition: 6
  dataType: VARRAY
  parameterMode: OUT
- name: GETRASTERSUBSET(4).STORAGEPARAM
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: GETRASTERSUBSET(4).BGVALUES
  ordinalPosition: 8
  dataType: VARRAY
  parameterMode: IN
- name: GETRASTERSUBSET(4).POLYGONCLIP
  ordinalPosition: 9
  dataType: VARCHAR2
  parameterMode: IN
- name: GETSCALING.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETSCALING.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETSOURCEINFO.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETSPATIALDIMNUMBER.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETSPATIALDIMSIZES.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETSPATIALRESOLUTIONS.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETSPECTRALRESOLUTION.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETSPECTRALUNIT.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETSRS.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETSTATISTICS.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETSTATISTICS.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETTOTALLAYERNUMBER.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETULTCOORDINATE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETVAT.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: GETVAT.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: GETVERSION.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: HASBITMAPMASK.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: HASBITMAPMASK.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: HASGRAYSCALE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: HASGRAYSCALE.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: HASNODATAMASK.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: HASNODATAMASK.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: HASPSEUDOCOLOR.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: HASPSEUDOCOLOR.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: IMPORTFROM(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: IMPORTFROM(1).STORAGEPARAM
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: IMPORTFROM(1).R_SOURCEFORMAT
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: IMPORTFROM(1).R_SOURCETYPE
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: IMPORTFROM(1).R_SOURCENAME
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: IMPORTFROM(1).H_SOURCEFORMAT
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: IMPORTFROM(1).H_SOURCETYPE
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: IMPORTFROM(1).H_SOURCENAME
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: IMPORTFROM(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: IMPORTFROM(2).STORAGEPARAM
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: IMPORTFROM(2).R_SOURCEFORMAT
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: IMPORTFROM(2).R_SOURCEBLOB
  ordinalPosition: 4
  dataType: BLOB
  parameterMode: IN
- name: IMPORTFROM(2).H_SOURCEFORMAT
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: IMPORTFROM(2).H_SOURCECLOB
  ordinalPosition: 6
  dataType: CLOB
  parameterMode: IN
- name: INIT.RASTERDATATABLE
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: INIT.RASTERID
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: ISBLANK.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: ISLOSSLESS.GEOR
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: ISORTHORECTIFIED.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: ISRECTIFIED.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: ISSPATIALREFERENCED.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: MASK.INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: MASK.BANDNUMBERS
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: MASK.MASK
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: MASK.STORAGEPARAM
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: MASK.OUTGEORASTER
  ordinalPosition: 5
  dataType: OBJECT
  parameterMode: INOUT
- name: MASK.ZEROMAPPING
  ordinalPosition: 6
  dataType: NUMBER
  parameterMode: IN
- name: MASK.ONEMAPPING
  ordinalPosition: 7
  dataType: NUMBER
  parameterMode: IN
- name: MASK.BGVALUES
  ordinalPosition: 8
  dataType: VARRAY
  parameterMode: IN
- name: MERGELAYERS(1).TARGETGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: MERGELAYERS(1).SOURCEGEORASTER
  ordinalPosition: 2
  dataType: OBJECT
  parameterMode: IN
- name: MERGELAYERS(1).SOURCELAYERNUMBERS
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: MERGELAYERS(1).BGVALUES
  ordinalPosition: 4
  dataType: VARRAY
  parameterMode: IN
- name: MERGELAYERS(2).SOURCE1GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: MERGELAYERS(2).SOURCE1LAYERNUMBERS
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: MERGELAYERS(2).SOURCE2GEORASTER
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: MERGELAYERS(2).SOURCE2LAYERNUMBERS
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: MERGELAYERS(2).STORAGEPARAM
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: MERGELAYERS(2).OUTGEORASTER
  ordinalPosition: 6
  dataType: OBJECT
  parameterMode: INOUT
- name: MERGELAYERS(2).BGVALUES
  ordinalPosition: 7
  dataType: VARRAY
  parameterMode: IN
- name: MERGELAYERS(2).PYRAMIDLEVEL
  ordinalPosition: 8
  dataType: NUMBER
  parameterMode: IN
- name: MOSAIC(1).GEORASTERTABLENAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: MOSAIC(1).GEORASTERCOLUMNNAME
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: MOSAIC(1).GEORASTER
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: INOUT
- name: MOSAIC(1).STORAGEPARAM
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: MOSAIC(1).BGVALUES
  ordinalPosition: 5
  dataType: VARRAY
  parameterMode: IN
- name: MOSAIC(2).INGEORASTERS
  ordinalPosition: 1
  dataType: REF CURSOR
  parameterMode: IN
- name: MOSAIC(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: MOSAIC(2).WINDOW
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: MOSAIC(2).LAYERNUMBERS
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: MOSAIC(2).OUTGEORASTER
  ordinalPosition: 5
  dataType: OBJECT
  parameterMode: INOUT
- name: MOSAIC(2).STORAGEPARAM
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: MOSAIC(2).BGVALUES
  ordinalPosition: 7
  dataType: VARRAY
  parameterMode: IN
- name: RECTIFY(1).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: RECTIFY(1).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: RECTIFY(1).ELEVATIONPARAM
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: RECTIFY(1).DEM
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: IN
- name: RECTIFY(1).OUTSRID
  ordinalPosition: 5
  dataType: NUMBER
  parameterMode: IN
- name: RECTIFY(1).OUTMODELCOORDLOC
  ordinalPosition: 6
  dataType: NUMBER
  parameterMode: IN
- name: RECTIFY(1).CROPAREA
  ordinalPosition: 7
  dataType: OBJECT
  parameterMode: IN
- name: RECTIFY(1).POLYGONCLIP
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: RECTIFY(1).LAYERNUMBERS
  ordinalPosition: 9
  dataType: VARCHAR2
  parameterMode: IN
- name: RECTIFY(1).OUTRESOLUTIONS
  ordinalPosition: 10
  dataType: VARRAY
  parameterMode: IN
- name: RECTIFY(1).RESOLUTIONUNIT
  ordinalPosition: 11
  dataType: VARCHAR2
  parameterMode: IN
- name: RECTIFY(1).REFERENCEPOINT
  ordinalPosition: 12
  dataType: OBJECT
  parameterMode: IN
- name: RECTIFY(1).RESAMPLEPARAM
  ordinalPosition: 13
  dataType: VARCHAR2
  parameterMode: IN
- name: RECTIFY(1).STORAGEPARAM
  ordinalPosition: 14
  dataType: VARCHAR2
  parameterMode: IN
- name: RECTIFY(1).OUTGEORASTER
  ordinalPosition: 15
  dataType: OBJECT
  parameterMode: INOUT
- name: RECTIFY(1).BGVALUES
  ordinalPosition: 16
  dataType: VARRAY
  parameterMode: IN
- name: RECTIFY(2).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: RECTIFY(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: RECTIFY(2).ELEVATIONPARAM
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: RECTIFY(2).DEM
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: IN
- name: RECTIFY(2).OUTSRID
  ordinalPosition: 5
  dataType: NUMBER
  parameterMode: IN
- name: RECTIFY(2).OUTMODELCOORDLOC
  ordinalPosition: 6
  dataType: NUMBER
  parameterMode: IN
- name: RECTIFY(2).CROPAREA
  ordinalPosition: 7
  dataType: OBJECT
  parameterMode: IN
- name: RECTIFY(2).POLYGONCLIP
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: RECTIFY(2).LAYERNUMBERS
  ordinalPosition: 9
  dataType: VARCHAR2
  parameterMode: IN
- name: RECTIFY(2).OUTRESOLUTIONS
  ordinalPosition: 10
  dataType: VARRAY
  parameterMode: IN
- name: RECTIFY(2).RESOLUTIONUNIT
  ordinalPosition: 11
  dataType: VARCHAR2
  parameterMode: IN
- name: RECTIFY(2).REFERENCEPOINT
  ordinalPosition: 12
  dataType: OBJECT
  parameterMode: IN
- name: RECTIFY(2).RESAMPLEPARAM
  ordinalPosition: 13
  dataType: VARCHAR2
  parameterMode: IN
- name: RECTIFY(2).STORAGEPARAM
  ordinalPosition: 14
  dataType: VARCHAR2
  parameterMode: IN
- name: RECTIFY(2).RASTERBLOB
  ordinalPosition: 15
  dataType: BLOB
  parameterMode: INOUT
- name: RECTIFY(2).OUTAREA
  ordinalPosition: 16
  dataType: OBJECT
  parameterMode: OUT
- name: RECTIFY(2).OUTWINDOW
  ordinalPosition: 17
  dataType: VARRAY
  parameterMode: OUT
- name: RECTIFY(2).BGVALUES
  ordinalPosition: 18
  dataType: VARRAY
  parameterMode: IN
- name: REPROJECT(1).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: REPROJECT(1).RESAMPLEPARAM
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: REPROJECT(1).STORAGEPARAM
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: REPROJECT(1).OUTSRID
  ordinalPosition: 4
  dataType: NUMBER
  parameterMode: IN
- name: REPROJECT(1).OUTGEORASTER
  ordinalPosition: 5
  dataType: OBJECT
  parameterMode: INOUT
- name: REPROJECT(1).BGVALUES
  ordinalPosition: 6
  dataType: VARRAY
  parameterMode: IN
- name: REPROJECT(2).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: REPROJECT(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: REPROJECT(2).CROPAREA
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: REPROJECT(2).LAYERNUMBERS
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: REPROJECT(2).RESAMPLEPARAM
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: REPROJECT(2).STORAGEPARAM
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: REPROJECT(2).OUTSRID
  ordinalPosition: 7
  dataType: NUMBER
  parameterMode: IN
- name: REPROJECT(2).OUTGEORASTER
  ordinalPosition: 8
  dataType: OBJECT
  parameterMode: INOUT
- name: REPROJECT(2).BGVALUES
  ordinalPosition: 9
  dataType: VARRAY
  parameterMode: IN
- name: REPROJECT(3).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: REPROJECT(3).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: REPROJECT(3).CROPAREA
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: REPROJECT(3).BANDNUMBERS
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: REPROJECT(3).RESAMPLEPARAM
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: REPROJECT(3).STORAGEPARAM
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: REPROJECT(3).OUTSRID
  ordinalPosition: 7
  dataType: NUMBER
  parameterMode: IN
- name: REPROJECT(3).OUTGEORASTER
  ordinalPosition: 8
  dataType: OBJECT
  parameterMode: INOUT
- name: REPROJECT(3).BGVALUES
  ordinalPosition: 9
  dataType: VARRAY
  parameterMode: IN
- name: REPROJECT(4).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: REPROJECT(4).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: REPROJECT(4).CROPAREA
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: REPROJECT(4).LAYERNUMBERS
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: REPROJECT(4).RESAMPLEPARAM
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: REPROJECT(4).STORAGEPARAM
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: REPROJECT(4).OUTSRID
  ordinalPosition: 7
  dataType: NUMBER
  parameterMode: IN
- name: REPROJECT(4).RASTERBLOB
  ordinalPosition: 8
  dataType: BLOB
  parameterMode: INOUT
- name: REPROJECT(4).OUTAREA
  ordinalPosition: 9
  dataType: OBJECT
  parameterMode: OUT
- name: REPROJECT(4).OUTWINDOW
  ordinalPosition: 10
  dataType: VARRAY
  parameterMode: OUT
- name: REPROJECT(4).BGVALUES
  ordinalPosition: 11
  dataType: VARRAY
  parameterMode: IN
- name: REPROJECT(5).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: REPROJECT(5).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: REPROJECT(5).CROPAREA
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: REPROJECT(5).BANDNUMBERS
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: REPROJECT(5).RESAMPLEPARAM
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: REPROJECT(5).STORAGEPARAM
  ordinalPosition: 6
  dataType: VARCHAR2
  parameterMode: IN
- name: REPROJECT(5).OUTSRID
  ordinalPosition: 7
  dataType: NUMBER
  parameterMode: IN
- name: REPROJECT(5).RASTERBLOB
  ordinalPosition: 8
  dataType: BLOB
  parameterMode: INOUT
- name: REPROJECT(5).OUTAREA
  ordinalPosition: 9
  dataType: OBJECT
  parameterMode: OUT
- name: REPROJECT(5).OUTWINDOW
  ordinalPosition: 10
  dataType: VARRAY
  parameterMode: OUT
- name: REPROJECT(5).BGVALUES
  ordinalPosition: 11
  dataType: VARRAY
  parameterMode: IN
- name: SCALE.INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SCALE.SCALEPARAM
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: SCALE.RESAMPLEPARAM
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: SCALE.STORAGEPARAM
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: SCALE.BGVALUES
  ordinalPosition: 5
  dataType: VARRAY
  parameterMode: IN
- name: SCALECOPY(1).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: SCALECOPY(1).SCALEPARAM
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: SCALECOPY(1).RESAMPLEPARAM
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: SCALECOPY(1).STORAGEPARAM
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: SCALECOPY(1).OUTGEORASTER
  ordinalPosition: 5
  dataType: OBJECT
  parameterMode: INOUT
- name: SCALECOPY(1).BGVALUES
  ordinalPosition: 6
  dataType: VARRAY
  parameterMode: IN
- name: SCALECOPY(2).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: SCALECOPY(2).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SCALECOPY(2).SCALEPARAM
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: SCALECOPY(2).RESAMPLEPARAM
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: SCALECOPY(2).STORAGEPARAM
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: SCALECOPY(2).OUTGEORASTER
  ordinalPosition: 6
  dataType: OBJECT
  parameterMode: INOUT
- name: SCALECOPY(2).BGVALUES
  ordinalPosition: 7
  dataType: VARRAY
  parameterMode: IN
- name: SCHEMAVALIDATE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: SETBEGINDATETIME.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETBEGINDATETIME.BEGINTIME
  ordinalPosition: 2
  dataType: TIMESTAMP WITH TIME ZONE
  numericPrecision: 6
  parameterMode: IN
- name: SETBINFUNCTION.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETBINFUNCTION.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETBINFUNCTION.BINFUNCTION
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: SETBINTABLE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETBINTABLE.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETBINTABLE.TABLENAME
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: SETBITMAPMASK.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETBITMAPMASK.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETBITMAPMASK.MASK
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: SETBITMAPMASK.NODATAMASK
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: SETBLANKCELLVALUE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETBLANKCELLVALUE.VALUE
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETCOLORMAP.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETCOLORMAP.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETCOLORMAP.COLORMAP
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: SETCOLORMAPTABLE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETCOLORMAPTABLE.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETCOLORMAPTABLE.TABLENAME
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: SETCONTROLPOINT.INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETCONTROLPOINT.CONTROLPOINT
  ordinalPosition: 2
  dataType: OBJECT
  parameterMode: IN
- name: SETDEFAULTALPHA.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETDEFAULTALPHA.DEFAULTALPHA
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETDEFAULTBLUE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETDEFAULTBLUE.DEFAULTBLUE
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETDEFAULTCOLORLAYER.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETDEFAULTCOLORLAYER.DEFAULTRGB
  ordinalPosition: 2
  dataType: VARRAY
  parameterMode: IN
- name: SETDEFAULTGREEN.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETDEFAULTGREEN.DEFAULTGREEN
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETDEFAULTPYRAMIDLEVEL.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETDEFAULTPYRAMIDLEVEL.DEFAULTPYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETDEFAULTRED.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETDEFAULTRED.DEFAULTRED
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETENDDATETIME.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETENDDATETIME.ENDTIME
  ordinalPosition: 2
  dataType: TIMESTAMP WITH TIME ZONE
  numericPrecision: 6
  parameterMode: IN
- name: SETGCPGEOREFMETHOD.INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETGCPGEOREFMETHOD.GEOREFMETHOD
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: SETGCPGEOREFMODEL.INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETGCPGEOREFMODEL.GCPGEOREFMODEL
  ordinalPosition: 2
  dataType: OBJECT
  parameterMode: IN
- name: SETGRAYSCALE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETGRAYSCALE.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETGRAYSCALE.GRAYSCALE
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: SETGRAYSCALETABLE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETGRAYSCALETABLE.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETGRAYSCALETABLE.TABLENAME
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: SETHISTOGRAMTABLE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETHISTOGRAMTABLE.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETHISTOGRAMTABLE.TABLENAME
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: SETID.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETID.ID
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: SETLAYERID.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETLAYERID.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETLAYERID.ID
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: SETLAYERORDINATE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETLAYERORDINATE.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETLAYERORDINATE.ORDINATE
  ordinalPosition: 3
  dataType: NUMBER
  parameterMode: IN
- name: SETMODELCOORDLOCATION.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETMODELCOORDLOCATION.MODELCOORDLOC
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: SETMODELSRID.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETMODELSRID.SRID
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETNODATAMASK.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETNODATAMASK.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETNODATAMASK.ISNODATAMASK
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: SETORTHORECTIFIED.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETORTHORECTIFIED.ISORTHORECTIFIED
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: SETRASTERTYPE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETRASTERTYPE.RASTERTYPE
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETRECTIFIED.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETRECTIFIED.ISRECTIFIED
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: SETSCALING.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETSCALING.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETSCALING.SCALINGFUNC
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: SETSOURCEINFO.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETSOURCEINFO.SOURCEINFO
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: SETSPATIALREFERENCED.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETSPATIALREFERENCED.ISREFERENCED
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: SETSPATIALRESOLUTIONS.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETSPATIALRESOLUTIONS.RESOLUTIONS
  ordinalPosition: 2
  dataType: VARRAY
  parameterMode: IN
- name: SETSPECTRALRESOLUTION.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETSPECTRALRESOLUTION.RESOLUTION
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETSPECTRALUNIT.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETSPECTRALUNIT.UNIT
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: SETSRS.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETSRS.SRS
  ordinalPosition: 2
  dataType: OBJECT
  parameterMode: IN
- name: SETSTATISTICS(1).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETSTATISTICS(1).LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETSTATISTICS(1).STATISTICS
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: SETSTATISTICS(2).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETSTATISTICS(2).LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETSTATISTICS(2).STATISTICS
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: SETSTATISTICS(2).HISTOGRAM
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: IN
- name: SETSTATISTICS(2).SAMPLINGFACTOR
  ordinalPosition: 5
  dataType: NUMBER
  parameterMode: IN
- name: SETSTATISTICS(2).SAMPLINGWINDOW
  ordinalPosition: 6
  dataType: VARRAY
  parameterMode: IN
- name: SETSTATISTICS(3).GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETSTATISTICS(3).LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETSTATISTICS(3).STATISTICS
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: SETSTATISTICS(3).HISTOGRAMTABLE
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: SETSTATISTICS(3).SAMPLINGFACTOR
  ordinalPosition: 5
  dataType: NUMBER
  parameterMode: IN
- name: SETSTATISTICS(3).SAMPLINGWINDOW
  ordinalPosition: 6
  dataType: VARRAY
  parameterMode: IN
- name: SETULTCOORDINATE.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETULTCOORDINATE.ULTCOORD
  ordinalPosition: 2
  dataType: VARRAY
  parameterMode: IN
- name: SETVAT.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETVAT.LAYERNUMBER
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SETVAT.VATNAME
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: SETVERSION.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: SETVERSION.MAJORVERSION
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: SETVERSION.MINORVERSION
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: SUBSET(1).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: SUBSET(1).CROPAREA
  ordinalPosition: 2
  dataType: OBJECT
  parameterMode: IN
- name: SUBSET(1).LAYERNUMBERS
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: SUBSET(1).STORAGEPARAM
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: SUBSET(1).OUTGEORASTER
  ordinalPosition: 5
  dataType: OBJECT
  parameterMode: INOUT
- name: SUBSET(1).BGVALUES
  ordinalPosition: 6
  dataType: VARRAY
  parameterMode: IN
- name: SUBSET(1).POLYGONCLIP
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: SUBSET(2).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: SUBSET(2).CROPAREA
  ordinalPosition: 2
  dataType: VARRAY
  parameterMode: IN
- name: SUBSET(2).BANDNUMBERS
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: SUBSET(2).STORAGEPARAM
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: SUBSET(2).OUTGEORASTER
  ordinalPosition: 5
  dataType: OBJECT
  parameterMode: INOUT
- name: SUBSET(2).BGVALUES
  ordinalPosition: 6
  dataType: VARRAY
  parameterMode: IN
- name: SUBSET(3).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: SUBSET(3).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SUBSET(3).CROPAREA
  ordinalPosition: 3
  dataType: OBJECT
  parameterMode: IN
- name: SUBSET(3).LAYERNUMBERS
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: SUBSET(3).STORAGEPARAM
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: SUBSET(3).OUTGEORASTER
  ordinalPosition: 6
  dataType: OBJECT
  parameterMode: INOUT
- name: SUBSET(3).BGVALUES
  ordinalPosition: 7
  dataType: VARRAY
  parameterMode: IN
- name: SUBSET(3).POLYGONCLIP
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: SUBSET(4).INGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: SUBSET(4).PYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: SUBSET(4).CROPAREA
  ordinalPosition: 3
  dataType: VARRAY
  parameterMode: IN
- name: SUBSET(4).BANDNUMBERS
  ordinalPosition: 4
  dataType: VARCHAR2
  parameterMode: IN
- name: SUBSET(4).STORAGEPARAM
  ordinalPosition: 5
  dataType: VARCHAR2
  parameterMode: IN
- name: SUBSET(4).OUTGEORASTER
  ordinalPosition: 6
  dataType: OBJECT
  parameterMode: INOUT
- name: SUBSET(4).BGVALUES
  ordinalPosition: 7
  dataType: VARRAY
  parameterMode: IN
- name: UPDATERASTER(1).TARGETGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: UPDATERASTER(1).TARGETPYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: UPDATERASTER(1).TARGETLAYERNUMBERS
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: UPDATERASTER(1).TARGETAREA
  ordinalPosition: 4
  dataType: OBJECT
  parameterMode: IN
- name: UPDATERASTER(1).SOURCEGEORASTER
  ordinalPosition: 5
  dataType: OBJECT
  parameterMode: IN
- name: UPDATERASTER(1).SOURCEPYRAMIDLEVEL
  ordinalPosition: 6
  dataType: NUMBER
  parameterMode: IN
- name: UPDATERASTER(1).SOURCELAYERNUMBERS
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: UPDATERASTER(1).UPDATEUPPERPYRAMIDS
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: UPDATERASTER(1).BGVALUES
  ordinalPosition: 9
  dataType: VARRAY
  parameterMode: IN
- name: UPDATERASTER(2).TARGETGEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: INOUT
- name: UPDATERASTER(2).TARGETPYRAMIDLEVEL
  ordinalPosition: 2
  dataType: NUMBER
  parameterMode: IN
- name: UPDATERASTER(2).TARGETBANDNUMBERS
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: UPDATERASTER(2).TARGETAREA
  ordinalPosition: 4
  dataType: VARRAY
  parameterMode: IN
- name: UPDATERASTER(2).SOURCEGEORASTER
  ordinalPosition: 5
  dataType: OBJECT
  parameterMode: IN
- name: UPDATERASTER(2).SOURCEPYRAMIDLEVEL
  ordinalPosition: 6
  dataType: NUMBER
  parameterMode: IN
- name: UPDATERASTER(2).SOURCEBANDNUMBERS
  ordinalPosition: 7
  dataType: VARCHAR2
  parameterMode: IN
- name: UPDATERASTER(2).UPDATEUPPERPYRAMIDS
  ordinalPosition: 8
  dataType: VARCHAR2
  parameterMode: IN
- name: UPDATERASTER(2).BGVALUES
  ordinalPosition: 9
  dataType: VARRAY
  parameterMode: IN
- name: VALIDATEBLOCKMBR.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
- name: VALIDATEFORMOSAIC.GEORASTERTABLENAME
  ordinalPosition: 1
  dataType: VARCHAR2
  parameterMode: IN
- name: VALIDATEFORMOSAIC.GEORASTERCOLUMNNAME
  ordinalPosition: 2
  dataType: VARCHAR2
  parameterMode: IN
- name: VALIDATEFORMOSAIC.RESULTTABLENAME
  ordinalPosition: 3
  dataType: VARCHAR2
  parameterMode: IN
- name: VALIDATEGEORASTER.GEORASTER
  ordinalPosition: 1
  dataType: OBJECT
  parameterMode: IN
routineDefinition: |-
  PACKAGE SDO_GEOR AUTHID CURRENT_USER AS -- ---------------------------------------------------------------------
  --           Create and Process GeoRaster Objects
  -- ---------------------------------------------------------------------
  --
  -- NAME:
  --      init constructor functions
  --
  -- DESCRIPTION
  --      init()s return a GeoRaster Object which is empty except that a RDT
  --      table name and a raster ID are assigned to it. The RDT and ID are
  --      required so that this object can be registered in the sysdata table
  --      All other attributes are NULL.
  --
  --      If rasterDataTable or rasterID is not specified, it is generated
  --      automatically.
  --
  -- ARGUMENTS
  --      rasterDataTable - RDT table name
  --      rasterID        - rasterID number
  --
  -- RETURNS
  --      An GeoRaster object with rasterDataTable and rasterID initialized
  --
  FUNCTION init (
    rasterDataTable IN VARCHAR2 DEFAULT NULL,
    rasterID IN NUMBER DEFAULT NULL
  ) RETURN MDSYS.SDO_GEORASTER DETERMINISTIC;
  --
  -- NAME:
  --      createBlank functions
  --
  -- DESCRIPTION
  --      create a blank GeoRaster object which has normal size as
  --      any other GeoRaster objects except that all its cells
  --      have the same value, such as 100, 5, 54.6.
  --
  --      NOTE, the spatialExtent will always have NULL srid and
  --      integer coordinates until it is georeferenced to another CS.
  --      Initially, the blank object is not georeferenced.
  --
  -- ARGUMENTS
  --      rasterType - the GeoRaster Type defined by Oracle.
  --                   the number of dimensions is implied in it
  --      ultCoord   - Upper-Left corner cell coordinate (integer) in
  --                   cell space. The default is (0,0)
  --      dimSizes   - the size (cell numbers) along each dimension
  --      cellValue  - the cell value for all raster cells
  --
  --      rasterDataTable and rasterID have the similar implications
  --      as in init() functions. See init() comments
  --
  -- RETURNS
  --      A Blank GeoRaster object
  --
  FUNCTION createBlank (
    rasterType IN INTEGER,
    ultCoord IN MDSYS.SDO_NUMBER_ARRAY,
    dimSizes IN MDSYS.SDO_NUMBER_ARRAY,
    cellValue IN NUMBER,
    rasterDataTable IN VARCHAR2 DEFAULT NULL,
    rasterID IN NUMBER DEFAULT NULL
  ) return MDSYS.SDO_GEORASTER DETERMINISTIC;
  --
  -- NAME:
  --      copy procedure
  --
  -- DESCRIPTION
  --      Makes a simple copy of an existing GeoRaster object.
  --
  -- ARGUMENTS
  --      inGeoRaster    - The SDO_GEORASTER object to be copied
  --      outGeoRaster   - The new GeoRaster Object
  --
  -- RETURNS
  --      A GeoRaster object
  --
  PROCEDURE copy (
    inGeoRaster IN MDSYS.SDO_GEORASTER,
    outGeoRaster IN OUT MDSYS.SDO_GEORASTER
  );
  --
  -- NAME:
  --      changeFormat procedure
  --
  -- DESCRIPTION
  --      Change the storage format of an existing GeoRaster object.
  --
  -- ARGUMENTS
  --      georaster    - The SDO_GEORASTER object whose format to be changed
  --      storageParam - A string specifying storage parameters
  --                     The details are explained in GeoRaster Manual
  --      bgValues       - background values for filling sparse data
  --
  -- RETURNS
  --      A GeoRaster object
  --
  PROCEDURE changeFormat (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    storageParam IN VARCHAR2,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  --
  -- NAME:
  --      changeFormatCopy procedure
  --
  -- DESCRIPTION
  --      Makes a copy of an existing GeoRaster object with the same or
  --      different storage format.
  --
  -- ARGUMENTS
  --      inGeoRaster    - The SDO_GEORASTER object to be copied
  --      pyramidLevel   - The pyramid level of the source GeoRaster object
  --      storageParam   - A string specifying storage parameters for the copy
  --                       The details are explained in GeoRaster Manual
  --      outGeoRaster   - The new GeoRaster Object
  --      bgValues       - background values for filling sparse data
  --
  -- RETURNS
  --      A GeoRaster object
  --
  PROCEDURE changeFormatCopy (
    inGeoRaster IN MDSYS.SDO_GEORASTER,
    storageParam IN VARCHAR2,
    outGeoRaster IN OUT MDSYS.SDO_GEORASTER,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  PROCEDURE changeFormatCopy (
    inGeoRaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    storageParam IN VARCHAR2,
    outGeoRaster IN OUT MDSYS.SDO_GEORASTER,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  --
  -- NAME:
  --      maks procedure
  --
  -- DESCRIPTION
  --      apply a mask to  an existing GeoRaster object with the same or
  --      different storage format.
  --
  -- ARGUMENTS
  --      inGeoRaster    - The SDO_GEORASTER object to be applied with mask
  --      bandNumbers    - The physical bands in cell space
  --      mask           - The mask SDO_GEORASTER object
  --      storageParam   - A string specifying storage parameters for the copy
  --                       The details are explained in GeoRaster Manual
  --      outGeoRaster   - The new GeoRaster Object
  --      zeroMapping    - The value is used for mask value 0
  --      onemapping     - The value is used for mask value 1
  --      bgValues       - background values for filling sparse data
  --
  --
  PROCEDURE mask (
    inGeoraster IN MDSYS.SDO_GEORASTER,
    bandNumbers IN VARCHAR2,
    mask IN MDSYS.SDO_GEORASTER DEFAULT NULL,
    storageParam IN VARCHAR2,
    outGeoraster IN OUT MDSYS.SDO_GEORASTER,
    zeroMapping IN NUMBER DEFAULT 0,
    oneMapping IN NUMBER DEFAULT 1,
    bgValues IN SDO_NUMBER_ARRAY DEFAULT NULL
  );
  --
  -- NAME:
  --      subset procedure
  --
  -- DESCRIPTION
  --      This procedure does either spatial crop/cut/clip, or layer/band
  --      subset, or both.
  --
  -- ARGUMENTS
  --      inGeoRaster    - The source SDO_GEORASTER object
  --      pyramidLevel   - The pyramid level of the source GeoRaster object
  --      cropArea       - The crop area. If it is of SDO_GEOMETRY type,
  --                       it can be in any coordinate space. If it is
  --                       of SDO_NUMBER_ARRAY, it is in cell space only
  --      layerNumbers   - The logical layers
  --      bandNumbers    - The physical bands in cell space
  --      storageParam   - A string specifying storage parameters for the result.
  --                       The details are explained in GeoRaster Manual
  --      outGeoRaster   - The new GeoRaster Object
  --      bgValues       - background values for filling sparse data
  --
  -- RETURNS
  --      A GeoRaster object
  --
  PROCEDURE subset (
    inGeoRaster IN MDSYS.SDO_GEORASTER,
    cropArea IN MDSYS.SDO_GEOMETRY,
    layerNumbers IN VARCHAR2,
    storageParam IN VARCHAR2,
    outGeoRaster IN OUT MDSYS.SDO_GEORASTER,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL,
    polygonClip IN VARCHAR2 DEFAULT NULL
  );
  PROCEDURE subset (
    inGeoRaster IN MDSYS.SDO_GEORASTER,
    cropArea IN MDSYS.SDO_NUMBER_ARRAY,
    bandNumbers IN VARCHAR2,
    storageParam IN VARCHAR2,
    outGeoRaster IN OUT MDSYS.SDO_GEORASTER,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  PROCEDURE subset (
    inGeoRaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    cropArea IN MDSYS.SDO_GEOMETRY,
    layerNumbers IN VARCHAR2,
    storageParam IN VARCHAR2,
    outGeoRaster IN OUT MDSYS.SDO_GEORASTER,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL,
    polygonClip IN VARCHAR2 DEFAULT NULL
  );
  PROCEDURE subset (
    inGeoRaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    cropArea IN MDSYS.SDO_NUMBER_ARRAY,
    bandNumbers IN VARCHAR2,
    storageParam IN VARCHAR2,
    outGeoRaster IN OUT MDSYS.SDO_GEORASTER,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  --
  -- NAME:
  --      scale procedure
  --
  -- DESCRIPTION
  --      This procedure enlarges or reduces a georaster object and
  --      overwrites it.
  --
  -- ARGUMENTS
  --      inGeoRaster    - The source SDO_GEORASTER object
  --      scaleParam     - The scale factor or factors
  --      resampleParam  - The resampling method
  --      storageParam   - A string specifying storage parameters for the result
  --                       The details are explained in GeoRaster Manual
  --      bgValues       - background values for filling sparse data
  --
  -- RETURNS
  --      A GeoRaster object
  --
  PROCEDURE scale (
    inGeoRaster IN OUT MDSYS.SDO_GEORASTER,
    scaleParam IN VARCHAR2,
    resampleParam IN VARCHAR2,
    storageParam IN VARCHAR2,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  --
  -- NAME:
  --      scaleCopy procedure
  --
  -- DESCRIPTION
  --      This procedure enlarges or reduces a georaster object and
  --      write the result as another georaster object.
  --
  -- ARGUMENTS
  --      inGeoRaster    - The source SDO_GEORASTER object
  --      pyramidLevel   - The pyramid level of the source GeoRaster object
  --      scaleParam     - The scale factor or factors
  --      resampleParam  - The resampling method
  --      storageParam   - A string specifying storage parameters for the result
  --                       The details are explained in GeoRaster Manual
  --      outGeoRaster   - The new GeoRaster Object
  --      bgValues       - background values for filling sparse data
  --
  -- RETURNS
  --      A GeoRaster object
  --
  PROCEDURE scaleCopy (
    inGeoRaster IN MDSYS.SDO_GEORASTER,
    scaleParam IN VARCHAR2,
    resampleParam IN VARCHAR2,
    storageParam IN VARCHAR2,
    outGeoRaster IN OUT MDSYS.SDO_GEORASTER,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  PROCEDURE scaleCopy (
    inGeoRaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    scaleParam IN VARCHAR2,
    resampleParam IN VARCHAR2,
    storageParam IN VARCHAR2,
    outGeoRaster IN OUT MDSYS.SDO_GEORASTER,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  --
  -- NAME:
  --      generatePyramid
  --
  -- DESCRIPTION
  --      This procedure generates pyramids, which are stored together with
  --      the original data.
  --
  --ARGUMENTS
  --      georaster     - The source SDO_GEORASTER object
  --      pyramidParams - The pyramid parameters
  --      bgValues       - background values for filling sparse data
  --      parallelParam    - The parameter related to parallel processing.
  --                         Currently we only support
  --                           "parallel=n": where n>1 is the degree of parallel.
  --                              The database optimizer uses the degree of
  --                              parallelism specified by n
  --                           By default when this parameter is null, there is
  --                           no parallel processing.
  --
  -- RETURNS
  --      A GeoRaster object
  --
  PROCEDURE generatePyramid (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    pyramidParams IN VARCHAR2,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL,
    parallelParam IN VARCHAR2 DEFAULT NULL
  );
  --
  -- NAME:
  --      deletePyramid
  --
  -- DESCRIPTION
  --      This procedure deletes pyramids of a georaster object.
  --
  --ARGUMENTS
  --      georaster     - The source SDO_GEORASTER object
  --
  -- RETURNS
  --      A GeoRaster object
  --
  PROCEDURE deletePyramid (georaster IN OUT MDSYS.SDO_GEORASTER);
  --
  -- NAME:
  --      generateSpatialExtent
  --
  -- DESCRIPTION
  --      This function generates the spatialExtent of a georaster object
  --      using its SRS (spatial reference system) information.
  --      The srid of the generated spatialExtent is decided by the SRS.
  --      The srid is null if the georaster object is not referenced.
  --
  --ARGUMENTS
  --      georaster - The GeoRaster object on which the spatialExtent is
  --                  to be generated
  --      height    - Z value in the 3D GeoReference system
  --
  -- RETURNS
  --      the spatialExtent geometry
  --
  FUNCTION generateSpatialExtent (
    georaster IN MDSYS.SDO_GEORASTER,
    height IN NUMBER DEFAULT NULL
  ) return MDSYS.SDO_GEOMETRY DETERMINISTIC PARALLEL_ENABLE;
  --
  -- NAME:
  --      mosaic
  --
  -- DESCRIPTION
  --      This procedure mosaics multiple GeoRaster objects into one. The
  --      source GeoRaster objects must be prepared tiles or blocks that
  --      are rectified and referenced onto the same coordinate system
  --      with affine transformation. They must have the same number of
  --      layers/bands and must be spatially aligned along the row and column
  --      dimensions. They must also have the same mapping between the band
  --      and layer numbers.
  --
  --ARGUMENTS
  --      georasterTableName  - the table containing all source georaster objects
  --      georasterColumnName - the column of the georasterTable, in which all
  --                            georaster objects are to be masaicked
  --      georaster           - the result, i.e., the mosaic georaster object
  --      storageParam        - storage parameter specification
  --      bgValues            - background values for filling in the gaps
  --
  -- RETURNS
  --      a mosaic georaster object
  --
  PROCEDURE mosaic (
    georasterTableName IN VARCHAR2,
    georasterColumnName IN VARCHAR2,
    georaster IN OUT MDSYS.SDO_GEORASTER,
    storageParam IN VARCHAR2,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  --
  -- NAME:
  --      validateForMosaic
  --
  -- DESCRIPTION
  --      check whether tiles in the given table are mosaickable
  --
  -- ARGUMENTS
  --      georasterTableName  - the table containing all source georaster objects
  --      georasterColumnName - the column of the georasterTable, in which all
  --                            georaster objects are to be masaicked
  --      resultTableName     - the name of the table to store the result
  -- NOTES
  --   A result table must be created before calling this procedure. The format
  --   of the result table is:
  --    (description VARCHAR2(80) NOT NULL, rowid1 ROWID, rowid2 ROWID)
  --
  PROCEDURE validateForMosaic (
    georasterTableName IN VARCHAR2,
    georasterColumnName IN VARCHAR2,
    resultTableName IN VARCHAR2
  );
  -- NAME:
  --      mosaic
  --
  -- DESCRIPTION
  --      This procedure mosaics multiple GeoRaster objects retrieved from a
  --      cursor and return the mosaicked image in the specified window of
  --      interest. The source GeoRaster objects must be prepared tiles or
  --      blocks that are rectified and referenced onto the same coordinate
  --      system with affine transformation. They must have the same number of
  --      layers/bands and must be spatially aligned along the row and column
  --      dimensions. They must also have the same mapping between the band
  --      and layer numbers.
  --
  --ARGUMENTS
  --      georasters          - the source georaster objects
  --      pyramidLevel        - the pyramid level
  --      window              - the cropping window
  --      layerNumbers        - layer numbers
  --      georaster           - the result, i.e., the mosaic georaster object
  --      storageParam        - storage parameter specification
  --      bgValues            - background values for filling in the gaps
  --
  --
  PROCEDURE mosaic (
    inGeoRasters IN SYS_REFCURSOR,
    pyramidLevel IN NUMBER,
    window IN SDO_GEOMETRY,
    layerNumbers IN VARCHAR2,
    outGeoRaster IN OUT MDSYS.SDO_GEORASTER,
    storageParam IN VARCHAR2,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  --
  -- NAME:
  --      mergeLayers
  --
  -- DESCRIPTION
  --      append selected layers of a GeoRaster object to another GeoRaster object
  --
  -- ARGUMENTS
  --      targetGeoraster    - the GeoRaster object to be appended to
  --      sourceGeoraster    - the source GeoRaster object
  --      sourceLayerNumbers - source layers to be appended to the target
  --      bgValues           - background filling values
  --
  -- NOTES
  --   The source and target GeoRaster objects must have the same row and cloumn
  --   dimension sizes. They also must cover the same area in the model (if both
  --   are georeferenced) or cell (if neither is georeferenced) space.
  --
  PROCEDURE mergeLayers(
    targetGeoraster IN OUT MDSYS.SDO_GEORASTER,
    sourceGeoraster IN MDSYS.SDO_GEORASTER,
    sourceLayerNumbers IN VARCHAR2 DEFAULT NULL,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  --
  -- NAME:
  --     mergeLayers
  --
  -- DESCRIPTION
  --      union selected layers of two GeoRaster objects to generate a new
  --      GeoRaster object
  --
  -- ARGUMENTS
  --      source1Georaster    - the first source GeoRaster object
  --      source1LayerNumbers - source layers of the first object to be included
  --      source2Georaster    - the second GeoRaster object
  --      source2LayerNumbers - source layers of the second object to be included
  --      storageParam        - the storage parameter for the output object
  --      outGeoraster        - the result GeoRaster object
  --      bgValues            - background filling values
  --      pyramidLevel        - union the layers on the pyramidLevel
  -- NOTES
  --   The two source GeoRaster objects must have the same row and cloumn
  --   dimension sizes and the same georeferencing.
  --
  --   If storageParam is NULL, the result object has the same storage
  --   attributes as those of the first source object.
  --
  PROCEDURE mergeLayers(
    source1Georaster IN MDSYS.SDO_GEORASTER,
    source1LayerNumbers IN VARCHAR2,
    source2Georaster IN MDSYS.SDO_GEORASTER,
    source2LayerNumbers IN VARCHAR2,
    storageParam IN VARCHAR2,
    outGeoraster IN OUT MDSYS.SDO_GEORASTER,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL,
    pyramidLevel IN NUMBER DEFAULT NULL
  );
  --
  -- NAME:
  --     updateRaster
  --
  -- DESCRIPTION
  --     Update a specified area or the overlapping parts of one GeoRaster
  --     object with selected bands or layers of another GeoRaster object.
  --
  -- ARGUMENTS
  --     targetGeoraster    - the GeoRaster object to be updated
  --     targetPyramidLevel - the target pyramid level to be updated
  --     targetLayerNumbers - the layers to be updated
  --     targetBandNumbers  - the bands to be updated
  --     targetArea         - the area to be updated
  --     sourceGeoraster    - the source GeoRaster object
  --     sourcePyramidLevel - the source pyramid level
  --     sourceLayerNumbers - the source layers to be considered
  --     sourceBandNumbers  - the source bands to be considered
  --     updateUpperPyramids - whether to update upper level pyramids
  --     bgValues           - background filling values
  --
  -- NOTES
  --   If georeferenced, both objects should be in the same coordinate system.
  --   Both GeoRaster objects should have the same cell depth and spatial
  --   resolution (if georeferenced).
  --   If both are not georeferenced, the UTLCoordinates will be considered to
  --   co-locate them into each other.
  --   The two georaster objects could have different dimensions and sizes.
  --   If targetArea is not specified (NULL), all the overlapping parts are
  --   updated.
  --   The band/layer numbers should have a one-to-one matching.
  --   If the source georaster object is not large enough to fill in the target
  --   area, the uncovered area will not be updated.
  --   If the source georaster object is sparse, background filling values
  --   are considered.
  --   If the target GeoRaster objects has pyramids and/or is compressed, the
  --   updates should be automatically reflected in the pyramids and/or be
  --   compressed as well.
  --
  PROCEDURE updateRaster(
    targetGeoraster IN OUT MDSYS.SDO_GEORASTER,
    targetPyramidLevel IN NUMBER,
    targetLayerNumbers IN VARCHAR2,
    targetArea IN MDSYS.SDO_GEOMETRY,
    sourceGeoraster IN MDSYS.SDO_GEORASTER,
    sourcePyramidLevel IN NUMBER,
    sourceLayerNumbers IN VARCHAR2,
    updateUpperPyramids IN VARCHAR2,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  PROCEDURE updateRaster(
    targetGeoraster IN OUT MDSYS.SDO_GEORASTER,
    targetPyramidLevel IN NUMBER,
    targetBandNumbers IN VARCHAR2,
    targetArea IN MDSYS.SDO_NUMBER_ARRAY,
    sourceGeoraster IN MDSYS.SDO_GEORASTER,
    sourcePyramidLevel IN NUMBER,
    sourceBandNumbers IN VARCHAR2,
    updateUpperPyramids IN VARCHAR2,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  --
  -- NAME:
  --     createTemplate
  --
  -- DESCRIPTION
  --     Generate template metadata for a georaster object, and optionally
  --     insert entries with empty raster blocks into the RDT.
  --
  -- ARGUMENTS
  --     georaster       - the georaster object
  --     rasterType      - the raster type
  --     rasterSpec      - the raster specification
  --     maskLayers      - layers with bitmap mask
  --     initRdtEntry    - whether to insert the RDT entries
  --
  -- NOTES
  --
  PROCEDURE createTemplate (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    rasterType IN NUMBER,
    rasterSpec IN VARCHAR2,
    maskLayers IN VARCHAR2 DEFAULT NULL,
    initRdtEntry IN VARCHAR2 DEFAULT NULL
  );
  --
  -- NAME:
  --     getRasterBlockLocator
  --
  -- DESCRIPTION
  --     Get the LOB locator of a specified raster block
  --
  -- ARGUMENTS
  --     georaster       - the source GeoRaster object
  --     pyramidLevel    - the pyramid level
  --     bandBlockNumber - the band block number
  --     rowBlockNumber  - the row block number
  --     colBlockNumber  - the column block number
  --     loc             - the in/out lob locator
  --     isBitmapMask    - 'true' if access a rasterblock of a bitmap mask
  --     lock_for_write  - lock for write
  --
  -- NOTES
  --     If the value for isBitmapMask is not 'true' (case insensitive),
  --     a regular raster block is accessed; otherwise, a bitmap mask block
  --     is being accessed.
  --
  --     If the value for lock_for_write is not 'true' (case insensitive),
  --     the row in the RDT is not locked.
  --
  PROCEDURE getRasterBlockLocator (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    bandBlockNumber IN NUMBER,
    rowBlockNumber IN NUMBER,
    columnBlockNumber IN NUMBER,
    loc IN OUT NOCOPY BLOB,
    isBitmapMask IN VARCHAR2 DEFAULT NULL,
    lock_for_write IN VARCHAR2 DEFAULT NULL
  );
  --
  -- NAME:
  --      getRasterBlockLocator procedure
  --
  -- DESCRIPTION
  --      The procedure retrieve the raster block locator which
  --      contains a single cell located anywhere in the georaster
  --      object by specifying its row/column/band numbers in its
  --      cell coordinate space  or by specifying a point geometry
  --      in either model coordinate space or cell coordinate space
  --
  -- ARGUMENTS
  --      georaster       - the georaster object to query upon
  --      pyramidLevel    - the level in pyramid
  --      rowNumber       - row number in cell space
  --      colNumber       - column number in cell space
  --      bandNumber      - band number in cell space (not model space)
  --      layerNumber     - logical layer number
  --      ptGeom          - a point geometry in either cell space
  --                        or model space
  -- RETURNS
  --
  --
  PROCEDURE getRasterBlockLocator (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    rowNumber IN NUMBER,
    colNumber IN NUMBER,
    bandNumber IN NUMBER,
    offset out NUMBER,
    loc IN OUT NOCOPY BLOB,
    isBitmapMask IN VARCHAR2 DEFAULT NULL,
    lock_for_write IN VARCHAR2 DEFAULT NULL
  );
  PROCEDURE getRasterBlockLocator (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    ptGeom IN MDSYS.SDO_GEOMETRY,
    layerNumber IN NUMBER,
    offset out NUMBER,
    loc IN OUT NOCOPY BLOB,
    isBitmapMask IN VARCHAR2 DEFAULT NULL,
    lock_for_write IN VARCHAR2 DEFAULT NULL
  );
  --
  -- NAME:
  --     getRasterRange
  --
  -- DESCRIPTION
  --     Get the minimum and maximum cell values of a layer of a GeoRaster object
  --     or the object itself (i.e., layerNumber = 0).
  --
  -- ARGUMENTS
  --     georaster       - the source GeoRaster object
  --     layerNumber     - the layer number, 0 for object layer
  --
  -- NOTES
  --
  FUNCTION getRasterRange (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER DEFAULT 0
  ) RETURN SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  --
  -- NAME:
  --   validateBlockMBR
  --
  -- DESCRIPTION
  --   check whether the blockMBR geometries in the RDT are valid
  --
  -- ARGUMENTS
  --   georaster - the GeoRaster object whose blockMBRs are to be checked
  --
  -- RETURNS
  --   'NULL' if the GeoRaster object is NULL;
  --   'TRUE' if the blockMBRs are valid;
  --    otherwise an error number
  --
  -- NOTES
  --   Each blockMBR is a rectangle defined in the cell space and must be
  --   IDENTICAL to following geometry, respectively:
  --     MDSYS.SDO_GEOMETRY(2003,NULL,NULL,
  --               MDSYS.SDO_ELEM_INFO_ARRAY(1,1003,3),
  --               MDSYS.SDO_ORDINATE_ARRAY(R0+rowBlockNumber*RSZ,
  --                         C0+columnBlockNumber*CSZ,
  --                         R0+(rowBlockNumber+1)*RSZ-1,
  --                         C0+(columnBlockNumber+1)*CSZ-1))
  --   where:
  --     R0 is the upper-left row coordinate in the cell space;
  --     C0 is the upper-left column coordinate in the cell space;
  --     RSZ is the row block size;
  --     CSZ is the column block size
  --   The dimension information of a blockMBR geometry must be in the order
  --   of (ROW, COLUMN).
  FUNCTION validateBlockMBR (georaster IN MDSYS.SDO_GEORASTER) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  --
  -- NAME:
  --   generateBlockMBR
  --
  -- DESCRIPTION
  --   generate correct blockMBR geometries in the RDT
  --
  -- ARGUMENTS
  --   georaster - the GeoRaster object whose blockMBRs are to be generated
  --
  -- NOTES
  --   The raster rows in the RDT are updated with the correct blockMBR values,
  --   but the GeoRaster object itself is not changed.
  --
  PROCEDURE generateBlockMBR (georaster IN MDSYS.SDO_GEORASTER);
  -- ---------------------------------------------------------------------
  --  Compress and Decompress GeoRaster Objects
  --
  --  They are all embedded into "storageParam" in related procedures
  --  using keyword "compression"
  -- ---------------------------------------------------------------------
  --
  -- NAME:
  --      calcCompressionRatio function
  --
  -- DESCRIPTION
  --      calculates the compression ratio of a compressed GeoRaster
  --      object on the fly.
  --
  -- ARGUMENTS
  --      georaster  - The compressed SDO_GEORASTER object
  --
  -- RETURNS
  --      A Number
  --
  FUNCTION calcCompressionRatio (georaster IN MDSYS.SDO_GEORASTER) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  -- ---------------------------------------------------------------------
  --  Update/Modify/Change GeoRaster Object Cell (or say, Raster) Data
  --
  --  These functions will change cell values, so use them cautiously.
  -- ---------------------------------------------------------------------
  --
  -- NAME:
  --      changeCellValue procedure
  --
  -- DESCRIPTION
  --      This procedure changes all cells inside a window of each
  --      specified layer/band to have a specified value
  --
  -- ARGUMENTS
  --      georaster      - The SDO_GEORASTER object to be changed
  --      window         - The window inside which each cell will be changed
  --                       to have the newCellValue. If it is of SDO_GEOMETRY type,
  --                       it can be in any coordinate space. If it is
  --                       of SDO_NUMBER_ARRAY, it is in cell space only
  --      layerNumbers   - The logical layers whose cells to be changed
  --      bandNumbers    - The physical bands in cell space to be changed
  --      newCellValue   - the new cell value for each cell inside the window
  --                       of each specified band/layer
  --      bgValues       - background values for filling sparse data
  --
  -- RETURNS
  --      the source GeoRaster object with cells changed
  --
  PROCEDURE changeCellValue (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    window IN MDSYS.SDO_NUMBER_ARRAY,
    bandNumbers IN VARCHAR2,
    newCellValue IN NUMBER,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  PROCEDURE changeCellValue (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    window IN MDSYS.SDO_GEOMETRY,
    layerNumbers IN VARCHAR2,
    newCellValue IN NUMBER,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  -- ---------------------------------------------------------------------
  --    Georeference GeoRaster Objects
  --
  -- Other georeferencing or related functions include:
  -- 1. setSRS() adds, modifies and deletes georeferencing info
  -- 2. importFrom() loads ArcInfo World File from file or CLOB
  -- 3. the tool GeoRasterLoader loads ArcInfo World File from file
  -- ---------------------------------------------------------------------
  --
  -- NAME:
  --      georeference
  --
  -- DESCRIPTION
  --      georeference a GeoRaster object using the provided
  --      cell-to-model transformation coefficients.
  --      in 10iR1, it means the following affine transformation:
  --        x = A * col + B * row + C
  --        y = D * col + E * row + F
  --      where A, B, C, D, E, F are given coefficients.
  --      The result will be the following model-to-cell tranformation:
  --        row = a + b * x + c * y
  --        col = d + e * x + f * y
  --      where a, b, c, d, e, f will be stored in the SRS of the
  --      GeoRaster object.
  --
  --      NOTE: the spatial resolutions might not be set by this function.
  --            If so, call setSpatialResolutions() to do it separately.
  --
  -- ARGUMENTS
  --      georaster      - the georaster object to be georeferenced
  --      srid           - the model space onto which the georaster object
  --                       is to be georeferenced
  --      modelCoordinateLocation -
  --                       the modelCoordinateLocation of each cell/pixel,
  --                       only CENTER (0) and UPPERLEFT (1) are allowed.
  --      xCoefficients  - A, B, C
  --      yCoefficients  - D, E, F
  --
  -- RETURNS
  --      the input georaster object for update.
  --      the original existing SRS (if any) is overwritten.
  --
  PROCEDURE georeference (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    srid IN NUMBER,
    modelCoordinateLocation IN NUMBER,
    xCoefficients IN MDSYS.SDO_NUMBER_ARRAY,
    yCoefficients IN MDSYS.SDO_NUMBER_ARRAY
  );
  -- ---------------------------------------------------------------------
  --           Query GeoRaster Object Cell (or say, Raster) Data
  -- ---------------------------------------------------------------------
  --
  -- NAME:
  --      getModelCoordinate
  --
  -- DESCRIPTION
  --      Given a spatial coordinate, i.e., (row, column, vertical) of
  --      a cell in the cell coordinate space, its corresponding spatial
  --      coordinate (X, Y, Z) in the model coordinate space
  --      is calculated and returned.
  --
  -- ARGUMENTS
  --      georaster      - the georaster object to query upon.
  --      pyramidLevel   - the pyramid level in which the cell is.
  --      cellCoordinate - number array containing row, column,
  --                       and vertical if its spatial dimension is 3
  --      modelCoordinate - a SDO_GEOMETRY object in the model space that
  --                        contains X, Y and/or Z
  --      height         - Z value in 3D GeoReference system
  --
  -- RETURNS
  --      a SDO_GEOMETRY object containing X, Y and/or Z
  --
  FUNCTION getModelCoordinate (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    cellCoordinate IN MDSYS.SDO_NUMBER_ARRAY,
    height IN NUMBER DEFAULT NULL
  ) RETURN MDSYS.SDO_GEOMETRY DETERMINISTIC PARALLEL_ENABLE;
  PROCEDURE getModelCoordinate (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    cellCoordinate IN MDSYS.SDO_GEOMETRY,
    modelCoordinate OUT MDSYS.SDO_GEOMETRY,
    height IN NUMBER DEFAULT NULL
  );
  --
  -- NAME:
  --      getCellCoordinate
  --
  -- DESCRIPTION
  --      Given a spatial coordinate, i.e., (X, Y, Z) of a point in the model
  --      coordinate space, its corresponding spatial coordinate (row, column,
  --      vertical) in the cell coordinate space is calculated and returned.
  --
  -- ARGUMENTS
  --      georaster       - the georaster object to query upon
  --      pyramidLevel    - the pyramid level in which the cell is.
  --      modelCoordinate - a SDO_GEOMETRY point containing X, Y,
  --                        and Z if its spatial dimension is 3
  --      subCell         - whether floating cell coordinates are returned
  --
  -- RETURNS
  --      either a cellCoordinate array or a SDO_GEOMETRY object containing
  --      row, column and/or vertical
  --
  -- NOTES
  --      If the output type is MDSYS.SDO_NUMBER_ARRY, the input must be a point
  --      geometry; otherwise, the input can be geometry of any types
  --
  --      Cell coordinates are returned as floating numbers if subCell is
  --      'TRUE' (case insensitive). Otherwise, they are returned as integers.
  --
  FUNCTION getCellCoordinate (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    modelCoordinate IN MDSYS.SDO_GEOMETRY,
    subCell IN VARCHAR2 DEFAULT NULL,
    height IN NUMBER DEFAULT NULL,
    vert_id IN NUMBER DEFAULT NULL,
    ellipsoidal IN VARCHAR2 DEFAULT NULL
  ) RETURN MDSYS.SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  PROCEDURE getCellCoordinate (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    modelCoordinate IN MDSYS.SDO_GEOMETRY,
    cellCoordinate OUT MDSYS.SDO_GEOMETRY,
    subCell IN VARCHAR2 DEFAULT NULL,
    height IN NUMBER DEFAULT NULL,
    vert_id IN NUMBER DEFAULT NULL,
    ellipsoidal IN VARCHAR2 DEFAULT NULL
  );
  --
  -- NAME:
  --      getCellCoordinate
  --
  -- DESCRIPTION
  --      Convert cell coordinates between different pyramid levels.
  --
  -- ARGUMENTS
  --      georaster            - the georaster object to query upon
  --      sourcepyramidLevel   - the source pyramid level
  --      sourceCellCoordinate - the source cell coordinates
  --      targetPyramidLevel   - the target pyramid level
  --      subCell           - whether floating cell coordinates are returned
  --
  -- RETURNS
  --      either a sdo_number_array or a SDO_GEOMETRY object containing
  --      the corresponding cell coordinates at the target pyramid level.
  --
  -- NOTES
  --      Cell coordinates are returned as floating numbers if subCell is
  --      'TRUE' (case insensitive). Otherwise, they are returned as integers.
  --
  FUNCTION getCellCoordinate (
    georaster IN MDSYS.SDO_GEORASTER,
    sourcePyramidLevel IN NUMBER,
    sourceCellCoordinate IN MDSYS.SDO_NUMBER_ARRAY,
    targetPyramidLevel IN NUMBER,
    subCell IN VARCHAR2 DEFAULT NULL
  ) RETURN MDSYS.SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getCellCoordinate (
    georaster IN MDSYS.SDO_GEORASTER,
    sourcePyramidLevel IN NUMBER,
    sourceCellCoordinate IN MDSYS.SDO_GEOMETRY,
    targetPyramidLevel IN NUMBER,
    subCell IN VARCHAR2 DEFAULT NULL
  ) RETURN MDSYS.SDO_GEOMETRY DETERMINISTIC PARALLEL_ENABLE;
  --
  -- NAME:
  --      getCellValue functions
  --
  -- DESCRIPTION
  --      The functions retrieve the value of a single cell
  --      located anywhere in the georaster object by specifying
  --      its row/column/band numbers in its cell coordinate space
  --      or by specifying a point geometry in either model
  --      coordinate space or cell coordinate space
  --
  -- ARGUMENTS
  --      georaster       - the georaster object to query upon
  --      pyramidLevel    - the level in pyramid
  --      rowNumber       - row number in cell space
  --      colNumber       - column number in cell space
  --      bandNumber      - band number in cell space (not model space)
  --      layerNumber     - logical layer number
  --      ptGeom          - a point geometry in either cell space
  --                        or model space
  -- RETURNS
  --      Number
  --
  FUNCTION getCellValue (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    rowNumber IN NUMBER,
    colNumber IN NUMBER,
    bandNumber IN NUMBER
  ) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getCellValue (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    ptGeom IN MDSYS.SDO_GEOMETRY,
    layerNumber IN NUMBER
  ) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getCellValue (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    rowNumber IN NUMBER,
    colNumber IN NUMBER,
    bands IN VARCHAR2
  ) RETURN SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getCellValue (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    ptGeom IN MDSYS.SDO_GEOMETRY,
    layers IN VARCHAR2
  ) RETURN SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  --
  -- NAME:
  --      evaluate functions
  --
  -- DESCRIPTION
  --      Based on different interpolation methods specified by parameter
  --      interpolationMethod, the functions will evaluate and return values
  --      for the cells located anywhere in the georaster object by specifying
  --      its row/column/band numbers in its cell coordinate space
  --      or by specifying a point geometry in either model
  --      coordinate space or cell coordinate space
  --      The only difference between evaluate and evaluateDouble is that evaluate
  --      returns values based on the georaster object cellDepth, but evaluateDouble
  --      always returns double numbers.
  --
  -- ARGUMENTS
  --      georaster       - the georaster object to query upon
  --      pyramidLevel    - the level in pyramid
  --      row             - row number in cell space
  --      column          - column number in cell space
  --      bands           - band number array in cell space (not model space)
  --      layers          - logical layer number array
  --      ptGeom          - a point geometry in either cell space
  --                        or model space
  -- RETURNS
  --      SDO_Number_array
  --
  --FUNCTION evaluate
  --(
  --   georaster    IN MDSYS.SDO_GEORASTER,
  --   pyramidLevel IN NUMBER,
  --   row          IN NUMBER,
  --   column       IN NUMBER,
  --   bands        IN VARCHAR2,
  --   interpolationMethod  IN VARCHAR2
  --)
  --RETURN SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  --FUNCTION evaluate
  --(
  --   georaster    IN MDSYS.SDO_GEORASTER,
  --   pyramidLevel IN NUMBER,
  --   ptGeom       IN MDSYS.SDO_GEOMETRY,
  --   layers       IN VARCHAR2,
  --   interpolationMethod  IN VARCHAR2
  --)
  --RETURN SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION evaluateDouble (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    row IN NUMBER,
    column IN NUMBER,
    bands IN VARCHAR2,
    interpolationMethod IN VARCHAR2
  ) RETURN SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION evaluateDouble (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    ptGeom IN MDSYS.SDO_GEOMETRY,
    layers IN VARCHAR2,
    interpolationMethod IN VARCHAR2
  ) RETURN SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  --
  -- NAME:
  --      getRasterBlocks functions
  --
  -- DESCRIPTION
  --      This function returns a sdo_rasterset table containing
  --      all sub-blocks of the specified pramid level which are
  --      inside and touch the given window
  --
  -- ARGUMENTS
  --      georaster       - the georaster object to query upon
  --      pyramidLevel    - the level in pyramid
  --      window          - a rectanglar window in cell space
  --
  -- RETURNS
  --      SDO_RASTERSET
  --
  FUNCTION getRasterBlocks (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    window IN MDSYS.SDO_NUMBER_ARRAY
  ) return MDSYS.SDO_RASTERSET DETERMINISTIC;
  --
  -- NAME:
  --      getRasterBlocks functions
  --
  -- DESCRIPTION
  --      This function returns a sdo_rasterset table containing
  --      all sub-blocks of the specified pramid level which are
  --      inside and touch the given window
  --
  -- ARGUMENTS
  --      georaster       - the georaster object to query upon
  --      pyramidLevel    - the level in pyramid
  --      window          - a SDO geometry
  --
  -- RETURNS
  --      SDO_RASTERSET
  --
  FUNCTION getRasterBlocks (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    window IN MDSYS.SDO_GEOMETRY
  ) return MDSYS.SDO_RASTERSET DETERMINISTIC;
  --
  -- NAME:
  --      getRasterSubset
  --
  -- DESCRIPTION
  --      This function returns a single blob holding the mosaic of
  --      all sub-blocks of the specified pramid level which are
  --      inside and touch the given window
  --
  -- ARGUMENTS
  --      georaster       - the georaster object to query upon
  --      pyramidLevel    - the level in pyramid
  --      inWindow        - the window of interest
  --      bandNumbers     - bandNumbers
  --      rasterBlob      - holds the result, i.e., the mosaicked
  --                        raster subset
  --      outWindow       - the output window
  --      storageParam    - storage parameters for the output
  --      bgValues        - background values
  --
  -- RETURNS
  --      BLOB
  --
  -- NOTES
  --      if the type of inWindow is SDO_NUMBER_ARRAY, it specifies a rectanglar
  --      window in the cell space
  --      outWindow contains the coordinates of the upper-left and bottom-right
  --      corners of the output window in the cell space
  --
  PROCEDURE getRasterSubset (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    window IN MDSYS.SDO_NUMBER_ARRAY,
    bandNumbers IN VARCHAR2,
    rasterBlob IN OUT NOCOPY BLOB,
    storageParam IN VARCHAR2 DEFAULT NULL,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  PROCEDURE getRasterSubset (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    inWindow IN MDSYS.SDO_NUMBER_ARRAY,
    bandNumbers IN VARCHAR2,
    rasterBlob IN OUT NOCOPY BLOB,
    outWindow OUT SDO_NUMBER_ARRAY,
    storageParam IN VARCHAR2 DEFAULT NULL,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  PROCEDURE getRasterSubset (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    window IN MDSYS.SDO_GEOMETRY,
    layerNumbers IN VARCHAR2,
    rasterBlob IN OUT NOCOPY BLOB,
    storageParam IN VARCHAR2 DEFAULT NULL,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL,
    polygonClip IN VARCHAR2 DEFAULT NULL
  );
  PROCEDURE getRasterSubset (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    inWindow IN MDSYS.SDO_GEOMETRY,
    layerNumbers IN VARCHAR2,
    rasterBlob IN OUT NOCOPY BLOB,
    outWindow OUT MDSYS.SDO_NUMBER_ARRAY,
    storageParam IN VARCHAR2 DEFAULT NULL,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL,
    polygonClip IN VARCHAR2 DEFAULT NULL
  );
  --
  -- NAME:
  --      getRasterData
  --
  -- DESCRIPTION
  --      This function returns a single blob holding all raster data
  --      of the input georaster object at the specified pyramid level.
  --      If it is blocked, the mosaic of all blocks of the specified
  --      pramid level is returned.
  --
  -- ARGUMENTS
  --      georaster       - the georaster object to query upon
  --      pyramidLevel    - the level in pyramid
  --      rasterBlob      - holds the result, i.e., the raster data
  --      storageParam    - storage parameters for the output
  --      bgValues        - background values
  --
  -- RETURNS
  --      BLOB
  --
  PROCEDURE getRasterData (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    rasterBlob IN OUT NOCOPY BLOB,
    storageParam IN VARCHAR2 DEFAULT NULL,
    bgValues IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  -- ---------------------------------------------------------------------
  --        Query GeoRaster Object Metadata and Ancillary Data
  -- ---------------------------------------------------------------------
  FUNCTION getVersion (georaster IN MDSYS.SDO_GEORASTER) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getID (georaster IN MDSYS.SDO_GEORASTER) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION isBlank (georaster IN MDSYS.SDO_GEORASTER) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getBlankCellValue (georaster IN MDSYS.SDO_GEORASTER) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getDefaultColorLayer (georaster IN MDSYS.SDO_GEORASTER) RETURN MDSYS.SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getDefaultRed (georaster IN MDSYS.SDO_GEORASTER) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getDefaultBlue (georaster IN MDSYS.SDO_GEORASTER) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getDefaultGreen (georaster IN MDSYS.SDO_GEORASTER) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getDefaultAlpha (georaster IN MDSYS.SDO_GEORASTER) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getDefaultPyramidLevel (georaster IN MDSYS.SDO_GEORASTER) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getSpatialDimNumber (georaster IN MDSYS.SDO_GEORASTER) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getSpatialDimSizes (georaster IN MDSYS.SDO_GEORASTER) RETURN MDSYS.SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getBandDimSize (georaster IN MDSYS.SDO_GEORASTER) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getCellDepth (georaster IN MDSYS.SDO_GEORASTER) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getNODATA (georaster IN MDSYS.SDO_GEORASTER) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getULTCoordinate (georaster IN MDSYS.SDO_GEORASTER) RETURN MDSYS.SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getInterleavingType (georaster IN MDSYS.SDO_GEORASTER) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getCompressionType (georaster IN MDSYS.SDO_GEORASTER) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getBlockingType (georaster IN MDSYS.SDO_GEORASTER) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getBlockSize (georaster IN MDSYS.SDO_GEORASTER) RETURN MDSYS.SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getPyramidType (georaster IN MDSYS.SDO_GEORASTER) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getPyramidMaxLevel (georaster IN MDSYS.SDO_GEORASTER) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION isSpatialReferenced (georaster IN MDSYS.SDO_GEORASTER) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION isRectified (georaster IN MDSYS.SDO_GEORASTER) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION isOrthoRectified (georaster IN MDSYS.SDO_GEORASTER) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getModelSRID (georaster IN MDSYS.SDO_GEORASTER) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getSpatialResolutions (georaster IN MDSYS.SDO_GEORASTER) RETURN MDSYS.SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getSRS (georaster IN MDSYS.SDO_GEORASTER) RETURN MDSYS.SDO_GEOR_SRS DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getModelCoordLocation (georaster IN MDSYS.SDO_GEORASTER) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getBeginDateTime (georaster IN MDSYS.SDO_GEORASTER) RETURN TIMESTAMP WITH TIME ZONE DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getEndDateTime (georaster IN MDSYS.SDO_GEORASTER) RETURN TIMESTAMP WITH TIME ZONE DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getSpectralUnit (georaster IN MDSYS.SDO_GEORASTER) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getSpectralResolution (georaster IN MDSYS.SDO_GEORASTER) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  -- for all layer-related get and set functions,
  -- layerNumber = 0 means the object layer
  -- layerDimension defaults to 'BAND' if not specified
  FUNCTION getLayerDimension (georaster IN MDSYS.SDO_GEORASTER) RETURN MDSYS.SDO_STRING_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getTotalLayerNumber (georaster IN MDSYS.SDO_GEORASTER) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getLayerOrdinate (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getLayerID (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getScaling (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN MDSYS.SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getBinType (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getBinTable (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getBinFunction (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN MDSYS.SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getStatistics (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN MDSYS.SDO_NUMBER_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getHistogram (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN MDSYS.SDO_GEOR_HISTOGRAM DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getHistogramTable (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION hasGrayScale (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getGrayScale (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN MDSYS.SDO_GEOR_GRAYSCALE DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getGrayScaleTable (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION hasPseudoColor (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getColorMap (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN MDSYS.SDO_GEOR_COLORMAP DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getColorMapTable (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getVAT (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  -- ---------------------------------------------------------------------
  --
  --   statistics functions
  --
  -- ---------------------------------------------------------------------
  Function generateStatistics (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_GEOMETRY,
    histogram IN VARCHAR2,
    layerNumbers IN VARCHAR2 DEFAULT NULL,
    useBin IN VARCHAR2 DEFAULT 'TRUE',
    binFunction IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE'
  ) return Varchar2;
  Function generateStatistics (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_NUMBER_ARRAY,
    histogram IN VARCHAR2,
    layerNumbers IN VARCHAR2 DEFAULT NULL,
    useBin IN VARCHAR2 DEFAULT 'TRUE',
    binFunction IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE'
  ) return Varchar2;
  Function generateStatistics (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_NUMBER_ARRAY,
    bandNumbers IN VARCHAR2 DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE'
  ) return SDO_NUMBER_ARRAY;
  Function generateStatistics (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_GEOMETRY,
    bandNumbers IN VARCHAR2 DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE',
    polygonClip IN VARCHAR2 DEFAULT NULL
  ) return SDO_NUMBER_ARRAY;
  Function generateStatisticsMax (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_NUMBER_ARRAY,
    bandNumbers IN VARCHAR2 DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE'
  ) return NUMBER;
  Function generateStatisticsMax (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_GEOMETRY,
    bandNumbers IN VARCHAR2 DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE',
    polygonClip IN VARCHAR2 DEFAULT NULL
  ) return NUMBER;
  Function generateStatisticsMin (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_NUMBER_ARRAY,
    bandNumbers IN VARCHAR2 DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE'
  ) return NUMBER;
  Function generateStatisticsMin (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_GEOMETRY,
    bandNumbers IN VARCHAR2 DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE',
    polygonClip IN VARCHAR2 DEFAULT NULL
  ) return NUMBER;
  Function generateStatisticsMean (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_NUMBER_ARRAY,
    bandNumbers IN VARCHAR2 DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE'
  ) return NUMBER;
  Function generateStatisticsMean (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_GEOMETRY,
    bandNumbers IN VARCHAR2 DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE',
    polygonClip IN VARCHAR2 DEFAULT NULL
  ) return NUMBER;
  Function generateStatisticsSTD (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_NUMBER_ARRAY,
    bandNumbers IN VARCHAR2 DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE'
  ) return NUMBER;
  Function generateStatisticsSTD (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_GEOMETRY,
    bandNumbers IN VARCHAR2 DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE',
    polygonClip IN VARCHAR2 DEFAULT NULL
  ) return NUMBER;
  Function generateStatisticsMedian (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_NUMBER_ARRAY,
    bandNumbers IN VARCHAR2 DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE'
  ) return NUMBER;
  Function generateStatisticsMedian (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_GEOMETRY,
    bandNumbers IN VARCHAR2 DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE',
    polygonClip IN VARCHAR2 DEFAULT NULL
  ) return NUMBER;
  Function generateStatisticsMode (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_NUMBER_ARRAY,
    bandNumbers IN VARCHAR2 DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE'
  ) return NUMBER;
  Function generateStatisticsMode (
    georaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    samplingFactor IN VARCHAR2,
    samplingWindow IN SDO_GEOMETRY,
    bandNumbers IN VARCHAR2 DEFAULT NULL,
    nodata IN VARCHAR2 DEFAULT 'FALSE',
    polygonClip IN VARCHAR2 DEFAULT NULL
  ) return NUMBER;
  -- ---------------------------------------------------------------------
  --    Update and Delete GeoRaster Object Metadata and Ancillary Data
  --
  --  SET procedures function as both UPDATE/MODIFY and DELETE.
  --  In SET procedures, if the parameter is given as null, it will DELETE
  --  the corresponding item/data in the georaster object only if the item
  --  is allowed to be deleted (optional or minOccurs=0 in xml schema) and
  --  without other dependency and inter-relationship issues.
  --  Validation will be done in those procedures in both cases.
  --  To avoid losing data, use them cautiously.
  -- ---------------------------------------------------------------------
  -- change the last two digits only
  PROCEDURE setRasterType (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    rasterType IN NUMBER
  );
  PROCEDURE setID (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    id IN VARCHAR2
  );
  PROCEDURE setBlankCellValue (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    value IN NUMBER
  );
  PROCEDURE setDefaultColorLayer (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    defaultRGB IN MDSYS.SDO_NUMBER_ARRAY
  );
  PROCEDURE setDefaultRed (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    defaultRed IN NUMBER
  );
  PROCEDURE setDefaultGreen (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    defaultGreen IN NUMBER
  );
  PROCEDURE setDefaultBlue (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    defaultBlue IN NUMBER
  );
  PROCEDURE setDefaultAlpha (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    defaultAlpha IN NUMBER
  );
  PROCEDURE setDefaultPyramidLevel (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    defaultPyramidLevel IN NUMBER
  );
  -- only if not spatial, temporal and band referenced
  PROCEDURE setULTCoordinate (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    ultCoord IN MDSYS.SDO_NUMBER_ARRAY
  );
  PROCEDURE setSpatialReferenced (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    isReferenced IN VARCHAR2
  );
  -- set TRUE only if spatial referenced
  PROCEDURE setRectified (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    isRectified IN VARCHAR2
  );
  -- set TRUE only if rectified
  PROCEDURE setOrthoRectified (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    isOrthoRectified IN VARCHAR2
  );
  PROCEDURE setModelSRID (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    srid IN NUMBER
  );
  PROCEDURE setSpatialResolutions (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    resolutions IN MDSYS.SDO_NUMBER_ARRAY
  );
  PROCEDURE setSRS (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    srs IN MDSYS.SDO_GEOR_SRS
  );
  -- value can be set only if spatial referenced
  PROCEDURE setModelCoordLocation (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    modelCoordLoc IN VARCHAR2
  );
  PROCEDURE setBeginDateTime (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    beginTime IN TIMESTAMP WITH TIME ZONE
  );
  PROCEDURE setEndDateTime (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    endTime IN TIMESTAMP WITH TIME ZONE
  );
  PROCEDURE setSpectralUnit (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    unit IN VARCHAR2
  );
  PROCEDURE setSpectralResolution (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    resolution IN NUMBER
  );
  PROCEDURE setLayerOrdinate (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    ordinate IN NUMBER
  );
  PROCEDURE setLayerID (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    id IN VARCHAR2
  );
  PROCEDURE setScaling (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    scalingFunc IN MDSYS.SDO_NUMBER_ARRAY
  );
  -- change binType if necessary
  PROCEDURE setBinTable (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    tableName IN VARCHAR2
  );
  PROCEDURE setBinFunction(
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    binFunction IN MDSYS.SDO_NUMBER_ARRAY
  );
  PROCEDURE setGrayScale (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    grayScale IN MDSYS.SDO_GEOR_GRAYSCALE
  );
  PROCEDURE setGrayScaleTable (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    tableName IN VARCHAR2
  );
  PROCEDURE setColorMap (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    colorMap IN MDSYS.SDO_GEOR_COLORMAP
  );
  PROCEDURE setColorMapTable (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    tableName IN VARCHAR2
  );
  PROCEDURE setVAT (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    vatName IN VARCHAR2
  );
  PROCEDURE setVersion (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    majorVersion IN VARCHAR2,
    minorVersion IN VARCHAR2
  );
  PROCEDURE setStatistics (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    statistics IN MDSYS.SDO_NUMBER_ARRAY
  );
  --
  -- NOTES
  --   1) Whenever histogram is updated, new statistics must be provided.
  --   2) If statistics is set with different samplingFactor/samplingWindow,
  --      existing histogram is removed if not reset.
  --   3) The samplingWindow must be inside the extent in the cell space.
  --   4) If not specified, the default value for samplingFactor is 1.
  --   5) If not specified, the default value for samplingWindow is the
  --      whole image and it is removed from the metadata.
  --
  PROCEDURE setStatistics (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    statistics IN MDSYS.SDO_NUMBER_ARRAY,
    histogram IN MDSYS.SDO_GEOR_HISTOGRAM,
    samplingFactor IN NUMBER DEFAULT NULL,
    samplingWindow IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  -- NOTES
  --   1) The histogram table cannot be set if no statistics exist.
  --   2) The histogram table is removed if histogramTable is NULL.
  --   3) The samplingWindow must be inside the extent in the cell space.
  --   4) If not specified, the default value for samplingFactor is 1.
  --   5) If not specified, the default value for samplingWindow is the
  --      whole image and it is removed from the metadata.
  --
  PROCEDURE setStatistics (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    statistics IN MDSYS.SDO_NUMBER_ARRAY,
    histogramTable IN VARCHAR2,
    samplingFactor IN NUMBER DEFAULT NULL,
    samplingWindow IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  );
  --PROCEDURE setHistogram
  --(
  --  georaster    IN OUT MDSYS.SDO_GEORASTER,
  --  layerNumber  IN NUMBER,
  --  histogram    IN MDSYS.SDO_GEOR_HISTOGRAM,
  --  samplingFactor IN NUMBER DEFAULT NULL,
  --  samplingWindow IN MDSYS.SDO_NUMBER_ARRAY DEFAULT NULL
  --);
  PROCEDURE setHistogramTable (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    tableName IN VARCHAR2
  );
  PROCEDURE setSourceInfo (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    sourceInfo IN VARCHAR2
  );
  PROCEDURE addSourceInfo (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    sourceInfo IN VARCHAR2
  );
  FUNCTION getSourceInfo (georaster IN MDSYS.SDO_GEORASTER) RETURN MDSYS.SDO_STRING2_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  -- ---------------------------------------------------------------------
  --           multiple nodata values/value ranges
  -- ---------------------------------------------------------------------
  -- remove one NODATA value
  PROCEDURE deleteNODATA (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    NODATA IN NUMBER
  );
  -- remove multiple NODATA values or value ranges
  PROCEDURE deleteNODATA (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    NODATA IN MDSYS.SDO_RANGE_ARRAY
  );
  -- add one NODATA value
  PROCEDURE addNODATA (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    NODATA IN NUMBER
  );
  -- add multiple NODATA values or value ranges
  PROCEDURE addNODATA(
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    NODATA IN MDSYS.SDO_RANGE_ARRAY
  );
  -- retrieve all NODATA values and value ranges
  FUNCTION getNODATA (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN MDSYS.SDO_RANGE_ARRAY DETERMINISTIC PARALLEL_ENABLE;
  -- ---------------------------------------------------------------------
  --           Bitmap Mask Support
  -- ---------------------------------------------------------------------
  --
  -- NAME:
  --   setBitmapMask
  --
  -- DESCRIPTION
  --   Attach, replace or remove a bitmap mask to a given GeoRaster layer
  --
  -- ARGUMENTS
  --   georaster   - the GeoRaster object to be operated on
  --   layerNumber - an object layer (0) or a subLayer (>0)
  --   mask        - the 1BIT bitmap mask
  --   NODATAMask  - spacifies whether the mask is going to be a NODATA mask
  --
  -- NOTES
  --   If the GeoRaster object is NULL, nothing is to be done.
  --   If the mask is NULL, any exisiting bitmap mask associated with the given
  --   layer is removed.
  --   If the mask is not a 1BIT GeoRaster object or has wrong dimension size,
  --   error ORA-13470 is raised.
  --   If the mask is not NULL or invalid, any exisiting bitmap mask associated
  --   with the given layer is replaced with the new one.
  --
  PROCEDURE setBitmapMask (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    mask IN MDSYS.SDO_GEORASTER,
    NODATAMask IN VARCHAR2 DEFAULT NULL
  );
  --
  -- NAME:
  --   getBitmapMask
  --
  -- DESCRIPTION
  --   Retrieve a bitmap mask as a standalone GeoRaster object
  --
  -- ARGUMENTS
  --   georaster    - the source GeoRaster object
  --   layerNumber  - an object layer (0) or a subLayer (>0)
  --   storageParam - the storage parameter for the output GeoRaster object
  --   mask         - the result GeoRaster object
  --
  -- NOTES
  --   If the source GeoRaster object is NULL or there is no bitmap mask
  --   associated with the given layer, a NULL GeoRaster object is returned.
  --
  PROCEDURE getBitmapMask (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    storageParam IN VARCHAR2,
    mask IN OUT MDSYS.SDO_GEORASTER
  );
  --
  -- NAME:
  --   getBitmapMaskValue
  --
  -- DESCRIPTION
  --   Retrieve a cell value of a bitmap mask
  --
  -- ARGUMENTS
  --   georaster    - the source GeoRaster object
  --   layerNumber  - an object layer (0) or a subLayer (>0)
  --   pyramidLevel - the pyramid level
  --   rowNumber    - row number in cell space
  --   colNumber    - column number in cell space
  --   ptGeom       - a point geometry in either cell space
  --                  or model space
  -- RETURNS
  --   Number
  --
  -- NOTES
  --   If the source GeoRaster object is NULL or there is no bitmap mask
  --   associated with the specfied raster layer, NULL is returned.
  --   If the point position is out of scope, ORA-13415 is raised.
  --
  FUNCTION getBitmapMaskValue (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    pyramidLevel IN NUMBER,
    rowNumber IN NUMBER,
    colNumber IN NUMBER
  ) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  FUNCTION getBitmapMaskValue (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    pyramidLevel IN NUMBER,
    ptGeom IN MDSYS.SDO_GEOMETRY
  ) RETURN NUMBER DETERMINISTIC PARALLEL_ENABLE;
  --
  -- NAME:
  --   getBitmapMaskSubset
  --
  -- DESCRIPTION
  --   Retrieve a subset of a bitmap mask
  --
  -- ARGUMENTS
  --   georaster    - the source GeoRaster object
  --   layerNumber  - an object layer (0) or a subLayer (>0)
  --   pyramidLevel - the pyramid level
  --   window/inWindow - the area of interest
  --   rasterBlob   - the BLOB holding the output
  --   outWindow    - the actual output window
  --   storageParam - storage parameters for the output
  --
  -- NOTES
  --   If the source GeoRaster object is NULL or there is no bitmap mask
  --   associated with the specfied raster layer, the result BLOB is empty.
  --   If not specified, the storageParm for the output follows that of
  --   the source GeoRaster object.
  --
  PROCEDURE getBitmapMaskSubset (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    pyramidLevel IN NUMBER,
    window IN MDSYS.SDO_NUMBER_ARRAY,
    rasterBlob IN OUT NOCOPY BLOB,
    storageParam IN VARCHAR2 DEFAULT NULL
  );
  PROCEDURE getBitmapMaskSubset (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    pyramidLevel IN NUMBER,
    window IN MDSYS.SDO_GEOMETRY,
    rasterBlob IN OUT NOCOPY BLOB,
    storageParam IN VARCHAR2 DEFAULT NULL
  );
  PROCEDURE getBitmapMaskSubset (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    pyramidLevel IN NUMBER,
    inWindow IN MDSYS.SDO_NUMBER_ARRAY,
    rasterBlob IN OUT NOCOPY BLOB,
    outWindow OUT MDSYS.SDO_NUMBER_ARRAY,
    storageParam IN VARCHAR2 DEFAULT NULL
  );
  PROCEDURE getBitmapMaskSubset (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    pyramidLevel IN NUMBER,
    inWindow IN MDSYS.SDO_GEOMETRY,
    rasterBlob IN OUT NOCOPY BLOB,
    outWindow OUT MDSYS.SDO_NUMBER_ARRAY,
    storageParam IN VARCHAR2 DEFAULT NULL
  );
  --
  -- NAME:
  --   hasBitmapMask
  --
  -- DESCRIPTION
  --   Check whether a bitmap map exists for the specified GeoRaster layer
  --
  -- ARGUMENTS
  --   georaster    - the source GeoRaster object
  --   layerNumber  - an object layer (0) or a subLayer (>0)
  --
  -- RETURN
  --   'NULL' if the GeoRaster object is NULL
  --   'TRUE' if a bitmap mask exists
  --   'FALSE' otherwise
  --
  FUNCTION hasBitmapMask (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  --
  -- NAME:
  --   hasNODATAMask
  --
  -- DESCRIPTION
  --   Check whether a NODATA bitmap map exists for the specified GeoRaster layer
  --
  -- ARGUMENTS
  --   georaster    - the source GeoRaster object
  --   layerNumber  - an object layer (0) or a subLayer (>0)
  --
  -- RETURN
  --   'NULL' if the GeoRaster object is NULL
  --   'TRUE' if a bitmap mask exists and is a NODATA mask
  --   'FALSE' otherwise
  --
  FUNCTION hasNODATAMask (
    georaster IN MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER
  ) RETURN VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  --
  -- NAME:
  --   setNODATAMask
  --
  -- DESCRIPTION
  --   Specifies whether or not a bitmap mask on the specified GeoRaster layer
  --   is NODATA mask.
  --
  -- ARGUMENTS
  --   georaster    - the source GeoRaster object
  --   layerNumber  - an object layer (0) or a subLayer (>0)
  --   isNODATAMask - 'TRUE' or 'FALSE'
  --
  -- RETURN
  --   'NULL' if the GeoRaster object is NULL
  --   'TRUE' if a bitmap mask exists and is a NODATA mask
  --   'FALSE' otherwise
  --
  PROCEDURE setNODATAMask (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    layerNumber IN NUMBER,
    isNODATAMask IN VARCHAR2
  );
  -- ---------------------------------------------------------------------
  --           Validate GeoRaster Objects
  -- ---------------------------------------------------------------------
  --
  -- NAME:
  --      validateGeoRaster
  --
  -- DESCRIPTION
  --      validate a GeoRaster object
  --
  -- ARGUMENTS
  --      georaster    - The SDO_GEORASTER object to be validated
  --
  -- RETURNS
  --      1. 'TRUE' if the georaster is valid
  --      2. 'NULL' if the georaster object is null
  --      3. A Oracle standard error code for known errors
  --      4. 'FALSE' for unknown errors
  --
  FUNCTION validateGeoRaster (georaster IN MDSYS.SDO_GEORASTER) return VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  --
  -- NAME:
  --      schemaValidate
  --
  -- DESCRIPTION
  --      Validate GeoRaster Metadata against the GeoRaster XML Schema
  --      It explains the reasons if the metadata is not valid
  --
  -- ARGUMENTS
  --      georaster - The SDO_GEORASTER object of which the metadata is
  --                  to be validated
  --
  -- RETURNS
  --      1. 'TRUE' if the georaster is valid against XML schema
  --      2. 'NULL' if the georaster or its metadata is null
  --      3. Otherwise it prints Oracle standard error codes for
  --         detailed errors and stop directly
  --
  FUNCTION schemaValidate (georaster IN MDSYS.SDO_GEORASTER) return VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  -- ---------------------------------------------------------------------
  -- import from and export to other raster sources/formats:
  --   local FILE, HTTP file, ORDImage, BLOB, BFILE, GeoHeader files, etc
  -- ---------------------------------------------------------------------
  --
  -- NAME:
  --      importFrom procedures
  --
  -- DESCRIPTION
  --      import from FILE, HTTP into a GeoRaster object
  --
  -- ARGUMENTS
  --      sourceFormat   - source format, such as JPEG, TIFF, etc.
  --      sourceType     - FILE or HTTP, etc.
  --      sourceName     - source file name with fullpath
  --      storageParam   - the GeoRaster object storage formats
  --      georaster      - original and result GeoRaster object
  --                       It must be an existing GeoRaster object
  --      r_sourceFormat - raster sourceFormat as above
  --      r_sourceType   - raster sourceType as above
  --      r_sourceName   - raster sourceName as above
  --      r_sourceBlob   - Blob holding source image file
  --      h_sourceFormat - geo-header sourceFormat as above
  --      h_sourceType   - geo-header sourceType as above
  --      h_sourceName   - geo-header sourceName as above
  --      h_sourceClob   - Clob holding source geo-header file
  --
  -- RETURNS
  --      sdo_georaster object
  --
  PROCEDURE importFrom (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    storageParam IN VARCHAR2,
    r_sourceFormat IN VARCHAR2,
    r_sourceType IN VARCHAR2,
    r_sourceName IN VARCHAR2,
    h_sourceFormat IN VARCHAR2 default null,
    h_sourceType IN VARCHAR2 default null,
    h_sourceName IN VARCHAR2 default null
  );
  PROCEDURE importFrom (
    georaster IN OUT MDSYS.SDO_GEORASTER,
    storageParam IN VARCHAR2,
    r_sourceFormat IN VARCHAR2,
    r_sourceBlob IN BLOB,
    h_sourceFormat IN VARCHAR2 default null,
    h_sourceClob IN CLOB default null
  );
  --
  -- NAME:
  --      exportTo procedures
  --
  -- DESCRIPTION
  --      export GeoRaster object to other types
  --
  -- ARGUMENTS
  --      destFormat   - dest format, such as JPEG, TIFF, etc.
  --      destType     - FILE, etc.
  --      destName     - dest file name with fullpath
  --      subsetParam  - subset/crop parameters for output a subset
  --      georaster    - the GeoRaster object to be exported
  --      r_destFormat - raster destFormat as above
  --      r_destType   - raster destType as above
  --      r_destName   - raster destName as above
  --      r_destBlob   - Blob to hold the output image file
  --      h_destFormat - geo-header destFormat as above
  --      h_destType   - geo-header destType as above
  --      h_destName   - geo-header destName as above
  --      h_destClob   - Clob to hold the output geo-header file
  --
  -- RETURNS
  --
  PROCEDURE exportTo (
    georaster IN MDSYS.SDO_GEORASTER,
    subsetParam IN VARCHAR2,
    r_destFormat IN VARCHAR2,
    r_destType IN VARCHAR2,
    r_destName IN VARCHAR2,
    h_destFormat IN VARCHAR2 default null,
    h_destType IN VARCHAR2 default null,
    h_destName IN VARCHAR2 default null
  );
  PROCEDURE exportTo (
    georaster IN MDSYS.SDO_GEORASTER,
    subsetParam IN VARCHAR2,
    destFormat IN VARCHAR2,
    destBlob IN OUT NOCOPY BLOB
  );
  PROCEDURE exportTo (
    georaster IN MDSYS.SDO_GEORASTER,
    subsetParam IN VARCHAR2,
    r_destFormat IN VARCHAR2,
    r_destBlob IN OUT NOCOPY BLOB,
    h_destFormat IN VARCHAR2,
    h_destClob IN OUT NOCOPY CLOB
  );
  --
  -- NAME:
  --      getGeoreferenceType  function
  --
  -- DESCRIPTION
  --      retrieve GeoReference type for the specified
  --      GeoRaster object, so far, only three types are
  --      supported by this function as below, for all other
  --      types, UNKNOWN will return
  --
  --              1    --    Unknown
  --              2    --    Affine Transform
  --              3    --    Direct Linear Transform (DLT)
  --              4    --    Rational Polynomial Coefficient (RPC)
  --
  -- ARGUMENTS
  --      georaster   - geoRaster object
  --
  -- RETURNS
  --      an integer to represent GeoReference type
  FUNCTION getGeoreferenceType (georaster IN MDSYS.SDO_GEORASTER) return number;
  --
  -- NAME:
  --      isLossless
  --
  -- DESCRIPTION
  --      Returns a string value that indicates whether or not the GeoRaster
  --      object is compressed losslessly or lossily, or not compressed at all.
  --
  -- ARGUMENTS
  --      georaster - The SDO_GEORASTER object of which losslessness is to be
  --      determined.
  --
  -- RETURNS
  --      1. 'TRUE' if GeoRaster object is losslessly compressed
  --      2. 'NULL' if the georaster or its metadata is null, or if the
  --         GeoRaster object is not compressed.
  --      3. 'FALSE' if GeoRaster object is lossily compressed
  --
  FUNCTION isLossless (geor IN MDSYS.SDO_GEORASTER) return VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  -- ---------------------------------------------------------------------
  --    Reproject GeoRaster Objects
  --
  -- ---------------------------------------------------------------------
  --
  -- NAME:
  --      reproject
  --
  -- DESCRIPTION
  --      Re-project a geo-referenced GeoRaster object into a new projection
  --      defined by SRID which is different from the current projection.
  --
  --      NOTE:
  --         (1) The input GeoRaster object should have a supported projection;
  --         (2) If not georeferenced, use setSRS to setup if the projection
  --             was known;
  --         (3) The new projection should be valid and different from current one.
  --
  -- ARGUMENTS
  --      inGeoRaster    - The source SDO_GEORASTER object to be re-projected
  --      pyramidLevel   - The pyramid level of the source GeoRaster object
  --      cropArea       - The crop area to be re-projected. If it is of
  --                     - SDO_GEOMETRY type, it can be in any coordinate space.
  --                       If it is of SDO_NUMBER_ARRAY, it is in cell space only
  --      layerNumbers   - The logical layers
  --      bandNumbers    - The physical bands in cell space
  --      resampleParam  - The resampling method
  --      storageParam   - A string specifying storage parameters for the result.
  --                       The details of the parameters are explained in
  --                       GeoRaster Manual
  --      outSRID        - The SRID defines the new projection
  --      outGeoRaster   - The re-projected persistent GeoRaster Object
  --      rasterBlob     - The re-projected transient GeoRaster Object
  --      outArea        - The re-projected transient GeoRaster Object extent
  --                       in model coordinates.
  --      outWindow      - The re-projected transient GeoRaster Object extent
  --                       in cell coordinates.
  --      bgValues       - background values for filling empty pixels
  --                       one for each band
  --
  -- RETURNS
  --      In the outGeoRaster is the re-projected GeoRaster object
  -- For the persistent reprojection, the new GeoRatser is stored in table
  PROCEDURE reproject (
    inGeoraster IN MDSYS.SDO_GEORASTER,
    resampleParam IN VARCHAR2,
    storageParam IN VARCHAR2,
    outSRID IN NUMBER,
    outGeoraster IN OUT MDSYS.SDO_GEORASTER,
    bgValues IN SDO_NUMBER_ARRAY DEFAULT NULL
  );
  PROCEDURE reproject (
    inGeoraster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    cropArea IN SDO_GEOMETRY,
    layerNumbers IN VARCHAR2,
    resampleParam IN VARCHAR2,
    storageParam IN VARCHAR2,
    outSRID IN NUMBER,
    outGeoraster IN OUT MDSYS.SDO_GEORASTER,
    bgValues IN SDO_NUMBER_ARRAY DEFAULT NULL
  );
  PROCEDURE reproject (
    inGeoraster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    cropArea IN SDO_NUMBER_ARRAY,
    bandNumbers IN VARCHAR2,
    resampleParam IN VARCHAR2,
    storageParam IN VARCHAR2,
    outSRID IN NUMBER,
    outGeoraster IN OUT MDSYS.SDO_GEORASTER,
    bgValues IN SDO_NUMBER_ARRAY DEFAULT NULL
  );
  -- For the transient reprojection (on the fly),
  -- the new GeoRatser is stored as BLOB
  PROCEDURE reproject (
    inGeoraster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    cropArea IN SDO_GEOMETRY,
    layerNumbers IN VARCHAR2,
    resampleParam IN VARCHAR2,
    storageParam IN VARCHAR2,
    outSRID IN NUMBER,
    rasterBlob IN OUT NOCOPY BLOB,
    outArea OUT SDO_GEOMETRY,
    outWindow OUT SDO_NUMBER_ARRAY,
    bgValues IN SDO_NUMBER_ARRAY DEFAULT NULL
  );
  PROCEDURE reproject (
    inGeoraster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    cropArea IN SDO_NUMBER_ARRAY,
    bandNumbers IN VARCHAR2,
    resampleParam IN VARCHAR2,
    storageParam IN VARCHAR2,
    outSRID IN NUMBER,
    rasterBlob IN OUT NOCOPY BLOB,
    outArea OUT SDO_GEOMETRY,
    outWindow OUT SDO_NUMBER_ARRAY,
    bgValues IN SDO_NUMBER_ARRAY DEFAULT NULL
  );
  -- ---------------------------------------------------------------------
  --    Georeference GeoRaster Using Control Points (GCPs)
  --
  -- ---------------------------------------------------------------------
  --
  -- NAME:
  --      georeference
  --
  -- DESCRIPTION
  --      This function will georeference an image using a set of
  --      control points (GCPs).
  --
  -- ARGUMENTS
  --
  --      georaster      - The source SDO_GEORASTER object to be georeferenced
  --      FFMethodType   - The (rational) polynomial function used as georeference model
  --      nGCP           - Number of GCPs provided
  --      GCPs           - The GCP collection. Each GCP represents a points pair, one on
  --                       image and another in some coordinate system or another image.
  --      gcpGeorefModel - A data structure contains FFMethodType, nGCP, GCPs,solutionAccuracy
  --      storeGCP       - A flag indicate whether the GCPs should be stored in the georaster
  --                       metadata.
  --      SRID           - The GCP's model coordinates SRID
  --      modelCoordLoc  - The location on cell for the corresponding model coords
  --      setResolution  - whether to set the spatial resolution in the
  --                             SRS. "TRUE" or "FALSE" By default it is FALSE.
  --
  -- RETURNS
  --      The solution accuracy (rowRMS, colRMS, totalRMS) and the ground positionning
  --      accuracy (xRMS, yRMS, (zRMS), totalModelRMS) if check points provided
  --
  Function georeference(
    inGeoraster IN OUT MDSYS.SDO_GEORASTER,
    FFMethodType IN VARCHAR2,
    nGCP IN Number,
    GCPs IN SDO_GEOR_GCP_COLLECTION,
    storeGCP IN VARCHAR2 DEFAULT 'TRUE',
    SRID IN Number DEFAULT NULL,
    modelCoordinateLocation IN Number DEFAULT NULL,
    setResolution IN VARCHAR2 DEFAULT NULL
  ) Return MDSYS.SDO_NUMBER_ARRAY;
  -- RMSs
  Function georeference(
    inGeoraster IN OUT MDSYS.SDO_GEORASTER,
    gcpGeorefModel IN SDO_GEOR_GCPGEOREFTYPE,
    storeGCP IN VARCHAR2 DEFAULT 'TRUE',
    SRID IN Number DEFAULT NULL,
    modelCoordinateLocation IN Number DEFAULT NULL,
    setResolution IN VARCHAR2 DEFAULT NULL
  ) Return MDSYS.SDO_NUMBER_ARRAY;
  -- RMSs
  -- For this function, the GCPs should be already stored in the metadata
  --
  Function georeference(
    inGeoraster IN OUT MDSYS.SDO_GEORASTER,
    FFMethod IN VARCHAR2 DEFAULT NULL,
    SRID IN Number DEFAULT NULL,
    modelCoordinateLocation IN Number DEFAULT NULL,
    setResolution IN VARCHAR2 DEFAULT NULL
  ) Return MDSYS.SDO_NUMBER_ARRAY;
  -- RMSs
  --
  -- Georeference XML data manipulation functions
  --
  Function getGCPGeorefModel(inGeoraster IN MDSYS.SDO_GEORASTER) Return MDSYS.SDO_GEOR_GCPGEOREFTYPE;
  PROCEDURE setGCPGeorefModel(
    inGeoraster IN OUT MDSYS.SDO_GEORASTER,
    gcpGeorefModel IN SDO_GEOR_GCPGEOREFTYPE
  );
  Function getGCPGeorefMethod(inGeoraster IN MDSYS.SDO_GEORASTER) Return VARCHAR2 DETERMINISTIC PARALLEL_ENABLE;
  PROCEDURE setGCPGeorefMethod(
    inGeoraster IN OUT MDSYS.SDO_GEORASTER,
    georefMethod IN VARCHAR2
  );
  Function getControlPoint(
    inGeoraster IN MDSYS.SDO_GEORASTER,
    controlPointID IN VARCHAR2
  ) Return SDO_GEOR_GCP DETERMINISTIC PARALLEL_ENABLE;
  PROCEDURE setControlPoint(
    inGeoraster IN OUT MDSYS.SDO_GEORASTER,
    controlPoint IN SDO_GEOR_GCP
  );
  PROCEDURE deleteControlPoint(
    inGeoraster IN OUT MDSYS.SDO_GEORASTER,
    controlPointID IN VARCHAR2
  );
  -- ---------------------------------------------------------------------
  --    Rectify GeoRaster Objects
  --
  -- ---------------------------------------------------------------------
  --
  -- NAME:
  --      rectify
  --
  -- DESCRIPTION
  --      Rectify a geo-referenced GeoRaster object.
  --
  --      NOTE:
  --         (1) The input GeoRaster object should be referenced
  --         (2) Use average elevation height or dem georaster (Ortho-Rectify)
  --
  -- ARGUMENTS
  --
  -- Input:
  --      inGeoRaster      - Source SDO_GEORASTER object to be re-projected
  --      pyramidLevel     - The pyramid level of the source GeoRaster object
  --      elevationParam   - Average elevation height of the surface
  --      dem              - Digital elevation model for ortho-rectification
  --
  -- Request:
  --      outSRID          - The SRID defines the new projection
  --      outModelCoordLoc - Specify the output cell coordinate system type,
  --                          0 for CENTER or 1 for UPPERLEFT.
  --      cropArea         - The crop area of the output image to be re-projected.
  --      polygonClip      - Whether to do polygon clipping. If NULL, defaults
  --                         to FALSE.
  --      layerNumbers     - The logical layers to be processed
  --      outResolutions   - Resolution(s) of each dimension of the output image
  --      resolutionUnit   - Unit of the resolution
  --      referencePoint   - The reference point to alligned the output image.
  --                         If this is null, the reference point implicitly
  --                         uses the upper left corner of the cropArea, or
  --                         when the cropArea is null, the upper left corner
  --                         of the projected output extent.
  --                         This reference point must be in a SDO_GEOMETRY that
  --                         describes a point.
  --      resampleParam    - The resampling method
  --
  -- Output:
  --      storageParam     - A string specifying storage parameters for the result.
  --      outGeoRaster     - Re-projected persistent GeoRaster Object
  --      rasterBlob       - The re-projected transient GeoRaster Object
  --      outArea          - The re-projected transient GeoRaster Object extent
  --                         in model coordinates.
  --      outWindow        - The re-projected transient GeoRaster Object extent
  --                         in cell coordinates.
  --      bgValues         - Background values for filling empty pixels
  --                         one for each band
  --
  -- RETURNS
  --      For persistent output the outGeoRaster is the rectified GeoRaster object
  --      For transient output the rasterBlob is the rectified resulted image and
  --      outArea and outWindow specify the transient rasterBlob information
  PROCEDURE rectify (
    -- input
    inGeoRaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    elevationParam IN VARCHAR2,
    dem IN MDSYS.SDO_GEORASTER,
    -- request
    outSRID IN NUMBER,
    outModelCoordLoc IN NUMBER,
    cropArea IN SDO_GEOMETRY,
    polygonClip IN VARCHAR2,
    layerNumbers IN VARCHAR2,
    outResolutions IN SDO_NUMBER_ARRAY,
    resolutionUnit IN VARCHAR2,
    referencePoint IN MDSYS.SDO_GEOMETRY,
    resampleParam IN VARCHAR2,
    -- output (georaster)
    storageParam IN VARCHAR2,
    outGeoRaster IN OUT MDSYS.SDO_GEORASTER,
    bgValues IN SDO_NUMBER_ARRAY DEFAULT NULL
  );
  PROCEDURE rectify (
    -- input
    inGeoRaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER,
    elevationParam IN VARCHAR2,
    dem IN MDSYS.SDO_GEORASTER,
    -- request
    outSRID IN NUMBER,
    outModelCoordLoc IN NUMBER,
    cropArea IN SDO_GEOMETRY,
    polygonClip IN VARCHAR2,
    layerNumbers IN VARCHAR2,
    outResolutions IN SDO_NUMBER_ARRAY,
    resolutionUnit IN VARCHAR2,
    referencePoint IN MDSYS.SDO_GEOMETRY,
    resampleParam IN VARCHAR2,
    -- output (blob)
    storageParam IN VARCHAR2,
    rasterBlob IN OUT NOCOPY BLOB,
    outArea OUT SDO_GEOMETRY,
    outWindow OUT SDO_NUMBER_ARRAY,
    bgValues IN SDO_NUMBER_ARRAY DEFAULT NULL
  );
  --
  -- NAME:
  --      generateSpatialResolutions
  --
  -- DESCRIPTION
  --      Generate the spatial resolutions and set it to the georaster metadata
  --
  --      NOTE: The input GeoRaster object should be referenced otherwise null
  --            is returned.
  --
  -- PARAMETERS:
  --      geoRaster        - Source SDO_GEORASTER object
  --      outResolution    - Output resolution in SDO_NUMBER_ARRAY for pyramid
  --                         level 0 and in given georaster's SRID and unit.
  --
  PROCEDURE generateSpatialResolutions(
    geoRaster IN OUT MDSYS.SDO_GEORASTER,
    outResolution OUT SDO_NUMBER_ARRAY
  );
  --
  -- NAME:
  --      generateSpatialResolutions
  --
  -- DESCRIPTION
  --      Generate the spatial resolutions
  --
  --      NOTE: The input GeoRaster object should be referenced otherwise null
  --            is returned.
  --
  -- PARAMETERS:
  --      geoRaster        - Source SDO_GEORASTER object
  --      pyramidLevel     - The pyramid level of the returned resolution,
  --                         default to the pyramid level 0.
  --      SRID             - The SRID for the returned resolution, default to the
  --                         given georaster's SRID.
  --      resolutionUnit   - The unit of the returned resolution. default to the
  --                         unit of the SRID.
  --
  -- RETURN:
  --      Resolution in SDO_NUMBER_ARRAY for the given georaster.
  --
  FUNCTION generateSpatialResolutions(
    geoRaster IN MDSYS.SDO_GEORASTER,
    pyramidLevel IN NUMBER DEFAULT NULL,
    SRID IN NUMBER DEFAULT NULL,
    resolutionUnit IN VARCHAR2 DEFAULT NULL
  ) RETURN SDO_NUMBER_ARRAY;
  END SDO_GEOR;
