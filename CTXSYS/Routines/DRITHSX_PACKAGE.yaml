schema: CTXSYS
name: DRITHSX
routineType: PACKAGE
returnParamater:
  name: SN.(--return--)
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 0
parameters:
- name: EXPAND.ERR
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 1
- name: EXPAND.OP
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: EXPAND.PHRASE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: EXPAND.LVL
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
- name: EXPAND.TNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 5
- name: EXPAND.RESTAB
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 6
- name: EXPAND0.ERR
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 1
- name: EXPAND0.OP
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: EXPAND0.PHRASE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: EXPAND0.TNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
- name: OUTPUT_STYLE.SHOWLEVEL
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 1
- name: OUTPUT_STYLE.SHOWQUALIFY
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 2
- name: OUTPUT_STYLE.SHOWPT
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 3
- name: OUTPUT_STYLE.SHOWID
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 4
- name: SN.PHRASE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: SN.TNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: SN.I
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 3
- name: TTT.TNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
routineDefinition: |-
  PACKAGE drithsx AS type exp_rec is record (
    xrel varchar2(12),
    xlevel number,
    xphrase varchar2(256)
  );
  type exp_tab is table of exp_rec index by binary_integer;
  pv_exp_tab exp_tab;
  /*---------------------------------- expand ----------------------------*/
  /*

     NAME

       expand



     DESCRIPTION

       generic thesaurus query expansion function



     ARGUMENTS

       err     - error return code

       op      - operation. Must be one of:

                  SYN, PT, TT, RT, BT, BTP, BTI, BTG, NT, NTP,

                  NTI, NTG, TR, TRSYN

       phrase  - phrase

       level   - level limit for BT* / NT*, language for TR*

       tname   - thesaurus name

       restab  - restab mode?



     NOTES

  */
  function expand(
    err out number,
    op in varchar2,
    phrase in varchar2,
    lvl in varchar2 default null,
    tname in varchar2 default 'DEFAULT',
    restab in boolean default FALSE
  ) return varchar2;
  function expand0(
    err out number,
    op in varchar2,
    phrase in varchar2,
    tname in varchar2 default 'DEFAULT'
  ) return varchar2;
  /*------------------------------- output_style -------------------------*/
  /*

     NAME

       output_style



     DESCRIPTION

       set the output style for the expansion functions



     ARGUMENTS

       showlevel   -- show level in bt/nt expansions

       showqualify -- show phrase qualifiers

       showpt      -- show preferred terms with *

       showid      -- show phrase ids



     NOTES

       level is a number then a colon at the start of the phrase

       pt is an asterisk then a colon at the start of the phrase

       id is a colon, then the id at the end of the phrase

       qualify is in parens after a space at the end of the phrase

          but before id



     example:



       preferred term

       |

       |   phrase

       |   |

       |   |      qualifier

       |   |      |

       |   |      |      phraseid

       |   |      |      |

       V   V      V      V

      {*:TURKEY (BIRD):1234}



     RETURN

  */
  PROCEDURE output_style (
    showlevel in boolean default false,
    showqualify in boolean default false,
    showpt in boolean default false,
    showid in boolean default false
  );
  /*------------------------------- sn -----------------------------------*/
  function sn(
    phrase in varchar2,
    tname in varchar2 default 'DEFAULT',
    i in number default '1'
  ) return varchar2;
  /*------------------------------- ttt -----------------------------------*/
  procedure ttt(tname in varchar2 default 'DEFAULT');
  end drithsx;
