schema: CTXSYS
name: DRVXMD
routineType: PACKAGE
returnParamater:
  name: SUBSTRINGENABLED.(--return--)
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 0
parameters:
- name: ALLOCATEDOCIDS.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: ALLOCATEDOCIDS.P_IXPID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: ALLOCATEDOCIDS.P_ALLOCSZ
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 3
- name: ALLOCATEDOCIDS.P_STARTID
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 4
- name: AUTOOPT_PREP.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: AUTOOPT_PREP.P_IXPID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: AUTOOPT_PREP.P_WAIT
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 3
- name: AUTOOPT_PREP.P_LOCKRET
  dataType: NUMBER
  parameterMode: INOUT
  ordinalPosition: 4
- name: AUTOOPT_PUSH_TOKEN.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: AUTOOPT_PUSH_TOKEN.P_MESSAGE
  dataType: RAW
  parameterMode: IN
  ordinalPosition: 2
- name: CHECK_FILE_ACCESS_ROLE.P_USER
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: CHKINDEXOPTION.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: CHKINDEXOPTION.P_OPT
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: DECREMENTDOCCNT.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: DECREMENTDOCCNT.P_IXPID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: DECREMENTDOCCNT.P_DELTA
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 3
- name: GETBASETABLENAME.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: GETBASETABLENAME.P_IXPID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: GETDOCIDCOUNT.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: GETDOCIDCOUNT.P_IXPID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: GETFIELDSECNAME.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: GETFIELDSECNAME.P_SECID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: GETINDEXMD.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: GETINDEXMD.O_OWNER
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 2
- name: GETINDEXMD.O_OWNER#
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 3
- name: GETINDEXMD.O_NAME
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 4
- name: GETINDEXMD.O_TABLE_OBJ#
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 5
- name: GETINDEXMD.O_TABLE_DATAOBJ#
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 6
- name: GETINDEXMD.O_KEY_NAME
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 7
- name: GETINDEXMD.O_KEY_TYPE
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 8
- name: GETINDEXMD.O_TEXT_NAME
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 9
- name: GETINDEXMD.O_TEXT_TYPE
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 10
- name: GETINDEXMD.O_TEXT_LENGTH
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 11
- name: GETINDEXMD.O_LANG_COL
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 12
- name: GETINDEXMD.O_FMT_COL
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 13
- name: GETINDEXMD.O_CSET_COL
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 14
- name: GETINDEXMD.O_IDX_TYPE
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 15
- name: GETINDEXMD.O_IDX_OPTION
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 16
- name: GETINDEXMD.O_IDX_SYNC_TYPE
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 17
- name: GETINDEXMD.O_IDX_SYNC_MEMORY
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 18
- name: GETINDEXMD.O_IDX_SRC_NAME
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 19
- name: GETINDEXMD.O_IDX_SRC_ID
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 20
- name: GETINDEXMD.O_IDX_VERSION
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 21
- name: GETINDEXMD.O_CONFIG_COL
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 22
- name: GETINDEXPARTITION.O_ID
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 1
- name: GETINDEXPARTITION.O_TABPART_DATAOBJ#
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 2
- name: GETINDEXPARTITION.O_SYNC_TYPE
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 3
- name: GETINDEXPARTITION.O_SYNC_MEMORY
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 4
- name: GETINDEXPARTITION.O_OPTION
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 5
- name: GETINDEXPARTITION.I_CID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 6
- name: GETINDEXPARTITION.I_PNAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 7
- name: GETINDEXSTATS.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: GETINDEXSTATS.P_SMPLSZ
  dataType: NUMBER
  parameterMode: INOUT
  ordinalPosition: 2
- name: GETMVFLAG.TABLE_ID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: GETMVFLAG.OWNER_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: GETMVFLAG.OPT
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 3
- name: GETNEXTID.P_IDXID
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 1
- name: GETNEXTID.P_IXPID
  dataType: BINARY_INTEGER
  parameterMode: IN
  ordinalPosition: 2
- name: GETOBJDEFAULT.P_OATID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: GETOBJDEFAULT.O_DEFAULT
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 2
- name: GETPREFCLAOBJ.P_PREID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: GETPREFCLAOBJ.O_CLAID
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 2
- name: GETPREFCLAOBJ.O_OBJID
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 3
- name: GETSECDATATYPE.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: GETSECDATATYPE.P_SECID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: GETSLXMDATASECID.IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: INCREMENTDOCCNT.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: INCREMENTDOCCNT.P_IXPID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: INCREMENTDOCCNT.P_DELTA
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 3
- name: INDEXHASGTABLE.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: INDEXHASGTABLE.P_IXPID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: NEXTINDEXCDI.O_CDI_POS
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 1
- name: NEXTINDEXCDI.O_CDI_TYPE#
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 2
- name: NEXTINDEXCDI.O_CDI_LEN
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 3
- name: NEXTINDEXCDI.O_CDI_NAME
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 4
- name: NEXTINDEXCDI.O_CDI_SEC
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 5
- name: NEXTINDEXCDI.O_CDI_STYPE
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 6
- name: NEXTINDEXCDI.O_CDI_ID
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 7
- name: NEXTINDEXOBJECT.O_CLA_ID
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 1
- name: NEXTINDEXOBJECT.O_OBJ_ID
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 2
- name: NEXTINDEXOBJECT.O_ACNT
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 3
- name: NEXTINDEXVALUE.O_CLA_ID
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 1
- name: NEXTINDEXVALUE.O_ATT_ID
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 2
- name: NEXTINDEXVALUE.O_DATATYPE
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 3
- name: NEXTINDEXVALUE.O_SUB_GROUP
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 4
- name: NEXTINDEXVALUE.O_SUB_ATT_ID
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 5
- name: NEXTINDEXVALUE.O_SUB_DATATYPE
  dataType: BINARY_INTEGER
  parameterMode: OUT
  ordinalPosition: 6
- name: NEXTINDEXVALUE.O_VALUE
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 7
- name: NEXTPREFVALUE.O_VALUE
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 1
- name: NEXTPREFVALUE.O_OATID
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 2
- name: OPENINDEXMDSCAN.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: OPENPREFVALUE.P_PREID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: OPTGETSTATE.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: OPTGETSTATE.P_IXPID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: OPTGETSTATE.P_NTABLE_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: OPTGETSTATE.P_ITABLE_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
- name: OPTGETSTATE.P_SNTABLE_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 5
- name: OPTGETSTATE.P_BEG_S_OPT
  dataType: PL/SQL BOOLEAN
  parameterMode: IN
  ordinalPosition: 6
- name: OPTGETSTATE.O_OPT_TOKEN
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 7
- name: OPTGETSTATE.O_OPT_TYPE
  dataType: NUMBER
  parameterMode: OUT
  ordinalPosition: 8
- name: OPTGETTYPE.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: OPTGETTYPE.P_IXPID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: OPTGETTYPE.P_NTABLE_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: OPTGETTYPE.P_ITABLE_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 4
- name: OPTGETTYPE.P_SNTABLE_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 5
- name: OPTGETTYPE.O_OPT_TOKEN
  dataType: VARCHAR2
  parameterMode: OUT
  ordinalPosition: 6
- name: OPTGETTYPE.O_OPT_TYPE
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 7
- name: OPTSETSTATE.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: OPTSETSTATE.P_IXPID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: OPTSETSTATE.P_OPT_TOKEN
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: OPTSETSTATE.P_OPT_TYPE
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 4
- name: PROCESSN.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: PROCESSN.P_IXPID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: PROCESSN.DEL
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 3
- name: RECORDINDEXERROR.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: RECORDINDEXERROR.P_TEXTKEY
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: RECORDINDEXERROR.P_STACK
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: RECORDOPTTOKENERROR.TOKEN_TEXT
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: RECORDOPTTOKENERROR.TOKEN_TYPE
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 2
- name: SELECTUSERANLDICTLOB.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: SELECTUSERANLDICTLOB.P_DICTLANG
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: SET_REVERSE_DOCID_SWITCH.OWNER_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 1
- name: SET_REVERSE_DOCID_SWITCH.INDEX_NAME
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 2
- name: SET_REVERSE_DOCID_SWITCH.VALUE
  dataType: VARCHAR2
  parameterMode: IN
  ordinalPosition: 3
- name: SUBSTRINGENABLED.P_IDXID
  dataType: NUMBER
  parameterMode: IN
  ordinalPosition: 1
- name: TXNALGETKEY.P_KEY
  dataType: RAW
  parameterMode: INOUT
  ordinalPosition: 1
- name: TXNALSETKEY.P_KEY
  dataType: RAW
  parameterMode: IN
  ordinalPosition: 1
routineDefinition: |-
  package drvxmd authid current_user is
  /*---------------------------- GetIndexMD  -------------------------------*/
  /* fetch selected dr$index column values into out variables */
  procedure GetIndexMD(
    p_idxid in number,
    o_owner out varchar2,
    o_owner# out number,
    o_name out varchar2,
    o_table_obj# out number,
    o_table_dataobj# out number,
    o_key_name out varchar2,
    o_key_type out binary_integer,
    o_text_name out varchar2,
    o_text_type out binary_integer,
    o_text_length out binary_integer,
    o_lang_col out varchar2,
    o_fmt_col out varchar2,
    o_cset_col out varchar2,
    o_idx_type out binary_integer,
    o_idx_option out varchar2,
    o_idx_sync_type out varchar2,
    o_idx_sync_memory out binary_integer,
    o_idx_src_name out varchar2,
    o_idx_src_id out binary_integer,
    o_idx_version out binary_integer,
    o_config_col out varchar2
  );
  /*---------------------------- GetIndexPartition  -----------------------*/
  /* get dr$index_partition information */
  procedure GetIndexPartition(
    o_id out number,
    o_tabpart_dataobj# out number,
    o_sync_type out varchar2,
    o_sync_memory out number,
    o_option out varchar2,
    i_cid in number,
    i_pname in varchar2
  );
  /*---------------------------- OpenIndexMDScan ----------------------*/
  /* open dr$index_object and value cursors */
  procedure OpenIndexMDScan(p_idxid in number);
  /*---------------------------- NextIndexObject ---------------------------*/
  /* get next dr$index_object cursor */
  function NextIndexObject(
    o_cla_id out binary_integer,
    o_obj_id out binary_integer,
    o_acnt out binary_integer
  ) return binary_integer;
  /*---------------------------- NextIndexValue ----------------------------*/
  /* get next dr$index_value cursor */
  function NextIndexValue(
    o_cla_id out binary_integer,
    o_att_id out binary_integer,
    o_datatype out binary_integer,
    o_sub_group out binary_integer,
    o_sub_att_id out binary_integer,
    o_sub_datatype out binary_integer,
    o_value out varchar2
  ) return binary_integer;
  /*---------------------------- NextIndexCDI ---------------------------*/
  /* get next dr$index_cdi_column cursor */
  function NextIndexCDI(
    o_cdi_pos out binary_integer,
    o_cdi_type# out binary_integer,
    o_cdi_len out binary_integer,
    o_cdi_name out varchar2,
    o_cdi_sec out varchar2,
    o_cdi_stype out binary_integer,
    o_cdi_id out binary_integer
  ) return binary_integer;
  /*---------------------------- GetDocidCount -----------------------------*/
  /* get docid count */
  function GetDocidCount(
    p_idxid in number,
    p_ixpid in number default null
  ) return number;
  /*--------------------------- GetNextId -------------------------------------*/
  /* get next docid */
  function GetNextId(
    p_idxid in binary_integer,
    p_ixpid in binary_integer default null
  ) return binary_integer;
  /*---------------------------- GetIndexStats -----------------------------*/
  /* get index stats from dr$stats */
  procedure GetIndexStats(
    p_idxid in number,
    p_smplsz in out nocopy number
  );
  /*---------------------------- GetBaseTableName --------------------------*/
  /* get base table name */
  function GetBaseTableName(
    p_idxid in number,
    p_ixpid in number default null
  ) return varchar2;
  /*---------------------------- IncrementDocCnt --------------------------*/
  /* increment docid count */
  procedure IncrementDocCnt(
    p_idxid in number,
    p_ixpid in number,
    p_delta in number
  );
  /*--------------------------- DecrementDocCnt ------------------------------*/
  /* decrement docid count */
  procedure DecrementDocCnt(
    p_idxid in number,
    p_ixpid in number,
    p_delta in number
  );
  /*---------------------------- AllocateDocids ---------------------------*/
  /* allocate docids */
  procedure AllocateDocids(
    p_idxid in number,
    p_ixpid in number,
    p_allocsz in binary_integer,
    p_startid out number
  );
  /*---------------------------- RecordIndexError -------------------------*/
  /* records an error to the dr$index_error table */
  procedure RecordIndexError(
    p_idxid in number,
    p_textkey in varchar2,
    p_stack in varchar2
  );
  /*---------------------------- OptStartTimer -----------------------------*/
  /* starts optimization timer */
  procedure OptStartTimer;
  /*---------------------------- OptGetTimer -------------------------------*/
  /* gets optimization timer */
  function OptGetTimer return binary_integer;
  /*---------------------------- OptGetState -------------------------------*/
  /* get full optimize state */
  procedure OptGetState(
    p_idxid in number,
    p_ixpid in number,
    p_ntable_name in varchar2,
    p_itable_name in varchar2,
    p_sntable_name in varchar2,
    p_beg_s_opt in boolean,
    o_opt_token out varchar2,
    o_opt_type out number
  );
  /*---------------------------- OptGetType -------------------------------*/
  /* get type optimize start token */
  procedure OptGetType(
    p_idxid in number,
    p_ixpid in number,
    p_ntable_name in varchar2,
    p_itable_name in varchar2,
    p_sntable_name in varchar2,
    o_opt_token out varchar2,
    o_opt_type in number
  );
  /*---------------------------- OptSetState -------------------------------*/
  /* set full optimize state */
  procedure OptSetState(
    p_idxid in number,
    p_ixpid in number,
    p_opt_token in varchar2,
    p_opt_type in number
  );
  /*---------------------------- GetFieldSecName -----------------------------*/
  /* get field section name */
  function GetFieldSecName (p_idxid in number, p_secid in number) return varchar2;
  /*---------------------------- GetPrefClaObj -----------------------------*/
  procedure GetPrefClaObj(
    p_preid in number,
    o_claid out number,
    o_objid out number
  );
  /*---------------------------- GetObjDefault -----------------------------*/
  procedure GetObjDefault(
    p_oatid in number,
    o_default out varchar2
  );
  /*---------------------------- OpenPrefValue ------------------------------*/
  procedure OpenPrefValue(p_preid in number);
  /*---------------------------- NextPrefValue ------------------------------*/
  function NextPrefValue(
    o_value out varchar2,
    o_oatid out number
  ) return binary_integer;
  /*---------------- set_reverse_docid_switch  -------------------*/
  /*

    NAME

      Set_reverse_docid_switch



    DESCRIPTION

      Turns ON/OFF reverse docid processing for a specified index.



    ARGUMENTS

      owner_name     index owner

      index_name     index name

      value          switch value (ON or OFF)

  */
  PROCEDURE set_reverse_docid_switch(
    owner_name in varchar2,
    index_name in varchar2,
    value in varchar2
  );
  PRAGMA SUPPLEMENTAL_LOG_DATA(set_reverse_docid_switch, AUTO);
  /*------------------- get_functional_cache_size ----------------------------*/
  FUNCTION get_functional_cache_size RETURN number;
  /*--------------- GetMVFlag ------------------------------------------------*/
  /*

    NAME

      GetMVFlag



    DESCRIPTION

      Check whether it's index on Materialized View



    ARGUMENTs

      table_id

      owner_name

      opt              1 -- index on MView

                       0 -- not index on MView

  */
  PROCEDURE GetMVFlag(
    table_id in number,
    owner_name in varchar2,
    opt out binary_integer
  );
  /*---------------------------- GetSecDataType -----------------------------*/
  /* get section datatype, mainly for MDATA and SDATA */
  function GetSecDataType (p_idxid in number, p_secid in number) return number;
  /*---------------------------- ChkIndexOption -----------------------------*/
  /*

    Take in index id, and an option letter (see drdmlop() for a list of

    options), return 1 if the given option is set, 0 otherwise.

  */
  function ChkIndexOption (
    p_idxid in number,
    p_opt in varchar2
  ) return number;
  /*---------------------------- SelectUserAnlDictLob-----------------------------*/
  /*

    Take index id and dictionary language as input and return user supplied

    dictionary lob to be used by ATG auto lexer

  */
  function SelectUserAnlDictLob(
    p_idxid in number,
    p_dictlang in varchar2
  ) return clob;
  /*--------------------------- ctx_sqe_tbl_func ------------------------------*/
  /*

    Table function for creating the ctx_user_sqes view

  */
  type ctx_sqe_type is record(
    sqe_owner# number,
    sqe_name varchar2(30),
    sqe_query clob
  );
  type ctx_sqe_type_tab is table of ctx_sqe_type;
  function ctx_sqe_tbl_func return ctx_sqe_type_tab pipelined;
  /*---------------------- check_file_access_role -----------------------------*/
  /*

     Returns TRUE if the specified user has the role given by file_access_role

     and can therefore create/sync indexes using file or URL datastore

  */
  function check_file_access_role(p_user IN varchar2) return boolean;
  /*--------------------------- autoopt_prep --------------------------------*/
  /* autoopt_prep - preparation for autoopt */
  procedure autoopt_prep(
    p_idxid in number,
    p_ixpid in number,
    p_wait in number,
    p_lockret in out number
  );
  /*--------------------------- autoopt_clo --------------------------------*/
  /* autoopt_clo - close for autoopt */
  procedure autoopt_clo;
  /*--------------------------- autoopt_push_token --------------------------*/
  /* autoopt_push_token - push a token to autooptimize */
  procedure autoopt_push_token(
    p_idxid in number,
    p_message in raw
  );
  /*--------------------------- TxnalGetKey --------------------------------*/
  /* Return the key if it has been set.  Returns Null if not set            */
  procedure TxnalGetKey(p_key in out raw);
  /*--------------------------- TxnalSetKey --------------------------------*/
  /* Set the key.  Set flag                                                 */
  procedure TxnalSetKey(p_key in raw);
  /*------------------------ GetSLXMdataSecID ------------------------------*/
  /* Get section id/token type for DR$ML MDATA section, doc level lexer     */
  FUNCTION GetSLXMdataSecID(idxid in number) return number;
  /*------------------------ RecordOptTokenError ---------------------------*/
  PROCEDURE RecordOptTokenError(
    token_text in varchar2,
    token_type in number
  );
  /*----------------------- ProcessN -------------------------------*/
  PROCEDURE ProcessN(
    p_idxid in number,
    p_ixpid in number,
    del in number
  );
  /* 14175174: ------------- SubstringEnabled ------------------------*/
  FUNCTION SubstringEnabled(p_idxid in number) RETURN number;
  /*---------------------------- IndexHasGTable ------------------------------*/
  FUNCTION IndexHasGTable(
    p_idxid in number,
    p_ixpid in number default NULL
  ) RETURN boolean;
  end drvxmd;
